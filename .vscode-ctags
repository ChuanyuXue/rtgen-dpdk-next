!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_OUTPUT_MODE	u-ctags	/u-ctags or e-ctags/
!_TAG_PROGRAM_AUTHOR	Universal Ctags Team	//
!_TAG_PROGRAM_NAME	Universal Ctags	/Derived from Exuberant Ctags/
!_TAG_PROGRAM_URL	https://ctags.io/	/official site/
!_TAG_PROGRAM_VERSION	0.0.0	//
ADVERTISE_1000_FULL	config/igb/e1000_defines.h	/^#define ADVERTISE_1000_FULL /;"	d
ADVERTISE_1000_HALF	config/igb/e1000_defines.h	/^#define ADVERTISE_1000_HALF /;"	d
ADVERTISE_100_FULL	config/igb/e1000_defines.h	/^#define ADVERTISE_100_FULL /;"	d
ADVERTISE_100_HALF	config/igb/e1000_defines.h	/^#define ADVERTISE_100_HALF /;"	d
ADVERTISE_10_FULL	config/igb/e1000_defines.h	/^#define ADVERTISE_10_FULL /;"	d
ADVERTISE_10_HALF	config/igb/e1000_defines.h	/^#define ADVERTISE_10_HALF /;"	d
ALL_QUEUES	config/igb/e1000_82575.h	/^#define ALL_QUEUES /;"	d
AUTONEG_ADVERTISE_SPEED_DEFAULT	config/igb/e1000_defines.h	/^#define AUTONEG_ADVERTISE_SPEED_DEFAULT /;"	d
AUTO_ALL_MODES	config/igb/igb.h	/^#define AUTO_ALL_MODES	/;"	d
AUTO_READ_DONE_TIMEOUT	config/igb/e1000_defines.h	/^#define AUTO_READ_DONE_TIMEOUT /;"	d
AUX0_SEL_SDP0	config/igb/e1000_defines.h	/^#define AUX0_SEL_SDP0 /;"	d
AUX0_SEL_SDP1	config/igb/e1000_defines.h	/^#define AUX0_SEL_SDP1 /;"	d
AUX0_SEL_SDP2	config/igb/e1000_defines.h	/^#define AUX0_SEL_SDP2 /;"	d
AUX0_SEL_SDP3	config/igb/e1000_defines.h	/^#define AUX0_SEL_SDP3 /;"	d
AUX0_TS_SDP_EN	config/igb/e1000_defines.h	/^#define AUX0_TS_SDP_EN /;"	d
AUX1_SEL_SDP0	config/igb/e1000_defines.h	/^#define AUX1_SEL_SDP0 /;"	d
AUX1_SEL_SDP1	config/igb/e1000_defines.h	/^#define AUX1_SEL_SDP1 /;"	d
AUX1_SEL_SDP2	config/igb/e1000_defines.h	/^#define AUX1_SEL_SDP2 /;"	d
AUX1_SEL_SDP3	config/igb/e1000_defines.h	/^#define AUX1_SEL_SDP3 /;"	d
AUX1_TS_SDP_EN	config/igb/e1000_defines.h	/^#define AUX1_TS_SDP_EN /;"	d
BCM54616_E_PHY_ID	config/igb/e1000_defines.h	/^#define BCM54616_E_PHY_ID /;"	d
CC	src/makefile	/^CC = gcc$/;"	m
CLOCK_TAI	src/system.h	/^#define CLOCK_TAI /;"	d
COPPER_LINK_UP_LIMIT	config/igb/e1000_defines.h	/^#define COPPER_LINK_UP_LIMIT /;"	d
CR_1000T_FD_CAPS	config/igb/e1000_defines.h	/^#define CR_1000T_FD_CAPS /;"	d
CR_1000T_HD_CAPS	config/igb/e1000_defines.h	/^#define CR_1000T_HD_CAPS /;"	d
CR_1000T_MS_ENABLE	config/igb/e1000_defines.h	/^#define CR_1000T_MS_ENABLE /;"	d
CR_1000T_MS_VALUE	config/igb/e1000_defines.h	/^#define CR_1000T_MS_VALUE /;"	d
CYCLE	dpdk/cy_2p1q.c	/^#define CYCLE /;"	d	file:
CYCLE	dpdk/cy_base.c	/^#define CYCLE /;"	d	file:
CYCLE	dpdk/cy_func.c	/^#define CYCLE /;"	d	file:
CYCLE	dpdk/cy_func_multicore.c	/^#define CYCLE /;"	d	file:
CYCLE	dpdk/cy_timer.c	/^#define CYCLE /;"	d	file:
CYCLE	dpdk/timer_test.c	/^#define CYCLE /;"	d	file:
DEADLINE_MODE	src/flow.h	/^#define DEADLINE_MODE /;"	d
DEFAULT_CONFIG_PATH	src/flow.h	/^#define DEFAULT_CONFIG_PATH /;"	d
DEFAULT_DEBUG_FLAG	src/flow.h	/^#define DEFAULT_DEBUG_FLAG /;"	d
DEFAULT_ETF_FLAG	src/flow.h	/^#define DEFAULT_ETF_FLAG /;"	d
DEFAULT_HW_FLAG	src/flow.h	/^#define DEFAULT_HW_FLAG /;"	d
DEFAULT_LOOPBACK_FLAG	src/flow.h	/^#define DEFAULT_LOOPBACK_FLAG /;"	d
DEFAULT_MSG_ENABLE	config/igb/igb_main.c	/^#define DEFAULT_MSG_ENABLE /;"	d	file:
DEFAULT_MULTI_FLOW	src/flow.h	/^#define DEFAULT_MULTI_FLOW /;"	d
DEFAULT_NS_OFFSET	src/flow.h	/^#define DEFAULT_NS_OFFSET /;"	d
DEFAULT_OFFSET	src/flow.h	/^#define DEFAULT_OFFSET /;"	d
DEFAULT_PAYLOAD	src/flow.h	/^#define DEFAULT_PAYLOAD /;"	d
DEFAULT_PERIOD	src/flow.h	/^#define DEFAULT_PERIOD /;"	d
DEFAULT_PRIORITY	src/flow.h	/^#define DEFAULT_PRIORITY /;"	d
DEFAULT_RELAY_FLAG	src/flow.h	/^#define DEFAULT_RELAY_FLAG /;"	d
DEFAULT_RUNTIME	src/flow.h	/^#define DEFAULT_RUNTIME /;"	d
DEFAULT_TIME_DELTA	src/flow.h	/^#define DEFAULT_TIME_DELTA /;"	d
DELTA_EARLIEST	dpdk/cy_2p1q.c	/^#define DELTA_EARLIEST /;"	d	file:
DELTA_EARLIEST	dpdk/cy_base.c	/^#define DELTA_EARLIEST /;"	d	file:
DELTA_EARLIEST	dpdk/cy_func.c	/^#define DELTA_EARLIEST /;"	d	file:
DELTA_EARLIEST	dpdk/cy_func_multicore.c	/^#define DELTA_EARLIEST /;"	d	file:
DELTA_EARLY	dpdk/cy_timer.c	/^#define DELTA_EARLY /;"	d	file:
DELTA_LATE	dpdk/cy_timer.c	/^#define DELTA_LATE /;"	d	file:
DELTA_LATEST	dpdk/cy_2p1q.c	/^#define DELTA_LATEST /;"	d	file:
DELTA_LATEST	dpdk/cy_base.c	/^#define DELTA_LATEST /;"	d	file:
DELTA_LATEST	dpdk/cy_func.c	/^#define DELTA_LATEST /;"	d	file:
DELTA_LATEST	dpdk/cy_func_multicore.c	/^#define DELTA_LATEST /;"	d	file:
DESC_NEEDED	config/igb/igb.h	/^#define DESC_NEEDED /;"	d
DST_ETH_ADDR	dpdk/cy_func.c	/^#define DST_ETH_ADDR /;"	d	file:
DST_ETH_ADDR	dpdk/cy_func_multicore.c	/^#define DST_ETH_ADDR /;"	d	file:
DST_IP	dpdk/cy_func.c	/^#define DST_IP /;"	d	file:
DST_IP	dpdk/cy_func_multicore.c	/^#define DST_IP /;"	d	file:
DST_PORT	dpdk/cy_func.c	/^#define DST_PORT /;"	d	file:
DST_PORT	dpdk/cy_func_multicore.c	/^#define DST_PORT /;"	d	file:
E1000_82580_PHY_POWER_MGMT	config/igb/e1000_phy.h	/^#define E1000_82580_PHY_POWER_MGMT	/;"	d
E1000_82580_PM_D0_LPLU	config/igb/e1000_phy.h	/^#define E1000_82580_PM_D0_LPLU	/;"	d
E1000_82580_PM_D3_LPLU	config/igb/e1000_phy.h	/^#define E1000_82580_PM_D3_LPLU	/;"	d
E1000_82580_PM_GO_LINKD	config/igb/e1000_phy.h	/^#define E1000_82580_PM_GO_LINKD	/;"	d
E1000_82580_PM_SPD	config/igb/e1000_phy.h	/^#define E1000_82580_PM_SPD	/;"	d
E1000_ADVTXD_DCMD_DEXT	config/igb/e1000_82575.h	/^#define E1000_ADVTXD_DCMD_DEXT /;"	d
E1000_ADVTXD_DCMD_EOP	config/igb/e1000_82575.h	/^#define E1000_ADVTXD_DCMD_EOP /;"	d
E1000_ADVTXD_DCMD_IFCS	config/igb/e1000_82575.h	/^#define E1000_ADVTXD_DCMD_IFCS /;"	d
E1000_ADVTXD_DCMD_RS	config/igb/e1000_82575.h	/^#define E1000_ADVTXD_DCMD_RS /;"	d
E1000_ADVTXD_DCMD_TSE	config/igb/e1000_82575.h	/^#define E1000_ADVTXD_DCMD_TSE /;"	d
E1000_ADVTXD_DCMD_VLE	config/igb/e1000_82575.h	/^#define E1000_ADVTXD_DCMD_VLE /;"	d
E1000_ADVTXD_DTYP_CTXT	config/igb/e1000_82575.h	/^#define E1000_ADVTXD_DTYP_CTXT /;"	d
E1000_ADVTXD_DTYP_DATA	config/igb/e1000_82575.h	/^#define E1000_ADVTXD_DTYP_DATA /;"	d
E1000_ADVTXD_L4LEN_SHIFT	config/igb/e1000_82575.h	/^#define E1000_ADVTXD_L4LEN_SHIFT /;"	d
E1000_ADVTXD_MACLEN_SHIFT	config/igb/e1000_82575.h	/^#define E1000_ADVTXD_MACLEN_SHIFT /;"	d
E1000_ADVTXD_MAC_TSTAMP	config/igb/e1000_82575.h	/^#define E1000_ADVTXD_MAC_TSTAMP /;"	d
E1000_ADVTXD_MSS_SHIFT	config/igb/e1000_82575.h	/^#define E1000_ADVTXD_MSS_SHIFT /;"	d
E1000_ADVTXD_PAYLEN_SHIFT	config/igb/e1000_82575.h	/^#define E1000_ADVTXD_PAYLEN_SHIFT /;"	d
E1000_ADVTXD_TUCMD_IPV4	config/igb/e1000_82575.h	/^#define E1000_ADVTXD_TUCMD_IPV4 /;"	d
E1000_ADVTXD_TUCMD_L4T_SCTP	config/igb/e1000_82575.h	/^#define E1000_ADVTXD_TUCMD_L4T_SCTP /;"	d
E1000_ADVTXD_TUCMD_L4T_TCP	config/igb/e1000_82575.h	/^#define E1000_ADVTXD_TUCMD_L4T_TCP /;"	d
E1000_ADVTXD_TUCMD_L4T_UDP	config/igb/e1000_82575.h	/^#define E1000_ADVTXD_TUCMD_L4T_UDP /;"	d
E1000_AIT	config/igb/e1000_regs.h	/^#define E1000_AIT /;"	d
E1000_ALGNERRC	config/igb/e1000_regs.h	/^#define E1000_ALGNERRC /;"	d
E1000_ALL_100_SPEED	config/igb/e1000_defines.h	/^#define E1000_ALL_100_SPEED /;"	d
E1000_ALL_10_SPEED	config/igb/e1000_defines.h	/^#define E1000_ALL_10_SPEED /;"	d
E1000_ALL_FULL_DUPLEX	config/igb/e1000_defines.h	/^#define E1000_ALL_FULL_DUPLEX /;"	d
E1000_ALL_HALF_DUPLEX	config/igb/e1000_defines.h	/^#define E1000_ALL_HALF_DUPLEX /;"	d
E1000_ALL_NOT_GIG	config/igb/e1000_defines.h	/^#define E1000_ALL_NOT_GIG /;"	d
E1000_ALL_SPEED_DUPLEX	config/igb/e1000_defines.h	/^#define E1000_ALL_SPEED_DUPLEX /;"	d
E1000_ALT_MAC_ADDRESS_OFFSET_LAN0	config/igb/e1000_hw.h	/^#define E1000_ALT_MAC_ADDRESS_OFFSET_LAN0 /;"	d
E1000_ALT_MAC_ADDRESS_OFFSET_LAN1	config/igb/e1000_hw.h	/^#define E1000_ALT_MAC_ADDRESS_OFFSET_LAN1 /;"	d
E1000_ALT_MAC_ADDRESS_OFFSET_LAN2	config/igb/e1000_hw.h	/^#define E1000_ALT_MAC_ADDRESS_OFFSET_LAN2 /;"	d
E1000_ALT_MAC_ADDRESS_OFFSET_LAN3	config/igb/e1000_hw.h	/^#define E1000_ALT_MAC_ADDRESS_OFFSET_LAN3 /;"	d
E1000_AUXSTMPH0	config/igb/e1000_regs.h	/^#define E1000_AUXSTMPH0 /;"	d
E1000_AUXSTMPH1	config/igb/e1000_regs.h	/^#define E1000_AUXSTMPH1 /;"	d
E1000_AUXSTMPL0	config/igb/e1000_regs.h	/^#define E1000_AUXSTMPL0 /;"	d
E1000_AUXSTMPL1	config/igb/e1000_regs.h	/^#define E1000_AUXSTMPL1 /;"	d
E1000_B2OGPRC	config/igb/e1000_regs.h	/^#define E1000_B2OGPRC	/;"	d
E1000_B2OSPC	config/igb/e1000_regs.h	/^#define E1000_B2OSPC	/;"	d
E1000_BLK_PHY_RESET	config/igb/e1000_defines.h	/^#define E1000_BLK_PHY_RESET /;"	d
E1000_BPRC	config/igb/e1000_regs.h	/^#define E1000_BPRC /;"	d
E1000_BPTC	config/igb/e1000_regs.h	/^#define E1000_BPTC /;"	d
E1000_CABLE_LENGTH_UNDEFINED	config/igb/e1000_phy.h	/^#define E1000_CABLE_LENGTH_UNDEFINED /;"	d
E1000_CBRMPC	config/igb/e1000_regs.h	/^#define E1000_CBRMPC /;"	d
E1000_CBTMPC	config/igb/e1000_regs.h	/^#define E1000_CBTMPC /;"	d
E1000_CCMCTL	config/igb/e1000_regs.h	/^#define E1000_CCMCTL /;"	d
E1000_CEXTERR	config/igb/e1000_regs.h	/^#define E1000_CEXTERR /;"	d
E1000_COLC	config/igb/e1000_regs.h	/^#define E1000_COLC /;"	d
E1000_COLD_SHIFT	config/igb/e1000_defines.h	/^#define E1000_COLD_SHIFT /;"	d
E1000_COLLISION_DISTANCE	config/igb/e1000_defines.h	/^#define E1000_COLLISION_DISTANCE /;"	d
E1000_COLLISION_THRESHOLD	config/igb/e1000_defines.h	/^#define E1000_COLLISION_THRESHOLD /;"	d
E1000_CONNSW	config/igb/e1000_regs.h	/^#define E1000_CONNSW /;"	d
E1000_CONNSW_AUTOSENSE_CONF	config/igb/e1000_defines.h	/^#define E1000_CONNSW_AUTOSENSE_CONF	/;"	d
E1000_CONNSW_AUTOSENSE_EN	config/igb/e1000_defines.h	/^#define E1000_CONNSW_AUTOSENSE_EN	/;"	d
E1000_CONNSW_ENRGSRC	config/igb/e1000_defines.h	/^#define E1000_CONNSW_ENRGSRC /;"	d
E1000_CONNSW_PHYSD	config/igb/e1000_defines.h	/^#define E1000_CONNSW_PHYSD	/;"	d
E1000_CONNSW_PHY_PDN	config/igb/e1000_defines.h	/^#define E1000_CONNSW_PHY_PDN	/;"	d
E1000_CONNSW_SERDESD	config/igb/e1000_defines.h	/^#define E1000_CONNSW_SERDESD	/;"	d
E1000_CRCERRS	config/igb/e1000_regs.h	/^#define E1000_CRCERRS /;"	d
E1000_CTRL	config/igb/e1000_regs.h	/^#define E1000_CTRL /;"	d
E1000_CTRL_ADVD3WUC	config/igb/e1000_defines.h	/^#define E1000_CTRL_ADVD3WUC /;"	d
E1000_CTRL_ASDE	config/igb/e1000_defines.h	/^#define E1000_CTRL_ASDE /;"	d
E1000_CTRL_DEV_RST	config/igb/e1000_82575.h	/^#define E1000_CTRL_DEV_RST /;"	d
E1000_CTRL_EN_PHY_PWR_MGMT	config/igb/e1000_defines.h	/^#define E1000_CTRL_EN_PHY_PWR_MGMT /;"	d
E1000_CTRL_EXT	config/igb/e1000_regs.h	/^#define E1000_CTRL_EXT /;"	d
E1000_CTRL_EXT_DRV_LOAD	config/igb/e1000_defines.h	/^#define E1000_CTRL_EXT_DRV_LOAD /;"	d
E1000_CTRL_EXT_EIAME	config/igb/e1000_defines.h	/^#define E1000_CTRL_EXT_EIAME	/;"	d
E1000_CTRL_EXT_IRCA	config/igb/e1000_defines.h	/^#define E1000_CTRL_EXT_IRCA	/;"	d
E1000_CTRL_EXT_LINK_MODE_1000BASE_KX	config/igb/e1000_defines.h	/^#define E1000_CTRL_EXT_LINK_MODE_1000BASE_KX	/;"	d
E1000_CTRL_EXT_LINK_MODE_GMII	config/igb/e1000_defines.h	/^#define E1000_CTRL_EXT_LINK_MODE_GMII	/;"	d
E1000_CTRL_EXT_LINK_MODE_MASK	config/igb/e1000_defines.h	/^#define E1000_CTRL_EXT_LINK_MODE_MASK	/;"	d
E1000_CTRL_EXT_LINK_MODE_PCIE_SERDES	config/igb/e1000_defines.h	/^#define E1000_CTRL_EXT_LINK_MODE_PCIE_SERDES	/;"	d
E1000_CTRL_EXT_LINK_MODE_SGMII	config/igb/e1000_defines.h	/^#define E1000_CTRL_EXT_LINK_MODE_SGMII	/;"	d
E1000_CTRL_EXT_PBA_CLR	config/igb/e1000_defines.h	/^#define E1000_CTRL_EXT_PBA_CLR	/;"	d
E1000_CTRL_EXT_PFRSTD	config/igb/e1000_defines.h	/^#define E1000_CTRL_EXT_PFRSTD	/;"	d
E1000_CTRL_EXT_PHYPDEN	config/igb/e1000_defines.h	/^#define E1000_CTRL_EXT_PHYPDEN	/;"	d
E1000_CTRL_EXT_SDLPE	config/igb/e1000_defines.h	/^#define E1000_CTRL_EXT_SDLPE	/;"	d
E1000_CTRL_EXT_SDP2_DATA	config/igb/e1000_defines.h	/^#define E1000_CTRL_EXT_SDP2_DATA /;"	d
E1000_CTRL_EXT_SDP2_DIR	config/igb/e1000_defines.h	/^#define E1000_CTRL_EXT_SDP2_DIR /;"	d
E1000_CTRL_EXT_SDP3_DATA	config/igb/e1000_defines.h	/^#define E1000_CTRL_EXT_SDP3_DATA /;"	d
E1000_CTRL_EXT_SDP3_DIR	config/igb/e1000_defines.h	/^#define E1000_CTRL_EXT_SDP3_DIR /;"	d
E1000_CTRL_FD	config/igb/e1000_defines.h	/^#define E1000_CTRL_FD /;"	d
E1000_CTRL_FRCDPX	config/igb/e1000_defines.h	/^#define E1000_CTRL_FRCDPX /;"	d
E1000_CTRL_FRCSPD	config/igb/e1000_defines.h	/^#define E1000_CTRL_FRCSPD /;"	d
E1000_CTRL_GIO_MASTER_DISABLE	config/igb/e1000_defines.h	/^#define E1000_CTRL_GIO_MASTER_DISABLE /;"	d
E1000_CTRL_I2C_ENA	config/igb/e1000_defines.h	/^#define E1000_CTRL_I2C_ENA /;"	d
E1000_CTRL_ILOS	config/igb/e1000_defines.h	/^#define E1000_CTRL_ILOS /;"	d
E1000_CTRL_LRST	config/igb/e1000_defines.h	/^#define E1000_CTRL_LRST /;"	d
E1000_CTRL_PHY_RST	config/igb/e1000_defines.h	/^#define E1000_CTRL_PHY_RST /;"	d
E1000_CTRL_RFCE	config/igb/e1000_defines.h	/^#define E1000_CTRL_RFCE /;"	d
E1000_CTRL_RST	config/igb/e1000_defines.h	/^#define E1000_CTRL_RST /;"	d
E1000_CTRL_SDP0_DIR	config/igb/e1000_defines.h	/^#define E1000_CTRL_SDP0_DIR /;"	d
E1000_CTRL_SDP1_DIR	config/igb/e1000_defines.h	/^#define E1000_CTRL_SDP1_DIR /;"	d
E1000_CTRL_SLU	config/igb/e1000_defines.h	/^#define E1000_CTRL_SLU /;"	d
E1000_CTRL_SPD_100	config/igb/e1000_defines.h	/^#define E1000_CTRL_SPD_100 /;"	d
E1000_CTRL_SPD_1000	config/igb/e1000_defines.h	/^#define E1000_CTRL_SPD_1000 /;"	d
E1000_CTRL_SPD_SEL	config/igb/e1000_defines.h	/^#define E1000_CTRL_SPD_SEL /;"	d
E1000_CTRL_SWDPIN0	config/igb/e1000_defines.h	/^#define E1000_CTRL_SWDPIN0 /;"	d
E1000_CTRL_SWDPIN1	config/igb/e1000_defines.h	/^#define E1000_CTRL_SWDPIN1 /;"	d
E1000_CTRL_TFCE	config/igb/e1000_defines.h	/^#define E1000_CTRL_TFCE /;"	d
E1000_CTRL_VME	config/igb/e1000_defines.h	/^#define E1000_CTRL_VME /;"	d
E1000_CT_SHIFT	config/igb/e1000_defines.h	/^#define E1000_CT_SHIFT /;"	d
E1000_DAQF	config/igb/e1000_regs.h	/^#define E1000_DAQF(/;"	d
E1000_DAQF0	config/igb/e1000_regs.h	/^#define E1000_DAQF0 /;"	d
E1000_DC	config/igb/e1000_regs.h	/^#define E1000_DC /;"	d
E1000_DCA_CTRL	config/igb/e1000_regs.h	/^#define E1000_DCA_CTRL /;"	d
E1000_DCA_CTRL_DCA_MODE_CB2	config/igb/e1000_82575.h	/^#define E1000_DCA_CTRL_DCA_MODE_CB2 /;"	d
E1000_DCA_CTRL_DCA_MODE_DISABLE	config/igb/e1000_82575.h	/^#define E1000_DCA_CTRL_DCA_MODE_DISABLE /;"	d
E1000_DCA_RXCTRL	config/igb/e1000_regs.h	/^#define E1000_DCA_RXCTRL(/;"	d
E1000_DCA_RXCTRL_CPUID_MASK	config/igb/e1000_82575.h	/^#define E1000_DCA_RXCTRL_CPUID_MASK /;"	d
E1000_DCA_RXCTRL_CPUID_MASK_82576	config/igb/e1000_82575.h	/^#define E1000_DCA_RXCTRL_CPUID_MASK_82576 /;"	d
E1000_DCA_RXCTRL_CPUID_SHIFT	config/igb/e1000_82575.h	/^#define E1000_DCA_RXCTRL_CPUID_SHIFT /;"	d
E1000_DCA_RXCTRL_DATA_DCA_EN	config/igb/e1000_82575.h	/^#define E1000_DCA_RXCTRL_DATA_DCA_EN /;"	d
E1000_DCA_RXCTRL_DESC_DCA_EN	config/igb/e1000_82575.h	/^#define E1000_DCA_RXCTRL_DESC_DCA_EN /;"	d
E1000_DCA_RXCTRL_DESC_RRO_EN	config/igb/e1000_82575.h	/^#define E1000_DCA_RXCTRL_DESC_RRO_EN /;"	d
E1000_DCA_RXCTRL_HEAD_DCA_EN	config/igb/e1000_82575.h	/^#define E1000_DCA_RXCTRL_HEAD_DCA_EN /;"	d
E1000_DCA_TXCTRL	config/igb/e1000_regs.h	/^#define E1000_DCA_TXCTRL(/;"	d
E1000_DCA_TXCTRL_CPUID_MASK	config/igb/e1000_82575.h	/^#define E1000_DCA_TXCTRL_CPUID_MASK /;"	d
E1000_DCA_TXCTRL_CPUID_MASK_82576	config/igb/e1000_82575.h	/^#define E1000_DCA_TXCTRL_CPUID_MASK_82576 /;"	d
E1000_DCA_TXCTRL_CPUID_SHIFT	config/igb/e1000_82575.h	/^#define E1000_DCA_TXCTRL_CPUID_SHIFT /;"	d
E1000_DCA_TXCTRL_DATA_RRO_EN	config/igb/e1000_82575.h	/^#define E1000_DCA_TXCTRL_DATA_RRO_EN /;"	d
E1000_DCA_TXCTRL_DESC_DCA_EN	config/igb/e1000_82575.h	/^#define E1000_DCA_TXCTRL_DESC_DCA_EN /;"	d
E1000_DCA_TXCTRL_DESC_RRO_EN	config/igb/e1000_82575.h	/^#define E1000_DCA_TXCTRL_DESC_RRO_EN /;"	d
E1000_DCA_TXCTRL_TX_WB_RO_EN	config/igb/e1000_82575.h	/^#define E1000_DCA_TXCTRL_TX_WB_RO_EN /;"	d
E1000_DEV_ID_82575EB_COPPER	config/igb/e1000_hw.h	/^#define E1000_DEV_ID_82575EB_COPPER	/;"	d
E1000_DEV_ID_82575EB_FIBER_SERDES	config/igb/e1000_hw.h	/^#define E1000_DEV_ID_82575EB_FIBER_SERDES	/;"	d
E1000_DEV_ID_82575GB_QUAD_COPPER	config/igb/e1000_hw.h	/^#define E1000_DEV_ID_82575GB_QUAD_COPPER	/;"	d
E1000_DEV_ID_82576	config/igb/e1000_hw.h	/^#define E1000_DEV_ID_82576	/;"	d
E1000_DEV_ID_82576_FIBER	config/igb/e1000_hw.h	/^#define E1000_DEV_ID_82576_FIBER	/;"	d
E1000_DEV_ID_82576_NS	config/igb/e1000_hw.h	/^#define E1000_DEV_ID_82576_NS	/;"	d
E1000_DEV_ID_82576_NS_SERDES	config/igb/e1000_hw.h	/^#define E1000_DEV_ID_82576_NS_SERDES	/;"	d
E1000_DEV_ID_82576_QUAD_COPPER	config/igb/e1000_hw.h	/^#define E1000_DEV_ID_82576_QUAD_COPPER	/;"	d
E1000_DEV_ID_82576_QUAD_COPPER_ET2	config/igb/e1000_hw.h	/^#define E1000_DEV_ID_82576_QUAD_COPPER_ET2	/;"	d
E1000_DEV_ID_82576_SERDES	config/igb/e1000_hw.h	/^#define E1000_DEV_ID_82576_SERDES	/;"	d
E1000_DEV_ID_82576_SERDES_QUAD	config/igb/e1000_hw.h	/^#define E1000_DEV_ID_82576_SERDES_QUAD	/;"	d
E1000_DEV_ID_82580_COPPER	config/igb/e1000_hw.h	/^#define E1000_DEV_ID_82580_COPPER	/;"	d
E1000_DEV_ID_82580_COPPER_DUAL	config/igb/e1000_hw.h	/^#define E1000_DEV_ID_82580_COPPER_DUAL	/;"	d
E1000_DEV_ID_82580_FIBER	config/igb/e1000_hw.h	/^#define E1000_DEV_ID_82580_FIBER	/;"	d
E1000_DEV_ID_82580_QUAD_FIBER	config/igb/e1000_hw.h	/^#define E1000_DEV_ID_82580_QUAD_FIBER	/;"	d
E1000_DEV_ID_82580_SERDES	config/igb/e1000_hw.h	/^#define E1000_DEV_ID_82580_SERDES	/;"	d
E1000_DEV_ID_82580_SGMII	config/igb/e1000_hw.h	/^#define E1000_DEV_ID_82580_SGMII	/;"	d
E1000_DEV_ID_DH89XXCC_BACKPLANE	config/igb/e1000_hw.h	/^#define E1000_DEV_ID_DH89XXCC_BACKPLANE	/;"	d
E1000_DEV_ID_DH89XXCC_SERDES	config/igb/e1000_hw.h	/^#define E1000_DEV_ID_DH89XXCC_SERDES	/;"	d
E1000_DEV_ID_DH89XXCC_SFP	config/igb/e1000_hw.h	/^#define E1000_DEV_ID_DH89XXCC_SFP	/;"	d
E1000_DEV_ID_DH89XXCC_SGMII	config/igb/e1000_hw.h	/^#define E1000_DEV_ID_DH89XXCC_SGMII	/;"	d
E1000_DEV_ID_I210_COPPER	config/igb/e1000_hw.h	/^#define E1000_DEV_ID_I210_COPPER	/;"	d
E1000_DEV_ID_I210_COPPER_FLASHLESS	config/igb/e1000_hw.h	/^#define E1000_DEV_ID_I210_COPPER_FLASHLESS	/;"	d
E1000_DEV_ID_I210_FIBER	config/igb/e1000_hw.h	/^#define E1000_DEV_ID_I210_FIBER	/;"	d
E1000_DEV_ID_I210_SERDES	config/igb/e1000_hw.h	/^#define E1000_DEV_ID_I210_SERDES	/;"	d
E1000_DEV_ID_I210_SERDES_FLASHLESS	config/igb/e1000_hw.h	/^#define E1000_DEV_ID_I210_SERDES_FLASHLESS	/;"	d
E1000_DEV_ID_I210_SGMII	config/igb/e1000_hw.h	/^#define E1000_DEV_ID_I210_SGMII	/;"	d
E1000_DEV_ID_I211_COPPER	config/igb/e1000_hw.h	/^#define E1000_DEV_ID_I211_COPPER	/;"	d
E1000_DEV_ID_I350_COPPER	config/igb/e1000_hw.h	/^#define E1000_DEV_ID_I350_COPPER	/;"	d
E1000_DEV_ID_I350_FIBER	config/igb/e1000_hw.h	/^#define E1000_DEV_ID_I350_FIBER	/;"	d
E1000_DEV_ID_I350_SERDES	config/igb/e1000_hw.h	/^#define E1000_DEV_ID_I350_SERDES	/;"	d
E1000_DEV_ID_I350_SGMII	config/igb/e1000_hw.h	/^#define E1000_DEV_ID_I350_SGMII	/;"	d
E1000_DEV_ID_I354_BACKPLANE_1GBPS	config/igb/e1000_hw.h	/^#define E1000_DEV_ID_I354_BACKPLANE_1GBPS	/;"	d
E1000_DEV_ID_I354_BACKPLANE_2_5GBPS	config/igb/e1000_hw.h	/^#define E1000_DEV_ID_I354_BACKPLANE_2_5GBPS	/;"	d
E1000_DEV_ID_I354_SGMII	config/igb/e1000_hw.h	/^#define E1000_DEV_ID_I354_SGMII	/;"	d
E1000_DMACR	config/igb/e1000_regs.h	/^#define E1000_DMACR	/;"	d
E1000_DMACR_DC_BMC2OSW_EN	config/igb/e1000_defines.h	/^#define E1000_DMACR_DC_BMC2OSW_EN	/;"	d
E1000_DMACR_DMACTHR_MASK	config/igb/e1000_defines.h	/^#define E1000_DMACR_DMACTHR_MASK /;"	d
E1000_DMACR_DMACTHR_SHIFT	config/igb/e1000_defines.h	/^#define E1000_DMACR_DMACTHR_SHIFT /;"	d
E1000_DMACR_DMACWT_MASK	config/igb/e1000_defines.h	/^#define E1000_DMACR_DMACWT_MASK /;"	d
E1000_DMACR_DMAC_EN	config/igb/e1000_defines.h	/^#define E1000_DMACR_DMAC_EN /;"	d
E1000_DMACR_DMAC_LX_MASK	config/igb/e1000_defines.h	/^#define E1000_DMACR_DMAC_LX_MASK /;"	d
E1000_DMACR_DMAC_LX_SHIFT	config/igb/e1000_defines.h	/^#define E1000_DMACR_DMAC_LX_SHIFT /;"	d
E1000_DMCCNT	config/igb/e1000_regs.h	/^#define E1000_DMCCNT	/;"	d
E1000_DMCCNT_CCOUNT_MASK	config/igb/e1000_defines.h	/^#define E1000_DMCCNT_CCOUNT_MASK /;"	d
E1000_DMCRTRH	config/igb/e1000_regs.h	/^#define E1000_DMCRTRH	/;"	d
E1000_DMCRTRH_LRPRCW	config/igb/e1000_defines.h	/^#define E1000_DMCRTRH_LRPRCW /;"	d
E1000_DMCRTRH_UTRESH_MASK	config/igb/e1000_defines.h	/^#define E1000_DMCRTRH_UTRESH_MASK /;"	d
E1000_DMCTLX	config/igb/e1000_regs.h	/^#define E1000_DMCTLX	/;"	d
E1000_DMCTLX_TTLX_MASK	config/igb/e1000_defines.h	/^#define E1000_DMCTLX_TTLX_MASK /;"	d
E1000_DMCTXTH	config/igb/e1000_regs.h	/^#define E1000_DMCTXTH	/;"	d
E1000_DMCTXTH_DMCTTHR_MASK	config/igb/e1000_defines.h	/^#define E1000_DMCTXTH_DMCTTHR_MASK /;"	d
E1000_DTXCTL	config/igb/e1000_regs.h	/^#define E1000_DTXCTL /;"	d
E1000_DTXCTL_8023LL	config/igb/e1000_82575.h	/^#define E1000_DTXCTL_8023LL /;"	d
E1000_DTXCTL_MDP_EN	config/igb/e1000_82575.h	/^#define E1000_DTXCTL_MDP_EN /;"	d
E1000_DTXCTL_OOS_ENABLE	config/igb/e1000_82575.h	/^#define E1000_DTXCTL_OOS_ENABLE /;"	d
E1000_DTXCTL_SPOOF_INT	config/igb/e1000_82575.h	/^#define E1000_DTXCTL_SPOOF_INT /;"	d
E1000_DTXCTL_VLAN_ADDED	config/igb/e1000_82575.h	/^#define E1000_DTXCTL_VLAN_ADDED /;"	d
E1000_DTXSWC	config/igb/e1000_regs.h	/^#define E1000_DTXSWC /;"	d
E1000_DTXSWC_LLE_MASK	config/igb/e1000_82575.h	/^#define E1000_DTXSWC_LLE_MASK /;"	d
E1000_DTXSWC_MAC_SPOOF_MASK	config/igb/e1000_82575.h	/^#define E1000_DTXSWC_MAC_SPOOF_MASK /;"	d
E1000_DTXSWC_VLAN_SPOOF_MASK	config/igb/e1000_82575.h	/^#define E1000_DTXSWC_VLAN_SPOOF_MASK /;"	d
E1000_DTXSWC_VLAN_SPOOF_SHIFT	config/igb/e1000_82575.h	/^#define E1000_DTXSWC_VLAN_SPOOF_SHIFT /;"	d
E1000_DTXSWC_VMDQ_LOOPBACK_EN	config/igb/e1000_82575.h	/^#define E1000_DTXSWC_VMDQ_LOOPBACK_EN /;"	d
E1000_DVMOLR	config/igb/e1000_regs.h	/^#define E1000_DVMOLR(/;"	d
E1000_DVMOLR_HIDEVLAN	config/igb/e1000_82575.h	/^#define E1000_DVMOLR_HIDEVLAN /;"	d
E1000_DVMOLR_STRCRC	config/igb/e1000_82575.h	/^#define E1000_DVMOLR_STRCRC /;"	d
E1000_DVMOLR_STRVLAN	config/igb/e1000_82575.h	/^#define E1000_DVMOLR_STRVLAN /;"	d
E1000_ECOL	config/igb/e1000_regs.h	/^#define E1000_ECOL /;"	d
E1000_EEARBC_I210	config/igb/e1000_regs.h	/^#define E1000_EEARBC_I210 /;"	d
E1000_EECD	config/igb/e1000_regs.h	/^#define E1000_EECD /;"	d
E1000_EECD_ADDR_BITS	config/igb/e1000_defines.h	/^#define E1000_EECD_ADDR_BITS /;"	d
E1000_EECD_AUTO_RD	config/igb/e1000_defines.h	/^#define E1000_EECD_AUTO_RD /;"	d
E1000_EECD_CS	config/igb/e1000_defines.h	/^#define E1000_EECD_CS /;"	d
E1000_EECD_DI	config/igb/e1000_defines.h	/^#define E1000_EECD_DI /;"	d
E1000_EECD_DO	config/igb/e1000_defines.h	/^#define E1000_EECD_DO /;"	d
E1000_EECD_FLASH_DETECTED_I210	config/igb/e1000_defines.h	/^#define E1000_EECD_FLASH_DETECTED_I210	/;"	d
E1000_EECD_FLUDONE_I210	config/igb/e1000_defines.h	/^#define E1000_EECD_FLUDONE_I210	/;"	d
E1000_EECD_FLUPD_I210	config/igb/e1000_defines.h	/^#define E1000_EECD_FLUPD_I210	/;"	d
E1000_EECD_GNT	config/igb/e1000_defines.h	/^#define E1000_EECD_GNT /;"	d
E1000_EECD_PRES	config/igb/e1000_defines.h	/^#define E1000_EECD_PRES /;"	d
E1000_EECD_REQ	config/igb/e1000_defines.h	/^#define E1000_EECD_REQ /;"	d
E1000_EECD_SIZE_EX_MASK	config/igb/e1000_defines.h	/^#define E1000_EECD_SIZE_EX_MASK /;"	d
E1000_EECD_SIZE_EX_SHIFT	config/igb/e1000_defines.h	/^#define E1000_EECD_SIZE_EX_SHIFT /;"	d
E1000_EECD_SK	config/igb/e1000_defines.h	/^#define E1000_EECD_SK /;"	d
E1000_EEER	config/igb/e1000_regs.h	/^#define E1000_EEER	/;"	d
E1000_EEER_EEE_NEG	config/igb/e1000_defines.h	/^#define E1000_EEER_EEE_NEG /;"	d
E1000_EEER_FRC_AN	config/igb/e1000_defines.h	/^#define E1000_EEER_FRC_AN /;"	d
E1000_EEER_LPI_FC	config/igb/e1000_defines.h	/^#define E1000_EEER_LPI_FC /;"	d
E1000_EEER_RX_LPI_EN	config/igb/e1000_defines.h	/^#define E1000_EEER_RX_LPI_EN /;"	d
E1000_EEER_TX_LPI_EN	config/igb/e1000_defines.h	/^#define E1000_EEER_TX_LPI_EN /;"	d
E1000_EEE_ADV_1000_SUPPORTED	config/igb/e1000_defines.h	/^#define E1000_EEE_ADV_1000_SUPPORTED	/;"	d
E1000_EEE_ADV_100_SUPPORTED	config/igb/e1000_defines.h	/^#define E1000_EEE_ADV_100_SUPPORTED	/;"	d
E1000_EEE_ADV_ADDR_I354	config/igb/e1000_defines.h	/^#define E1000_EEE_ADV_ADDR_I354	/;"	d
E1000_EEE_ADV_DEV_I354	config/igb/e1000_defines.h	/^#define E1000_EEE_ADV_DEV_I354	/;"	d
E1000_EEE_LP_ADV_ADDR_I210	config/igb/e1000_defines.h	/^#define E1000_EEE_LP_ADV_ADDR_I210 /;"	d
E1000_EEE_LP_ADV_ADDR_I350	config/igb/e1000_defines.h	/^#define E1000_EEE_LP_ADV_ADDR_I350 /;"	d
E1000_EEE_LP_ADV_DEV_I210	config/igb/e1000_defines.h	/^#define E1000_EEE_LP_ADV_DEV_I210 /;"	d
E1000_EEE_SU	config/igb/e1000_regs.h	/^#define E1000_EEE_SU	/;"	d
E1000_EEE_SU_LPI_CLK_STP	config/igb/e1000_defines.h	/^#define E1000_EEE_SU_LPI_CLK_STP /;"	d
E1000_EEMNGCTL	config/igb/e1000_regs.h	/^#define E1000_EEMNGCTL /;"	d
E1000_EEMNGCTL_I210	config/igb/e1000_regs.h	/^#define E1000_EEMNGCTL_I210 /;"	d
E1000_EEPROM_FLASH_SIZE_WORD	config/igb/e1000_i210.h	/^#define E1000_EEPROM_FLASH_SIZE_WORD	/;"	d
E1000_EEPROM_PCS_AUTONEG_DISABLE_BIT	config/igb/e1000_82575.h	/^#define E1000_EEPROM_PCS_AUTONEG_DISABLE_BIT	/;"	d
E1000_EERD	config/igb/e1000_regs.h	/^#define E1000_EERD /;"	d
E1000_EERD_EEWR_MAX_COUNT	config/igb/e1000_defines.h	/^#define E1000_EERD_EEWR_MAX_COUNT	/;"	d
E1000_EEWR	config/igb/e1000_regs.h	/^#define E1000_EEWR /;"	d
E1000_EIAC	config/igb/e1000_regs.h	/^#define E1000_EIAC /;"	d
E1000_EIAM	config/igb/e1000_regs.h	/^#define E1000_EIAM /;"	d
E1000_EICR	config/igb/e1000_regs.h	/^#define E1000_EICR /;"	d
E1000_EICR_OTHER	config/igb/e1000_defines.h	/^#define E1000_EICR_OTHER /;"	d
E1000_EICR_RX_QUEUE	config/igb/e1000_82575.h	/^#define E1000_EICR_RX_QUEUE /;"	d
E1000_EICR_RX_QUEUE0	config/igb/e1000_defines.h	/^#define E1000_EICR_RX_QUEUE0 /;"	d
E1000_EICR_RX_QUEUE1	config/igb/e1000_defines.h	/^#define E1000_EICR_RX_QUEUE1 /;"	d
E1000_EICR_RX_QUEUE2	config/igb/e1000_defines.h	/^#define E1000_EICR_RX_QUEUE2 /;"	d
E1000_EICR_RX_QUEUE3	config/igb/e1000_defines.h	/^#define E1000_EICR_RX_QUEUE3 /;"	d
E1000_EICR_TX_QUEUE	config/igb/e1000_82575.h	/^#define E1000_EICR_TX_QUEUE /;"	d
E1000_EICR_TX_QUEUE0	config/igb/e1000_defines.h	/^#define E1000_EICR_TX_QUEUE0 /;"	d
E1000_EICR_TX_QUEUE1	config/igb/e1000_defines.h	/^#define E1000_EICR_TX_QUEUE1 /;"	d
E1000_EICR_TX_QUEUE2	config/igb/e1000_defines.h	/^#define E1000_EICR_TX_QUEUE2 /;"	d
E1000_EICR_TX_QUEUE3	config/igb/e1000_defines.h	/^#define E1000_EICR_TX_QUEUE3 /;"	d
E1000_EICS	config/igb/e1000_regs.h	/^#define E1000_EICS /;"	d
E1000_EIMC	config/igb/e1000_regs.h	/^#define E1000_EIMC /;"	d
E1000_EIMS	config/igb/e1000_regs.h	/^#define E1000_EIMS /;"	d
E1000_EIMS_OTHER	config/igb/e1000_defines.h	/^#define E1000_EIMS_OTHER /;"	d
E1000_EITR	config/igb/e1000_regs.h	/^#define E1000_EITR(/;"	d
E1000_EITR_CNT_IGNR	config/igb/e1000_defines.h	/^#define E1000_EITR_CNT_IGNR /;"	d
E1000_EMC_DIODE1_DATA	config/igb/e1000_82575.h	/^#define E1000_EMC_DIODE1_DATA	/;"	d
E1000_EMC_DIODE1_THERM_LIMIT	config/igb/e1000_82575.h	/^#define E1000_EMC_DIODE1_THERM_LIMIT	/;"	d
E1000_EMC_DIODE2_DATA	config/igb/e1000_82575.h	/^#define E1000_EMC_DIODE2_DATA	/;"	d
E1000_EMC_DIODE2_THERM_LIMIT	config/igb/e1000_82575.h	/^#define E1000_EMC_DIODE2_THERM_LIMIT	/;"	d
E1000_EMC_DIODE3_DATA	config/igb/e1000_82575.h	/^#define E1000_EMC_DIODE3_DATA	/;"	d
E1000_EMC_DIODE3_THERM_LIMIT	config/igb/e1000_82575.h	/^#define E1000_EMC_DIODE3_THERM_LIMIT	/;"	d
E1000_EMC_INTERNAL_DATA	config/igb/e1000_82575.h	/^#define E1000_EMC_INTERNAL_DATA	/;"	d
E1000_EMC_INTERNAL_THERM_LIMIT	config/igb/e1000_82575.h	/^#define E1000_EMC_INTERNAL_THERM_LIMIT	/;"	d
E1000_EMIADD	config/igb/e1000_regs.h	/^#define E1000_EMIADD	/;"	d
E1000_EMIDATA	config/igb/e1000_regs.h	/^#define E1000_EMIDATA	/;"	d
E1000_ENABLE_SERDES_LOOPBACK	config/igb/e1000_defines.h	/^#define E1000_ENABLE_SERDES_LOOPBACK /;"	d
E1000_ERR_CONFIG	config/igb/e1000_defines.h	/^#define E1000_ERR_CONFIG /;"	d
E1000_ERR_I2C	config/igb/e1000_defines.h	/^#define E1000_ERR_I2C /;"	d
E1000_ERR_INVALID_ARGUMENT	config/igb/e1000_defines.h	/^#define E1000_ERR_INVALID_ARGUMENT /;"	d
E1000_ERR_INVM_VALUE_NOT_FOUND	config/igb/e1000_defines.h	/^#define E1000_ERR_INVM_VALUE_NOT_FOUND	/;"	d
E1000_ERR_MAC_INIT	config/igb/e1000_defines.h	/^#define E1000_ERR_MAC_INIT /;"	d
E1000_ERR_MASTER_REQUESTS_PENDING	config/igb/e1000_defines.h	/^#define E1000_ERR_MASTER_REQUESTS_PENDING /;"	d
E1000_ERR_MBX	config/igb/e1000_defines.h	/^#define E1000_ERR_MBX /;"	d
E1000_ERR_NO_SPACE	config/igb/e1000_defines.h	/^#define E1000_ERR_NO_SPACE /;"	d
E1000_ERR_NVM	config/igb/e1000_defines.h	/^#define E1000_ERR_NVM /;"	d
E1000_ERR_NVM_PBA_SECTION	config/igb/e1000_defines.h	/^#define E1000_ERR_NVM_PBA_SECTION /;"	d
E1000_ERR_PARAM	config/igb/e1000_defines.h	/^#define E1000_ERR_PARAM /;"	d
E1000_ERR_PHY	config/igb/e1000_defines.h	/^#define E1000_ERR_PHY /;"	d
E1000_ERR_RESET	config/igb/e1000_defines.h	/^#define E1000_ERR_RESET /;"	d
E1000_ERR_SWFW_SYNC	config/igb/e1000_defines.h	/^#define E1000_ERR_SWFW_SYNC /;"	d
E1000_ETQF	config/igb/e1000_regs.h	/^#define E1000_ETQF(/;"	d
E1000_ETQF_1588	config/igb/e1000_82575.h	/^#define E1000_ETQF_1588 /;"	d
E1000_ETQF_ETYPE_MASK	config/igb/e1000_82575.h	/^#define E1000_ETQF_ETYPE_MASK /;"	d
E1000_ETQF_FILTER_ENABLE	config/igb/e1000_82575.h	/^#define E1000_ETQF_FILTER_ENABLE /;"	d
E1000_ETQF_IMM_INT	config/igb/e1000_82575.h	/^#define E1000_ETQF_IMM_INT /;"	d
E1000_ETQF_QUEUE_ENABLE	config/igb/e1000_82575.h	/^#define E1000_ETQF_QUEUE_ENABLE /;"	d
E1000_ETQF_QUEUE_MASK	config/igb/e1000_82575.h	/^#define E1000_ETQF_QUEUE_MASK /;"	d
E1000_ETQF_QUEUE_SHIFT	config/igb/e1000_82575.h	/^#define E1000_ETQF_QUEUE_SHIFT /;"	d
E1000_FACTPS	config/igb/e1000_regs.h	/^#define E1000_FACTPS /;"	d
E1000_FACTPS_MNGCG	config/igb/e1000_mac.h	/^#define E1000_FACTPS_MNGCG	/;"	d
E1000_FCAH	config/igb/e1000_regs.h	/^#define E1000_FCAH /;"	d
E1000_FCAL	config/igb/e1000_regs.h	/^#define E1000_FCAL /;"	d
E1000_FCRTC	config/igb/e1000_regs.h	/^#define E1000_FCRTC	/;"	d
E1000_FCRTC_RTH_COAL_MASK	config/igb/e1000_defines.h	/^#define E1000_FCRTC_RTH_COAL_MASK /;"	d
E1000_FCRTC_RTH_COAL_SHIFT	config/igb/e1000_defines.h	/^#define E1000_FCRTC_RTH_COAL_SHIFT /;"	d
E1000_FCRTH	config/igb/e1000_regs.h	/^#define E1000_FCRTH /;"	d
E1000_FCRTL	config/igb/e1000_regs.h	/^#define E1000_FCRTL /;"	d
E1000_FCRTL_XONE	config/igb/e1000_defines.h	/^#define E1000_FCRTL_XONE /;"	d
E1000_FCRTV	config/igb/e1000_regs.h	/^#define E1000_FCRTV /;"	d
E1000_FCRUC	config/igb/e1000_regs.h	/^#define E1000_FCRUC /;"	d
E1000_FCT	config/igb/e1000_regs.h	/^#define E1000_FCT /;"	d
E1000_FCTTV	config/igb/e1000_regs.h	/^#define E1000_FCTTV /;"	d
E1000_FFLT_REG	config/igb/e1000_regs.h	/^#define E1000_FFLT_REG(/;"	d
E1000_FFMT_REG	config/igb/e1000_regs.h	/^#define E1000_FFMT_REG(/;"	d
E1000_FFVT_REG	config/igb/e1000_regs.h	/^#define E1000_FFVT_REG(/;"	d
E1000_FLUDONE_ATTEMPTS	config/igb/e1000_defines.h	/^#define E1000_FLUDONE_ATTEMPTS	/;"	d
E1000_FREQOUT0	config/igb/e1000_regs.h	/^#define E1000_FREQOUT0 /;"	d
E1000_FREQOUT1	config/igb/e1000_regs.h	/^#define E1000_FREQOUT1 /;"	d
E1000_FRTIMER	config/igb/e1000_regs.h	/^#define E1000_FRTIMER /;"	d
E1000_FTQF	config/igb/e1000_regs.h	/^#define E1000_FTQF(/;"	d
E1000_FTQF0	config/igb/e1000_regs.h	/^#define E1000_FTQF0 /;"	d
E1000_FTQF_1588_TIME_STAMP	config/igb/e1000_82575.h	/^#define E1000_FTQF_1588_TIME_STAMP /;"	d
E1000_FTQF_MASK	config/igb/e1000_82575.h	/^#define E1000_FTQF_MASK /;"	d
E1000_FTQF_MASK_PROTO_BP	config/igb/e1000_82575.h	/^#define E1000_FTQF_MASK_PROTO_BP /;"	d
E1000_FTQF_MASK_SOURCE_PORT_BP	config/igb/e1000_82575.h	/^#define E1000_FTQF_MASK_SOURCE_PORT_BP /;"	d
E1000_FTQF_VF_BP	config/igb/e1000_82575.h	/^#define E1000_FTQF_VF_BP /;"	d
E1000_FUNC_0	config/igb/e1000_hw.h	/^#define E1000_FUNC_0 /;"	d
E1000_FUNC_1	config/igb/e1000_hw.h	/^#define E1000_FUNC_1 /;"	d
E1000_FUNC_2	config/igb/e1000_hw.h	/^#define E1000_FUNC_2 /;"	d
E1000_FUNC_3	config/igb/e1000_hw.h	/^#define E1000_FUNC_3 /;"	d
E1000_FWSM	config/igb/e1000_regs.h	/^#define E1000_FWSM /;"	d
E1000_FWSM_MODE_MASK	config/igb/e1000_mac.h	/^#define E1000_FWSM_MODE_MASK	/;"	d
E1000_FWSM_MODE_SHIFT	config/igb/e1000_mac.h	/^#define E1000_FWSM_MODE_SHIFT	/;"	d
E1000_GCR	config/igb/e1000_regs.h	/^#define E1000_GCR /;"	d
E1000_GCR_CAP_VER2	config/igb/e1000_defines.h	/^#define E1000_GCR_CAP_VER2 /;"	d
E1000_GCR_CMPL_TMOUT_10ms	config/igb/e1000_defines.h	/^#define E1000_GCR_CMPL_TMOUT_10ms /;"	d
E1000_GCR_CMPL_TMOUT_MASK	config/igb/e1000_defines.h	/^#define E1000_GCR_CMPL_TMOUT_MASK /;"	d
E1000_GCR_CMPL_TMOUT_RESEND	config/igb/e1000_defines.h	/^#define E1000_GCR_CMPL_TMOUT_RESEND /;"	d
E1000_GEN_CTL_ADDRESS_SHIFT	config/igb/e1000_defines.h	/^#define E1000_GEN_CTL_ADDRESS_SHIFT /;"	d
E1000_GEN_CTL_READY	config/igb/e1000_defines.h	/^#define E1000_GEN_CTL_READY /;"	d
E1000_GEN_POLL_TIMEOUT	config/igb/e1000_defines.h	/^#define E1000_GEN_POLL_TIMEOUT /;"	d
E1000_GIOCTL	config/igb/e1000_regs.h	/^#define E1000_GIOCTL /;"	d
E1000_GORCH	config/igb/e1000_regs.h	/^#define E1000_GORCH /;"	d
E1000_GORCL	config/igb/e1000_regs.h	/^#define E1000_GORCL /;"	d
E1000_GOTCH	config/igb/e1000_regs.h	/^#define E1000_GOTCH /;"	d
E1000_GOTCL	config/igb/e1000_regs.h	/^#define E1000_GOTCL /;"	d
E1000_GPIE	config/igb/e1000_regs.h	/^#define E1000_GPIE /;"	d
E1000_GPIE_EIAME	config/igb/e1000_defines.h	/^#define E1000_GPIE_EIAME	/;"	d
E1000_GPIE_MSIX_MODE	config/igb/e1000_defines.h	/^#define E1000_GPIE_MSIX_MODE	/;"	d
E1000_GPIE_NSICR	config/igb/e1000_defines.h	/^#define E1000_GPIE_NSICR	/;"	d
E1000_GPIE_PBA	config/igb/e1000_defines.h	/^#define E1000_GPIE_PBA	/;"	d
E1000_GPRC	config/igb/e1000_regs.h	/^#define E1000_GPRC /;"	d
E1000_GPTC	config/igb/e1000_regs.h	/^#define E1000_GPTC /;"	d
E1000_HGORCH	config/igb/e1000_regs.h	/^#define E1000_HGORCH /;"	d
E1000_HGORCL	config/igb/e1000_regs.h	/^#define E1000_HGORCL /;"	d
E1000_HGOTCH	config/igb/e1000_regs.h	/^#define E1000_HGOTCH /;"	d
E1000_HGOTCL	config/igb/e1000_regs.h	/^#define E1000_HGOTCL /;"	d
E1000_HGPTC	config/igb/e1000_regs.h	/^#define E1000_HGPTC /;"	d
E1000_HI_MAX_DATA_LENGTH	config/igb/e1000_hw.h	/^#define E1000_HI_MAX_DATA_LENGTH /;"	d
E1000_HI_MAX_MNG_DATA_LENGTH	config/igb/e1000_hw.h	/^#define E1000_HI_MAX_MNG_DATA_LENGTH /;"	d
E1000_HTCBDPC	config/igb/e1000_regs.h	/^#define E1000_HTCBDPC /;"	d
E1000_HTDPMC	config/igb/e1000_regs.h	/^#define E1000_HTDPMC /;"	d
E1000_I210_DTXMXPKTSZ	config/igb/e1000_regs.h	/^#define E1000_I210_DTXMXPKTSZ	/;"	d
E1000_I210_FIFO_SEL_BMC2OS_RX	config/igb/e1000_defines.h	/^#define E1000_I210_FIFO_SEL_BMC2OS_RX	/;"	d
E1000_I210_FIFO_SEL_BMC2OS_TX	config/igb/e1000_defines.h	/^#define E1000_I210_FIFO_SEL_BMC2OS_TX	/;"	d
E1000_I210_FIFO_SEL_RX	config/igb/e1000_defines.h	/^#define E1000_I210_FIFO_SEL_RX	/;"	d
E1000_I210_FIFO_SEL_TX_LEGACY	config/igb/e1000_defines.h	/^#define E1000_I210_FIFO_SEL_TX_LEGACY	/;"	d
E1000_I210_FIFO_SEL_TX_QAV	config/igb/e1000_defines.h	/^#define E1000_I210_FIFO_SEL_TX_QAV(/;"	d
E1000_I210_FLA	config/igb/e1000_regs.h	/^#define E1000_I210_FLA	/;"	d
E1000_I210_FLASH_SECTOR_SIZE	config/igb/e1000_defines.h	/^#define E1000_I210_FLASH_SECTOR_SIZE	/;"	d
E1000_I210_FLMNGCNT	config/igb/e1000_regs.h	/^#define E1000_I210_FLMNGCNT	/;"	d
E1000_I210_FLMNGCTL	config/igb/e1000_regs.h	/^#define E1000_I210_FLMNGCTL	/;"	d
E1000_I210_FLMNGDATA	config/igb/e1000_regs.h	/^#define E1000_I210_FLMNGDATA	/;"	d
E1000_I210_FLSWCNT	config/igb/e1000_regs.h	/^#define E1000_I210_FLSWCNT	/;"	d
E1000_I210_FLSWCTL	config/igb/e1000_regs.h	/^#define E1000_I210_FLSWCTL	/;"	d
E1000_I210_FLSWDATA	config/igb/e1000_regs.h	/^#define E1000_I210_FLSWDATA	/;"	d
E1000_I210_FW_PTR_MASK	config/igb/e1000_defines.h	/^#define E1000_I210_FW_PTR_MASK	/;"	d
E1000_I210_FW_VER_OFFSET	config/igb/e1000_defines.h	/^#define E1000_I210_FW_VER_OFFSET	/;"	d
E1000_I210_RR2DCDELAY	config/igb/e1000_regs.h	/^#define E1000_I210_RR2DCDELAY	/;"	d
E1000_I210_TQAVCC	config/igb/e1000_regs.h	/^#define E1000_I210_TQAVCC(/;"	d
E1000_I210_TQAVCTRL	config/igb/e1000_regs.h	/^#define E1000_I210_TQAVCTRL	/;"	d
E1000_I210_TQAVHC	config/igb/e1000_regs.h	/^#define E1000_I210_TQAVHC(/;"	d
E1000_I210_TXDCTL	config/igb/e1000_regs.h	/^#define E1000_I210_TXDCTL(/;"	d
E1000_I2CBB_EN	config/igb/e1000_regs.h	/^#define E1000_I2CBB_EN /;"	d
E1000_I2CCMD	config/igb/e1000_regs.h	/^#define E1000_I2CCMD /;"	d
E1000_I2CCMD_ERROR	config/igb/e1000_defines.h	/^#define E1000_I2CCMD_ERROR	/;"	d
E1000_I2CCMD_OPCODE_READ	config/igb/e1000_defines.h	/^#define E1000_I2CCMD_OPCODE_READ	/;"	d
E1000_I2CCMD_OPCODE_WRITE	config/igb/e1000_defines.h	/^#define E1000_I2CCMD_OPCODE_WRITE	/;"	d
E1000_I2CCMD_PHY_ADDR_SHIFT	config/igb/e1000_defines.h	/^#define E1000_I2CCMD_PHY_ADDR_SHIFT	/;"	d
E1000_I2CCMD_PHY_TIMEOUT	config/igb/e1000_defines.h	/^#define E1000_I2CCMD_PHY_TIMEOUT	/;"	d
E1000_I2CCMD_READY	config/igb/e1000_defines.h	/^#define E1000_I2CCMD_READY	/;"	d
E1000_I2CCMD_REG_ADDR_SHIFT	config/igb/e1000_defines.h	/^#define E1000_I2CCMD_REG_ADDR_SHIFT	/;"	d
E1000_I2CCMD_SFP_DATA_ADDR	config/igb/e1000_defines.h	/^#define E1000_I2CCMD_SFP_DATA_ADDR(/;"	d
E1000_I2CCMD_SFP_DIAG_ADDR	config/igb/e1000_defines.h	/^#define E1000_I2CCMD_SFP_DIAG_ADDR(/;"	d
E1000_I2CPARAMS	config/igb/e1000_regs.h	/^#define E1000_I2CPARAMS /;"	d
E1000_I2C_CLK_IN	config/igb/e1000_regs.h	/^#define E1000_I2C_CLK_IN /;"	d
E1000_I2C_CLK_OE_N	config/igb/e1000_regs.h	/^#define E1000_I2C_CLK_OE_N /;"	d
E1000_I2C_CLK_OUT	config/igb/e1000_regs.h	/^#define E1000_I2C_CLK_OUT /;"	d
E1000_I2C_DATA_IN	config/igb/e1000_regs.h	/^#define E1000_I2C_DATA_IN /;"	d
E1000_I2C_DATA_OE_N	config/igb/e1000_regs.h	/^#define E1000_I2C_DATA_OE_N /;"	d
E1000_I2C_DATA_OUT	config/igb/e1000_regs.h	/^#define E1000_I2C_DATA_OUT /;"	d
E1000_I2C_THERMAL_SENSOR_ADDR	config/igb/e1000_82575.h	/^#define E1000_I2C_THERMAL_SENSOR_ADDR	/;"	d
E1000_IAC	config/igb/e1000_regs.h	/^#define E1000_IAC /;"	d
E1000_IAM	config/igb/e1000_regs.h	/^#define E1000_IAM /;"	d
E1000_ICR	config/igb/e1000_regs.h	/^#define E1000_ICR /;"	d
E1000_ICRXATC	config/igb/e1000_regs.h	/^#define E1000_ICRXATC /;"	d
E1000_ICRXDMTC	config/igb/e1000_regs.h	/^#define E1000_ICRXDMTC /;"	d
E1000_ICRXOC	config/igb/e1000_regs.h	/^#define E1000_ICRXOC /;"	d
E1000_ICRXPTC	config/igb/e1000_regs.h	/^#define E1000_ICRXPTC /;"	d
E1000_ICR_DOUTSYNC	config/igb/e1000_defines.h	/^#define E1000_ICR_DOUTSYNC /;"	d
E1000_ICR_DRSTA	config/igb/e1000_defines.h	/^#define E1000_ICR_DRSTA /;"	d
E1000_ICR_INT_ASSERTED	config/igb/e1000_defines.h	/^#define E1000_ICR_INT_ASSERTED /;"	d
E1000_ICR_LSC	config/igb/e1000_defines.h	/^#define E1000_ICR_LSC /;"	d
E1000_ICR_RXDMT0	config/igb/e1000_defines.h	/^#define E1000_ICR_RXDMT0 /;"	d
E1000_ICR_RXSEQ	config/igb/e1000_defines.h	/^#define E1000_ICR_RXSEQ /;"	d
E1000_ICR_RXT0	config/igb/e1000_defines.h	/^#define E1000_ICR_RXT0 /;"	d
E1000_ICR_TS	config/igb/e1000_defines.h	/^#define E1000_ICR_TS /;"	d
E1000_ICR_TXDW	config/igb/e1000_defines.h	/^#define E1000_ICR_TXDW /;"	d
E1000_ICR_VMMB	config/igb/e1000_defines.h	/^#define E1000_ICR_VMMB /;"	d
E1000_ICS	config/igb/e1000_regs.h	/^#define E1000_ICS /;"	d
E1000_ICS_DRSTA	config/igb/e1000_defines.h	/^#define E1000_ICS_DRSTA /;"	d
E1000_ICS_LSC	config/igb/e1000_defines.h	/^#define E1000_ICS_LSC /;"	d
E1000_ICS_RXDMT0	config/igb/e1000_defines.h	/^#define E1000_ICS_RXDMT0 /;"	d
E1000_ICTXATC	config/igb/e1000_regs.h	/^#define E1000_ICTXATC /;"	d
E1000_ICTXPTC	config/igb/e1000_regs.h	/^#define E1000_ICTXPTC /;"	d
E1000_ICTXQEC	config/igb/e1000_regs.h	/^#define E1000_ICTXQEC /;"	d
E1000_ICTXQMTC	config/igb/e1000_regs.h	/^#define E1000_ICTXQMTC /;"	d
E1000_IMC	config/igb/e1000_regs.h	/^#define E1000_IMC /;"	d
E1000_IMIR	config/igb/e1000_regs.h	/^#define E1000_IMIR(/;"	d
E1000_IMIREXT	config/igb/e1000_regs.h	/^#define E1000_IMIREXT(/;"	d
E1000_IMIREXT_CTRL_BP	config/igb/e1000_82575.h	/^#define E1000_IMIREXT_CTRL_BP /;"	d
E1000_IMIREXT_SIZE_BP	config/igb/e1000_82575.h	/^#define E1000_IMIREXT_SIZE_BP /;"	d
E1000_IMIRVP	config/igb/e1000_regs.h	/^#define E1000_IMIRVP /;"	d
E1000_IMS	config/igb/e1000_regs.h	/^#define E1000_IMS /;"	d
E1000_IMS_DOUTSYNC	config/igb/e1000_defines.h	/^#define E1000_IMS_DOUTSYNC /;"	d
E1000_IMS_DRSTA	config/igb/e1000_defines.h	/^#define E1000_IMS_DRSTA /;"	d
E1000_IMS_LSC	config/igb/e1000_defines.h	/^#define E1000_IMS_LSC /;"	d
E1000_IMS_RXDMT0	config/igb/e1000_defines.h	/^#define E1000_IMS_RXDMT0 /;"	d
E1000_IMS_RXSEQ	config/igb/e1000_defines.h	/^#define E1000_IMS_RXSEQ /;"	d
E1000_IMS_RXT0	config/igb/e1000_defines.h	/^#define E1000_IMS_RXT0 /;"	d
E1000_IMS_TS	config/igb/e1000_defines.h	/^#define E1000_IMS_TS /;"	d
E1000_IMS_TXDW	config/igb/e1000_defines.h	/^#define E1000_IMS_TXDW /;"	d
E1000_IMS_VMMB	config/igb/e1000_defines.h	/^#define E1000_IMS_VMMB /;"	d
E1000_INVM_AUTOLOAD	config/igb/e1000_i210.h	/^#define E1000_INVM_AUTOLOAD	/;"	d
E1000_INVM_CSR_AUTOLOAD_DATA_SIZE_IN_DWORDS	config/igb/e1000_i210.h	/^#define E1000_INVM_CSR_AUTOLOAD_DATA_SIZE_IN_DWORDS	/;"	d
E1000_INVM_CSR_AUTOLOAD_STRUCTURE	config/igb/e1000_i210.h	/^	E1000_INVM_CSR_AUTOLOAD_STRUCTURE		= 0x02,$/;"	e	enum:E1000_INVM_STRUCTURE_TYPE
E1000_INVM_DATA_REG	config/igb/e1000_regs.h	/^#define E1000_INVM_DATA_REG(/;"	d
E1000_INVM_DEFAULT_AL	config/igb/e1000_i210.h	/^#define E1000_INVM_DEFAULT_AL	/;"	d
E1000_INVM_IMGTYPE_FIELD	config/igb/e1000_i210.h	/^#define E1000_INVM_IMGTYPE_FIELD	/;"	d
E1000_INVM_INVALIDATED_STRUCTURE	config/igb/e1000_i210.h	/^	E1000_INVM_INVALIDATED_STRUCTURE		= 0x0F,$/;"	e	enum:E1000_INVM_STRUCTURE_TYPE
E1000_INVM_MAJOR_MASK	config/igb/e1000_i210.h	/^#define E1000_INVM_MAJOR_MASK	/;"	d
E1000_INVM_MAJOR_SHIFT	config/igb/e1000_i210.h	/^#define E1000_INVM_MAJOR_SHIFT	/;"	d
E1000_INVM_MINOR_MASK	config/igb/e1000_i210.h	/^#define E1000_INVM_MINOR_MASK	/;"	d
E1000_INVM_PHY_REGISTER_AUTOLOAD_STRUCTURE	config/igb/e1000_i210.h	/^	E1000_INVM_PHY_REGISTER_AUTOLOAD_STRUCTURE	= 0x03,$/;"	e	enum:E1000_INVM_STRUCTURE_TYPE
E1000_INVM_PLL_WO_VAL	config/igb/e1000_i210.h	/^#define E1000_INVM_PLL_WO_VAL	/;"	d
E1000_INVM_RECORD_SIZE_IN_BYTES	config/igb/e1000_i210.h	/^#define E1000_INVM_RECORD_SIZE_IN_BYTES	/;"	d
E1000_INVM_RSA_KEY_SHA256_DATA_SIZE_IN_DWORDS	config/igb/e1000_i210.h	/^#define E1000_INVM_RSA_KEY_SHA256_DATA_SIZE_IN_DWORDS	/;"	d
E1000_INVM_RSA_KEY_SHA256_STRUCTURE	config/igb/e1000_i210.h	/^	E1000_INVM_RSA_KEY_SHA256_STRUCTURE		= 0x04,$/;"	e	enum:E1000_INVM_STRUCTURE_TYPE
E1000_INVM_SIZE	config/igb/e1000_regs.h	/^#define E1000_INVM_SIZE	/;"	d
E1000_INVM_STRUCTURE_TYPE	config/igb/e1000_i210.h	/^enum E1000_INVM_STRUCTURE_TYPE {$/;"	g
E1000_INVM_ULT_BYTES_SIZE	config/igb/e1000_i210.h	/^#define E1000_INVM_ULT_BYTES_SIZE	/;"	d
E1000_INVM_UNINITIALIZED_STRUCTURE	config/igb/e1000_i210.h	/^	E1000_INVM_UNINITIALIZED_STRUCTURE		= 0x00,$/;"	e	enum:E1000_INVM_STRUCTURE_TYPE
E1000_INVM_VER_FIELD_ONE	config/igb/e1000_i210.h	/^#define E1000_INVM_VER_FIELD_ONE	/;"	d
E1000_INVM_VER_FIELD_TWO	config/igb/e1000_i210.h	/^#define E1000_INVM_VER_FIELD_TWO	/;"	d
E1000_INVM_WORD_AUTOLOAD_STRUCTURE	config/igb/e1000_i210.h	/^	E1000_INVM_WORD_AUTOLOAD_STRUCTURE		= 0x01,$/;"	e	enum:E1000_INVM_STRUCTURE_TYPE
E1000_IOVCTL	config/igb/e1000_82575.h	/^#define E1000_IOVCTL /;"	d
E1000_IOVCTL_REUSE_VFQ	config/igb/e1000_82575.h	/^#define E1000_IOVCTL_REUSE_VFQ /;"	d
E1000_IOVTCL	config/igb/e1000_regs.h	/^#define E1000_IOVTCL /;"	d
E1000_IP4AT_REG	config/igb/e1000_regs.h	/^#define E1000_IP4AT_REG(/;"	d
E1000_IP6AT_REG	config/igb/e1000_regs.h	/^#define E1000_IP6AT_REG(/;"	d
E1000_IPAV	config/igb/e1000_regs.h	/^#define E1000_IPAV /;"	d
E1000_IPCNFG	config/igb/e1000_regs.h	/^#define E1000_IPCNFG	/;"	d
E1000_IPCNFG_EEE_100M_AN	config/igb/e1000_defines.h	/^#define E1000_IPCNFG_EEE_100M_AN /;"	d
E1000_IPCNFG_EEE_1G_AN	config/igb/e1000_defines.h	/^#define E1000_IPCNFG_EEE_1G_AN /;"	d
E1000_ITR	config/igb/e1000_regs.h	/^#define E1000_ITR /;"	d
E1000_IVAR0	config/igb/e1000_regs.h	/^#define E1000_IVAR0 /;"	d
E1000_IVAR_MISC	config/igb/e1000_regs.h	/^#define E1000_IVAR_MISC /;"	d
E1000_IVAR_VALID	config/igb/e1000_defines.h	/^#define E1000_IVAR_VALID	/;"	d
E1000_LATECOL	config/igb/e1000_regs.h	/^#define E1000_LATECOL /;"	d
E1000_LEDCTL	config/igb/e1000_regs.h	/^#define E1000_LEDCTL /;"	d
E1000_LEDCTL_LED0_BLINK	config/igb/e1000_defines.h	/^#define E1000_LEDCTL_LED0_BLINK	/;"	d
E1000_LEDCTL_LED0_IVRT	config/igb/e1000_defines.h	/^#define E1000_LEDCTL_LED0_IVRT	/;"	d
E1000_LEDCTL_LED0_MODE_MASK	config/igb/e1000_defines.h	/^#define E1000_LEDCTL_LED0_MODE_MASK	/;"	d
E1000_LEDCTL_LED0_MODE_SHIFT	config/igb/e1000_defines.h	/^#define E1000_LEDCTL_LED0_MODE_SHIFT	/;"	d
E1000_LEDCTL_MODE_LED_OFF	config/igb/e1000_defines.h	/^#define E1000_LEDCTL_MODE_LED_OFF /;"	d
E1000_LEDCTL_MODE_LED_ON	config/igb/e1000_defines.h	/^#define E1000_LEDCTL_MODE_LED_ON /;"	d
E1000_LEDMUX	config/igb/e1000_regs.h	/^#define E1000_LEDMUX /;"	d
E1000_LENERRS	config/igb/e1000_regs.h	/^#define E1000_LENERRS /;"	d
E1000_LVMMC	config/igb/e1000_regs.h	/^#define E1000_LVMMC	/;"	d
E1000_M88E1112_AUTO_COPPER_BASEX	config/igb/e1000_defines.h	/^#define E1000_M88E1112_AUTO_COPPER_BASEX	/;"	d
E1000_M88E1112_AUTO_COPPER_SGMII	config/igb/e1000_defines.h	/^#define E1000_M88E1112_AUTO_COPPER_SGMII	/;"	d
E1000_M88E1112_MAC_CTRL_1	config/igb/e1000_defines.h	/^#define E1000_M88E1112_MAC_CTRL_1	/;"	d
E1000_M88E1112_MAC_CTRL_1_MODE_MASK	config/igb/e1000_defines.h	/^#define E1000_M88E1112_MAC_CTRL_1_MODE_MASK	/;"	d
E1000_M88E1112_MAC_CTRL_1_MODE_SHIFT	config/igb/e1000_defines.h	/^#define E1000_M88E1112_MAC_CTRL_1_MODE_SHIFT	/;"	d
E1000_M88E1112_PAGE_ADDR	config/igb/e1000_defines.h	/^#define E1000_M88E1112_PAGE_ADDR	/;"	d
E1000_M88E1112_STATUS	config/igb/e1000_defines.h	/^#define E1000_M88E1112_STATUS	/;"	d
E1000_M88E1112_STATUS_LINK	config/igb/e1000_defines.h	/^#define E1000_M88E1112_STATUS_LINK	/;"	d
E1000_M88E1512_CFG_REG_1	config/igb/e1000_defines.h	/^#define E1000_M88E1512_CFG_REG_1	/;"	d
E1000_M88E1512_CFG_REG_2	config/igb/e1000_defines.h	/^#define E1000_M88E1512_CFG_REG_2	/;"	d
E1000_M88E1512_CFG_REG_3	config/igb/e1000_defines.h	/^#define E1000_M88E1512_CFG_REG_3	/;"	d
E1000_M88E1512_MODE	config/igb/e1000_defines.h	/^#define E1000_M88E1512_MODE	/;"	d
E1000_M88E1543_EEE_CTRL_1	config/igb/e1000_defines.h	/^#define E1000_M88E1543_EEE_CTRL_1	/;"	d
E1000_M88E1543_EEE_CTRL_1_MS	config/igb/e1000_defines.h	/^#define E1000_M88E1543_EEE_CTRL_1_MS	/;"	d
E1000_M88E1543_FIBER_CTRL	config/igb/e1000_defines.h	/^#define E1000_M88E1543_FIBER_CTRL	/;"	d
E1000_M88E1543_PAGE_ADDR	config/igb/e1000_defines.h	/^#define E1000_M88E1543_PAGE_ADDR	/;"	d
E1000_MANC	config/igb/e1000_regs.h	/^#define E1000_MANC /;"	d
E1000_MANC_ASF_EN	config/igb/e1000_defines.h	/^#define E1000_MANC_ASF_EN /;"	d
E1000_MANC_BLK_PHY_RST_ON_IDE	config/igb/e1000_defines.h	/^#define E1000_MANC_BLK_PHY_RST_ON_IDE /;"	d
E1000_MANC_EN_BMC2OS	config/igb/e1000_defines.h	/^#define E1000_MANC_EN_BMC2OS /;"	d
E1000_MANC_EN_MAC_ADDR_FILTER	config/igb/e1000_defines.h	/^#define E1000_MANC_EN_MAC_ADDR_FILTER /;"	d
E1000_MANC_RCV_TCO_EN	config/igb/e1000_defines.h	/^#define E1000_MANC_RCV_TCO_EN /;"	d
E1000_MANC_SMBUS_EN	config/igb/e1000_defines.h	/^#define E1000_MANC_SMBUS_EN /;"	d
E1000_MAX_PLL_TRIES	config/igb/e1000_i210.h	/^#define E1000_MAX_PLL_TRIES	/;"	d
E1000_MAX_SENSORS	config/igb/e1000_hw.h	/^#define E1000_MAX_SENSORS	/;"	d
E1000_MAX_SGMII_PHY_REG_ADDR	config/igb/e1000_defines.h	/^#define E1000_MAX_SGMII_PHY_REG_ADDR	/;"	d
E1000_MBVFICR	config/igb/e1000_regs.h	/^#define E1000_MBVFICR /;"	d
E1000_MBVFICR_VFACK_MASK	config/igb/e1000_mbx.h	/^#define E1000_MBVFICR_VFACK_MASK	/;"	d
E1000_MBVFICR_VFACK_VF1	config/igb/e1000_mbx.h	/^#define E1000_MBVFICR_VFACK_VF1	/;"	d
E1000_MBVFICR_VFREQ_MASK	config/igb/e1000_mbx.h	/^#define E1000_MBVFICR_VFREQ_MASK	/;"	d
E1000_MBVFICR_VFREQ_VF1	config/igb/e1000_mbx.h	/^#define E1000_MBVFICR_VFREQ_VF1	/;"	d
E1000_MBVFIMR	config/igb/e1000_regs.h	/^#define E1000_MBVFIMR /;"	d
E1000_MCC	config/igb/e1000_regs.h	/^#define E1000_MCC /;"	d
E1000_MDIC	config/igb/e1000_regs.h	/^#define E1000_MDIC /;"	d
E1000_MDICNFG	config/igb/e1000_regs.h	/^#define E1000_MDICNFG /;"	d
E1000_MDICNFG_COM_MDIO	config/igb/e1000_defines.h	/^#define E1000_MDICNFG_COM_MDIO /;"	d
E1000_MDICNFG_EXT_MDIO	config/igb/e1000_defines.h	/^#define E1000_MDICNFG_EXT_MDIO /;"	d
E1000_MDICNFG_PHY_MASK	config/igb/e1000_defines.h	/^#define E1000_MDICNFG_PHY_MASK /;"	d
E1000_MDICNFG_PHY_SHIFT	config/igb/e1000_defines.h	/^#define E1000_MDICNFG_PHY_SHIFT /;"	d
E1000_MDIC_DATA_MASK	config/igb/e1000_defines.h	/^#define E1000_MDIC_DATA_MASK /;"	d
E1000_MDIC_DEST	config/igb/e1000_defines.h	/^#define E1000_MDIC_DEST /;"	d
E1000_MDIC_ERROR	config/igb/e1000_defines.h	/^#define E1000_MDIC_ERROR /;"	d
E1000_MDIC_INT_EN	config/igb/e1000_defines.h	/^#define E1000_MDIC_INT_EN /;"	d
E1000_MDIC_OP_READ	config/igb/e1000_defines.h	/^#define E1000_MDIC_OP_READ /;"	d
E1000_MDIC_OP_WRITE	config/igb/e1000_defines.h	/^#define E1000_MDIC_OP_WRITE /;"	d
E1000_MDIC_PHY_MASK	config/igb/e1000_defines.h	/^#define E1000_MDIC_PHY_MASK /;"	d
E1000_MDIC_PHY_SHIFT	config/igb/e1000_defines.h	/^#define E1000_MDIC_PHY_SHIFT /;"	d
E1000_MDIC_READY	config/igb/e1000_defines.h	/^#define E1000_MDIC_READY /;"	d
E1000_MDIC_REG_MASK	config/igb/e1000_defines.h	/^#define E1000_MDIC_REG_MASK /;"	d
E1000_MDIC_REG_SHIFT	config/igb/e1000_defines.h	/^#define E1000_MDIC_REG_SHIFT /;"	d
E1000_MEDIA_PORT_COPPER	config/igb/e1000_defines.h	/^#define E1000_MEDIA_PORT_COPPER	/;"	d
E1000_MEDIA_PORT_OTHER	config/igb/e1000_defines.h	/^#define E1000_MEDIA_PORT_OTHER	/;"	d
E1000_MGTPDC	config/igb/e1000_regs.h	/^#define E1000_MGTPDC /;"	d
E1000_MGTPRC	config/igb/e1000_regs.h	/^#define E1000_MGTPRC /;"	d
E1000_MGTPTC	config/igb/e1000_regs.h	/^#define E1000_MGTPTC /;"	d
E1000_MMDAAD	config/igb/e1000_regs.h	/^#define E1000_MMDAAD	/;"	d
E1000_MMDAC	config/igb/e1000_regs.h	/^#define E1000_MMDAC	/;"	d
E1000_MMDAC_FUNC_DATA	config/igb/e1000_defines.h	/^#define E1000_MMDAC_FUNC_DATA /;"	d
E1000_MNG_DHCP_COOKIE_STATUS_VLAN	config/igb/e1000_mac.h	/^#define E1000_MNG_DHCP_COOKIE_STATUS_VLAN	/;"	d
E1000_MPC	config/igb/e1000_regs.h	/^#define E1000_MPC /;"	d
E1000_MPHY_ADDR_CTL	config/igb/e1000_defines.h	/^#define E1000_MPHY_ADDR_CTL /;"	d
E1000_MPHY_ADDR_CTL_OFFSET_MASK	config/igb/e1000_defines.h	/^#define E1000_MPHY_ADDR_CTL_OFFSET_MASK /;"	d
E1000_MPHY_ADDR_CTRL	config/igb/e1000_regs.h	/^#define E1000_MPHY_ADDR_CTRL	/;"	d
E1000_MPHY_DATA	config/igb/e1000_defines.h	/^#define E1000_MPHY_DATA /;"	d
E1000_MPHY_DATA	config/igb/e1000_regs.h	/^#define E1000_MPHY_DATA	/;"	d
E1000_MPHY_PCS_CLK_REG_DIGINELBEN	config/igb/e1000_defines.h	/^#define E1000_MPHY_PCS_CLK_REG_DIGINELBEN /;"	d
E1000_MPHY_PCS_CLK_REG_OFFSET	config/igb/e1000_defines.h	/^#define E1000_MPHY_PCS_CLK_REG_OFFSET /;"	d
E1000_MPHY_STAT	config/igb/e1000_regs.h	/^#define E1000_MPHY_STAT	/;"	d
E1000_MPRC	config/igb/e1000_regs.h	/^#define E1000_MPRC /;"	d
E1000_MPTC	config/igb/e1000_regs.h	/^#define E1000_MPTC /;"	d
E1000_MRQC	config/igb/e1000_regs.h	/^#define E1000_MRQC /;"	d
E1000_MRQC_ENABLE_RSS_MQ	config/igb/e1000_82575.h	/^#define E1000_MRQC_ENABLE_RSS_MQ /;"	d
E1000_MRQC_ENABLE_VMDQ	config/igb/e1000_82575.h	/^#define E1000_MRQC_ENABLE_VMDQ /;"	d
E1000_MRQC_ENABLE_VMDQ_RSS_MQ	config/igb/e1000_82575.h	/^#define E1000_MRQC_ENABLE_VMDQ_RSS_MQ /;"	d
E1000_MRQC_RSS_FIELD_IPV4	config/igb/e1000_defines.h	/^#define E1000_MRQC_RSS_FIELD_IPV4 /;"	d
E1000_MRQC_RSS_FIELD_IPV4_TCP	config/igb/e1000_defines.h	/^#define E1000_MRQC_RSS_FIELD_IPV4_TCP /;"	d
E1000_MRQC_RSS_FIELD_IPV4_UDP	config/igb/e1000_82575.h	/^#define E1000_MRQC_RSS_FIELD_IPV4_UDP /;"	d
E1000_MRQC_RSS_FIELD_IPV6	config/igb/e1000_defines.h	/^#define E1000_MRQC_RSS_FIELD_IPV6 /;"	d
E1000_MRQC_RSS_FIELD_IPV6_TCP	config/igb/e1000_defines.h	/^#define E1000_MRQC_RSS_FIELD_IPV6_TCP /;"	d
E1000_MRQC_RSS_FIELD_IPV6_TCP_EX	config/igb/e1000_defines.h	/^#define E1000_MRQC_RSS_FIELD_IPV6_TCP_EX /;"	d
E1000_MRQC_RSS_FIELD_IPV6_UDP	config/igb/e1000_82575.h	/^#define E1000_MRQC_RSS_FIELD_IPV6_UDP /;"	d
E1000_MRQC_RSS_FIELD_IPV6_UDP_EX	config/igb/e1000_82575.h	/^#define E1000_MRQC_RSS_FIELD_IPV6_UDP_EX /;"	d
E1000_MSIXBM	config/igb/e1000_regs.h	/^#define E1000_MSIXBM(/;"	d
E1000_MTA	config/igb/e1000_regs.h	/^#define E1000_MTA /;"	d
E1000_NOT_IMPLEMENTED	config/igb/e1000_defines.h	/^#define E1000_NOT_IMPLEMENTED /;"	d
E1000_NVM_APME_82575	config/igb/e1000_82575.h	/^#define E1000_NVM_APME_82575 /;"	d
E1000_NVM_CFG_DONE_PORT_0	config/igb/e1000_defines.h	/^#define E1000_NVM_CFG_DONE_PORT_0 /;"	d
E1000_NVM_CFG_DONE_PORT_1	config/igb/e1000_defines.h	/^#define E1000_NVM_CFG_DONE_PORT_1 /;"	d
E1000_NVM_CFG_DONE_PORT_2	config/igb/e1000_defines.h	/^#define E1000_NVM_CFG_DONE_PORT_2 /;"	d
E1000_NVM_CFG_DONE_PORT_3	config/igb/e1000_defines.h	/^#define E1000_NVM_CFG_DONE_PORT_3 /;"	d
E1000_NVM_GRANT_ATTEMPTS	config/igb/e1000_defines.h	/^#define E1000_NVM_GRANT_ATTEMPTS /;"	d
E1000_NVM_POLL_READ	config/igb/e1000_defines.h	/^#define E1000_NVM_POLL_READ /;"	d
E1000_NVM_RW_ADDR_SHIFT	config/igb/e1000_defines.h	/^#define E1000_NVM_RW_ADDR_SHIFT /;"	d
E1000_NVM_RW_REG_DATA	config/igb/e1000_defines.h	/^#define E1000_NVM_RW_REG_DATA /;"	d
E1000_NVM_RW_REG_DONE	config/igb/e1000_defines.h	/^#define E1000_NVM_RW_REG_DONE /;"	d
E1000_NVM_RW_REG_START	config/igb/e1000_defines.h	/^#define E1000_NVM_RW_REG_START /;"	d
E1000_O2BGPTC	config/igb/e1000_regs.h	/^#define E1000_O2BGPTC	/;"	d
E1000_O2BSPC	config/igb/e1000_regs.h	/^#define E1000_O2BSPC	/;"	d
E1000_P2VMAILBOX	config/igb/e1000_regs.h	/^#define E1000_P2VMAILBOX(/;"	d
E1000_P2VMAILBOX_ACK	config/igb/e1000_mbx.h	/^#define E1000_P2VMAILBOX_ACK	/;"	d
E1000_P2VMAILBOX_PFU	config/igb/e1000_mbx.h	/^#define E1000_P2VMAILBOX_PFU	/;"	d
E1000_P2VMAILBOX_RVFU	config/igb/e1000_mbx.h	/^#define E1000_P2VMAILBOX_RVFU	/;"	d
E1000_P2VMAILBOX_STS	config/igb/e1000_mbx.h	/^#define E1000_P2VMAILBOX_STS	/;"	d
E1000_P2VMAILBOX_VFU	config/igb/e1000_mbx.h	/^#define E1000_P2VMAILBOX_VFU	/;"	d
E1000_PBA	config/igb/e1000_regs.h	/^#define E1000_PBA /;"	d
E1000_PBANUM_LENGTH	config/igb/e1000_defines.h	/^#define E1000_PBANUM_LENGTH /;"	d
E1000_PBA_34K	config/igb/e1000_defines.h	/^#define E1000_PBA_34K /;"	d
E1000_PBA_64K	config/igb/e1000_defines.h	/^#define E1000_PBA_64K /;"	d
E1000_PBS	config/igb/e1000_regs.h	/^#define E1000_PBS /;"	d
E1000_PCIEMISC	config/igb/e1000_regs.h	/^#define E1000_PCIEMISC	/;"	d
E1000_PCIEMISC_LX_DECISION	config/igb/e1000_defines.h	/^#define E1000_PCIEMISC_LX_DECISION /;"	d
E1000_PCI_PMCSR	config/igb/e1000_i210.h	/^#define E1000_PCI_PMCSR	/;"	d
E1000_PCI_PMCSR_D3	config/igb/e1000_i210.h	/^#define E1000_PCI_PMCSR_D3	/;"	d
E1000_PCS_ANADV	config/igb/e1000_regs.h	/^#define E1000_PCS_ANADV /;"	d
E1000_PCS_CFG0	config/igb/e1000_regs.h	/^#define E1000_PCS_CFG0 /;"	d
E1000_PCS_CFG_IGN_SD	config/igb/igb.h	/^#define E1000_PCS_CFG_IGN_SD	/;"	d
E1000_PCS_CFG_PCS_EN	config/igb/e1000_defines.h	/^#define E1000_PCS_CFG_PCS_EN /;"	d
E1000_PCS_LCTL	config/igb/e1000_regs.h	/^#define E1000_PCS_LCTL /;"	d
E1000_PCS_LCTL_AN_ENABLE	config/igb/e1000_defines.h	/^#define E1000_PCS_LCTL_AN_ENABLE /;"	d
E1000_PCS_LCTL_AN_RESTART	config/igb/e1000_defines.h	/^#define E1000_PCS_LCTL_AN_RESTART /;"	d
E1000_PCS_LCTL_AN_TIMEOUT	config/igb/e1000_defines.h	/^#define E1000_PCS_LCTL_AN_TIMEOUT /;"	d
E1000_PCS_LCTL_FDV_FULL	config/igb/e1000_defines.h	/^#define E1000_PCS_LCTL_FDV_FULL /;"	d
E1000_PCS_LCTL_FLV_LINK_UP	config/igb/e1000_defines.h	/^#define E1000_PCS_LCTL_FLV_LINK_UP /;"	d
E1000_PCS_LCTL_FORCE_FCTRL	config/igb/e1000_defines.h	/^#define E1000_PCS_LCTL_FORCE_FCTRL	/;"	d
E1000_PCS_LCTL_FORCE_FCTRL	config/igb/e1000_defines.h	/^#define E1000_PCS_LCTL_FORCE_FCTRL /;"	d
E1000_PCS_LCTL_FORCE_LINK	config/igb/e1000_defines.h	/^#define E1000_PCS_LCTL_FORCE_LINK /;"	d
E1000_PCS_LCTL_FSD	config/igb/e1000_defines.h	/^#define E1000_PCS_LCTL_FSD /;"	d
E1000_PCS_LCTL_FSV_100	config/igb/e1000_defines.h	/^#define E1000_PCS_LCTL_FSV_100 /;"	d
E1000_PCS_LCTL_FSV_1000	config/igb/e1000_defines.h	/^#define E1000_PCS_LCTL_FSV_1000 /;"	d
E1000_PCS_LPAB	config/igb/e1000_regs.h	/^#define E1000_PCS_LPAB /;"	d
E1000_PCS_LPABNP	config/igb/e1000_regs.h	/^#define E1000_PCS_LPABNP /;"	d
E1000_PCS_LSTAT	config/igb/e1000_regs.h	/^#define E1000_PCS_LSTAT /;"	d
E1000_PCS_LSTS_AN_COMPLETE	config/igb/e1000_defines.h	/^#define E1000_PCS_LSTS_AN_COMPLETE	/;"	d
E1000_PCS_LSTS_DUPLEX_FULL	config/igb/e1000_defines.h	/^#define E1000_PCS_LSTS_DUPLEX_FULL /;"	d
E1000_PCS_LSTS_LINK_OK	config/igb/e1000_defines.h	/^#define E1000_PCS_LSTS_LINK_OK /;"	d
E1000_PCS_LSTS_SPEED_100	config/igb/e1000_defines.h	/^#define E1000_PCS_LSTS_SPEED_100 /;"	d
E1000_PCS_LSTS_SPEED_1000	config/igb/e1000_defines.h	/^#define E1000_PCS_LSTS_SPEED_1000 /;"	d
E1000_PCS_LSTS_SYNK_OK	config/igb/e1000_defines.h	/^#define E1000_PCS_LSTS_SYNK_OK /;"	d
E1000_PCS_NPTX	config/igb/e1000_regs.h	/^#define E1000_PCS_NPTX /;"	d
E1000_PCS_STATUS_ADDR_I354	config/igb/e1000_defines.h	/^#define E1000_PCS_STATUS_ADDR_I354	/;"	d
E1000_PCS_STATUS_DEV_I354	config/igb/e1000_defines.h	/^#define E1000_PCS_STATUS_DEV_I354	/;"	d
E1000_PCS_STATUS_RX_LPI_RCVD	config/igb/e1000_defines.h	/^#define E1000_PCS_STATUS_RX_LPI_RCVD	/;"	d
E1000_PCS_STATUS_TX_LPI_IND	config/igb/e1000_defines.h	/^#define E1000_PCS_STATUS_TX_LPI_IND	/;"	d
E1000_PCS_STATUS_TX_LPI_RCVD	config/igb/e1000_defines.h	/^#define E1000_PCS_STATUS_TX_LPI_RCVD	/;"	d
E1000_PF_CONTROL_MSG	config/igb/e1000_mbx.h	/^#define E1000_PF_CONTROL_MSG	/;"	d
E1000_PHY_PLL_FREQ_PAGE	config/igb/e1000_i210.h	/^#define E1000_PHY_PLL_FREQ_PAGE	/;"	d
E1000_PHY_PLL_FREQ_REG	config/igb/e1000_i210.h	/^#define E1000_PHY_PLL_FREQ_REG	/;"	d
E1000_PHY_PLL_UNCONF	config/igb/e1000_i210.h	/^#define E1000_PHY_PLL_UNCONF	/;"	d
E1000_PRC1023	config/igb/e1000_regs.h	/^#define E1000_PRC1023 /;"	d
E1000_PRC127	config/igb/e1000_regs.h	/^#define E1000_PRC127 /;"	d
E1000_PRC1522	config/igb/e1000_regs.h	/^#define E1000_PRC1522 /;"	d
E1000_PRC255	config/igb/e1000_regs.h	/^#define E1000_PRC255 /;"	d
E1000_PRC511	config/igb/e1000_regs.h	/^#define E1000_PRC511 /;"	d
E1000_PRC64	config/igb/e1000_regs.h	/^#define E1000_PRC64 /;"	d
E1000_PSRCTL_BSIZE0_MASK	config/igb/e1000_defines.h	/^#define E1000_PSRCTL_BSIZE0_MASK /;"	d
E1000_PSRCTL_BSIZE0_SHIFT	config/igb/e1000_defines.h	/^#define E1000_PSRCTL_BSIZE0_SHIFT /;"	d
E1000_PSRCTL_BSIZE1_MASK	config/igb/e1000_defines.h	/^#define E1000_PSRCTL_BSIZE1_MASK /;"	d
E1000_PSRCTL_BSIZE1_SHIFT	config/igb/e1000_defines.h	/^#define E1000_PSRCTL_BSIZE1_SHIFT /;"	d
E1000_PSRCTL_BSIZE2_MASK	config/igb/e1000_defines.h	/^#define E1000_PSRCTL_BSIZE2_MASK /;"	d
E1000_PSRCTL_BSIZE2_SHIFT	config/igb/e1000_defines.h	/^#define E1000_PSRCTL_BSIZE2_SHIFT /;"	d
E1000_PSRCTL_BSIZE3_MASK	config/igb/e1000_defines.h	/^#define E1000_PSRCTL_BSIZE3_MASK /;"	d
E1000_PSRCTL_BSIZE3_SHIFT	config/igb/e1000_defines.h	/^#define E1000_PSRCTL_BSIZE3_SHIFT /;"	d
E1000_PSRTYPE	config/igb/e1000_regs.h	/^#define E1000_PSRTYPE(/;"	d
E1000_PTC1023	config/igb/e1000_regs.h	/^#define E1000_PTC1023 /;"	d
E1000_PTC127	config/igb/e1000_regs.h	/^#define E1000_PTC127 /;"	d
E1000_PTC1522	config/igb/e1000_regs.h	/^#define E1000_PTC1522 /;"	d
E1000_PTC255	config/igb/e1000_regs.h	/^#define E1000_PTC255 /;"	d
E1000_PTC511	config/igb/e1000_regs.h	/^#define E1000_PTC511 /;"	d
E1000_PTC64	config/igb/e1000_regs.h	/^#define E1000_PTC64 /;"	d
E1000_QDE	config/igb/e1000_regs.h	/^#define E1000_QDE /;"	d
E1000_RA	config/igb/e1000_regs.h	/^#define E1000_RA /;"	d
E1000_RA2	config/igb/e1000_regs.h	/^#define E1000_RA2 /;"	d
E1000_RAH	config/igb/e1000_regs.h	/^#define E1000_RAH(/;"	d
E1000_RAH_ASEL_SRC_ADDR	config/igb/e1000_defines.h	/^#define E1000_RAH_ASEL_SRC_ADDR /;"	d
E1000_RAH_AV	config/igb/e1000_defines.h	/^#define E1000_RAH_AV /;"	d
E1000_RAH_MAC_ADDR_LEN	config/igb/e1000_defines.h	/^#define E1000_RAH_MAC_ADDR_LEN /;"	d
E1000_RAH_POOL_1	config/igb/e1000_defines.h	/^#define E1000_RAH_POOL_1 /;"	d
E1000_RAH_POOL_MASK	config/igb/e1000_defines.h	/^#define E1000_RAH_POOL_MASK /;"	d
E1000_RAH_QSEL_ENABLE	config/igb/e1000_defines.h	/^#define E1000_RAH_QSEL_ENABLE /;"	d
E1000_RAL	config/igb/e1000_regs.h	/^#define E1000_RAL(/;"	d
E1000_RAL_MAC_ADDR_LEN	config/igb/e1000_defines.h	/^#define E1000_RAL_MAC_ADDR_LEN /;"	d
E1000_RAR_ENTRIES_82575	config/igb/e1000_82575.h	/^#define E1000_RAR_ENTRIES_82575 /;"	d
E1000_RAR_ENTRIES_82576	config/igb/e1000_82575.h	/^#define E1000_RAR_ENTRIES_82576 /;"	d
E1000_RAR_ENTRIES_82580	config/igb/e1000_82575.h	/^#define E1000_RAR_ENTRIES_82580 /;"	d
E1000_RAR_ENTRIES_I350	config/igb/e1000_82575.h	/^#define E1000_RAR_ENTRIES_I350 /;"	d
E1000_RCTL	config/igb/e1000_regs.h	/^#define E1000_RCTL /;"	d
E1000_RCTL_BAM	config/igb/e1000_defines.h	/^#define E1000_RCTL_BAM /;"	d
E1000_RCTL_CFIEN	config/igb/e1000_defines.h	/^#define E1000_RCTL_CFIEN /;"	d
E1000_RCTL_DPF	config/igb/e1000_defines.h	/^#define E1000_RCTL_DPF /;"	d
E1000_RCTL_EN	config/igb/e1000_defines.h	/^#define E1000_RCTL_EN /;"	d
E1000_RCTL_LBM_MAC	config/igb/e1000_defines.h	/^#define E1000_RCTL_LBM_MAC /;"	d
E1000_RCTL_LBM_TCVR	config/igb/e1000_defines.h	/^#define E1000_RCTL_LBM_TCVR /;"	d
E1000_RCTL_LPE	config/igb/e1000_defines.h	/^#define E1000_RCTL_LPE /;"	d
E1000_RCTL_MO_SHIFT	config/igb/e1000_defines.h	/^#define E1000_RCTL_MO_SHIFT /;"	d
E1000_RCTL_MPE	config/igb/e1000_defines.h	/^#define E1000_RCTL_MPE /;"	d
E1000_RCTL_PMCF	config/igb/e1000_defines.h	/^#define E1000_RCTL_PMCF /;"	d
E1000_RCTL_RDMTS_HALF	config/igb/e1000_defines.h	/^#define E1000_RCTL_RDMTS_HALF /;"	d
E1000_RCTL_SBP	config/igb/e1000_defines.h	/^#define E1000_RCTL_SBP /;"	d
E1000_RCTL_SECRC	config/igb/e1000_defines.h	/^#define E1000_RCTL_SECRC /;"	d
E1000_RCTL_SZ_256	config/igb/e1000_defines.h	/^#define E1000_RCTL_SZ_256 /;"	d
E1000_RCTL_SZ_512	config/igb/e1000_defines.h	/^#define E1000_RCTL_SZ_512 /;"	d
E1000_RCTL_UPE	config/igb/e1000_defines.h	/^#define E1000_RCTL_UPE /;"	d
E1000_RCTL_VFE	config/igb/e1000_defines.h	/^#define E1000_RCTL_VFE /;"	d
E1000_RDBAH	config/igb/e1000_regs.h	/^#define E1000_RDBAH(/;"	d
E1000_RDBAL	config/igb/e1000_regs.h	/^#define E1000_RDBAL(/;"	d
E1000_RDH	config/igb/e1000_regs.h	/^#define E1000_RDH(/;"	d
E1000_RDLEN	config/igb/e1000_regs.h	/^#define E1000_RDLEN(/;"	d
E1000_RDT	config/igb/e1000_regs.h	/^#define E1000_RDT(/;"	d
E1000_REMOVED	config/igb/e1000_regs.h	/^#define E1000_REMOVED(/;"	d
E1000_RETA	config/igb/e1000_regs.h	/^#define E1000_RETA(/;"	d
E1000_REVISION_2	config/igb/e1000_hw.h	/^#define E1000_REVISION_2 /;"	d
E1000_REVISION_4	config/igb/e1000_hw.h	/^#define E1000_REVISION_4 /;"	d
E1000_RFC	config/igb/e1000_regs.h	/^#define E1000_RFC /;"	d
E1000_RFCTL	config/igb/e1000_regs.h	/^#define E1000_RFCTL /;"	d
E1000_RFCTL_IPV6_EX_DIS	config/igb/e1000_defines.h	/^#define E1000_RFCTL_IPV6_EX_DIS /;"	d
E1000_RFCTL_LEF	config/igb/e1000_defines.h	/^#define E1000_RFCTL_LEF /;"	d
E1000_RJC	config/igb/e1000_regs.h	/^#define E1000_RJC /;"	d
E1000_RLEC	config/igb/e1000_regs.h	/^#define E1000_RLEC /;"	d
E1000_RLPML	config/igb/e1000_regs.h	/^#define E1000_RLPML /;"	d
E1000_RNBC	config/igb/e1000_regs.h	/^#define E1000_RNBC /;"	d
E1000_ROC	config/igb/e1000_regs.h	/^#define E1000_ROC /;"	d
E1000_RPLOLR	config/igb/e1000_regs.h	/^#define E1000_RPLOLR /;"	d
E1000_RPLOLR_STRCRC	config/igb/e1000_82575.h	/^#define E1000_RPLOLR_STRCRC /;"	d
E1000_RPLOLR_STRVLAN	config/igb/e1000_82575.h	/^#define E1000_RPLOLR_STRVLAN /;"	d
E1000_RPTHC	config/igb/e1000_regs.h	/^#define E1000_RPTHC /;"	d
E1000_RQDPC	config/igb/e1000_regs.h	/^#define E1000_RQDPC(/;"	d
E1000_RSSRK	config/igb/e1000_regs.h	/^#define E1000_RSSRK(/;"	d
E1000_RTTBCNRC	config/igb/e1000_regs.h	/^#define E1000_RTTBCNRC	/;"	d
E1000_RTTBCNRC_RF_DEC_MASK	config/igb/e1000_defines.h	/^#define E1000_RTTBCNRC_RF_DEC_MASK	/;"	d
E1000_RTTBCNRC_RF_INT_MASK	config/igb/e1000_defines.h	/^#define E1000_RTTBCNRC_RF_INT_MASK	/;"	d
E1000_RTTBCNRC_RF_INT_SHIFT	config/igb/e1000_defines.h	/^#define E1000_RTTBCNRC_RF_INT_SHIFT	/;"	d
E1000_RTTBCNRC_RS_ENA	config/igb/e1000_defines.h	/^#define E1000_RTTBCNRC_RS_ENA	/;"	d
E1000_RTTBCNRM	config/igb/e1000_regs.h	/^#define E1000_RTTBCNRM	/;"	d
E1000_RTTDQSEL	config/igb/e1000_regs.h	/^#define E1000_RTTDQSEL	/;"	d
E1000_RUC	config/igb/e1000_regs.h	/^#define E1000_RUC /;"	d
E1000_RXCSUM	config/igb/e1000_regs.h	/^#define E1000_RXCSUM /;"	d
E1000_RXCSUM_CRCOFL	config/igb/e1000_defines.h	/^#define E1000_RXCSUM_CRCOFL /;"	d
E1000_RXCSUM_IPOFL	config/igb/e1000_defines.h	/^#define E1000_RXCSUM_IPOFL /;"	d
E1000_RXCSUM_PCSD	config/igb/e1000_defines.h	/^#define E1000_RXCSUM_PCSD /;"	d
E1000_RXCSUM_TUOFL	config/igb/e1000_defines.h	/^#define E1000_RXCSUM_TUOFL /;"	d
E1000_RXCTL	config/igb/e1000_regs.h	/^#define E1000_RXCTL(/;"	d
E1000_RXDADV_HDRBUFLEN_MASK	config/igb/e1000_82575.h	/^#define E1000_RXDADV_HDRBUFLEN_MASK /;"	d
E1000_RXDADV_HDRBUFLEN_SHIFT	config/igb/e1000_82575.h	/^#define E1000_RXDADV_HDRBUFLEN_SHIFT /;"	d
E1000_RXDADV_STAT_TS	config/igb/e1000_82575.h	/^#define E1000_RXDADV_STAT_TS /;"	d
E1000_RXDADV_STAT_TSIP	config/igb/e1000_82575.h	/^#define E1000_RXDADV_STAT_TSIP /;"	d
E1000_RXDCTL	config/igb/e1000_regs.h	/^#define E1000_RXDCTL(/;"	d
E1000_RXDCTL_QUEUE_ENABLE	config/igb/e1000_82575.h	/^#define E1000_RXDCTL_QUEUE_ENABLE /;"	d
E1000_RXDEXT_ERR_FRAME_ERR_MASK	config/igb/e1000_defines.h	/^#define E1000_RXDEXT_ERR_FRAME_ERR_MASK /;"	d
E1000_RXDEXT_STATERR_CE	config/igb/e1000_defines.h	/^#define E1000_RXDEXT_STATERR_CE /;"	d
E1000_RXDEXT_STATERR_CXE	config/igb/e1000_defines.h	/^#define E1000_RXDEXT_STATERR_CXE /;"	d
E1000_RXDEXT_STATERR_IPE	config/igb/e1000_defines.h	/^#define E1000_RXDEXT_STATERR_IPE /;"	d
E1000_RXDEXT_STATERR_LB	config/igb/e1000_defines.h	/^#define E1000_RXDEXT_STATERR_LB /;"	d
E1000_RXDEXT_STATERR_RXE	config/igb/e1000_defines.h	/^#define E1000_RXDEXT_STATERR_RXE /;"	d
E1000_RXDEXT_STATERR_SE	config/igb/e1000_defines.h	/^#define E1000_RXDEXT_STATERR_SE /;"	d
E1000_RXDEXT_STATERR_SEQ	config/igb/e1000_defines.h	/^#define E1000_RXDEXT_STATERR_SEQ /;"	d
E1000_RXDEXT_STATERR_TCPE	config/igb/e1000_defines.h	/^#define E1000_RXDEXT_STATERR_TCPE /;"	d
E1000_RXD_STAT_DD	config/igb/e1000_defines.h	/^#define E1000_RXD_STAT_DD /;"	d
E1000_RXD_STAT_EOP	config/igb/e1000_defines.h	/^#define E1000_RXD_STAT_EOP /;"	d
E1000_RXD_STAT_IXSM	config/igb/e1000_defines.h	/^#define E1000_RXD_STAT_IXSM /;"	d
E1000_RXD_STAT_TCPCS	config/igb/e1000_defines.h	/^#define E1000_RXD_STAT_TCPCS /;"	d
E1000_RXD_STAT_TS	config/igb/e1000_defines.h	/^#define E1000_RXD_STAT_TS /;"	d
E1000_RXD_STAT_UDPCS	config/igb/e1000_defines.h	/^#define E1000_RXD_STAT_UDPCS /;"	d
E1000_RXD_STAT_VP	config/igb/e1000_defines.h	/^#define E1000_RXD_STAT_VP /;"	d
E1000_RXERRC	config/igb/e1000_regs.h	/^#define E1000_RXERRC /;"	d
E1000_RXPBS	config/igb/e1000_regs.h	/^#define E1000_RXPBS	/;"	d
E1000_RXPBS_CFG_TS_EN	config/igb/e1000_defines.h	/^#define E1000_RXPBS_CFG_TS_EN /;"	d
E1000_RXPBS_SIZE_MASK_82576	config/igb/e1000_82575.h	/^#define E1000_RXPBS_SIZE_MASK_82576 /;"	d
E1000_RXSATRH	config/igb/e1000_regs.h	/^#define E1000_RXSATRH /;"	d
E1000_RXSATRL	config/igb/e1000_regs.h	/^#define E1000_RXSATRL /;"	d
E1000_RXSTMPH	config/igb/e1000_regs.h	/^#define E1000_RXSTMPH /;"	d
E1000_RXSTMPL	config/igb/e1000_regs.h	/^#define E1000_RXSTMPL /;"	d
E1000_SAQF	config/igb/e1000_regs.h	/^#define E1000_SAQF(/;"	d
E1000_SAQF0	config/igb/e1000_regs.h	/^#define E1000_SAQF0 /;"	d
E1000_SCC	config/igb/e1000_regs.h	/^#define E1000_SCC /;"	d
E1000_SCCTL	config/igb/e1000_regs.h	/^#define E1000_SCCTL /;"	d
E1000_SCTL	config/igb/e1000_regs.h	/^#define E1000_SCTL /;"	d
E1000_SCTL_DISABLE_SERDES_LOOPBACK	config/igb/e1000_defines.h	/^#define E1000_SCTL_DISABLE_SERDES_LOOPBACK /;"	d
E1000_SCVPC	config/igb/e1000_regs.h	/^#define E1000_SCVPC /;"	d
E1000_SEC	config/igb/e1000_regs.h	/^#define E1000_SEC /;"	d
E1000_SFF_ETH_FLAGS_OFFSET	config/igb/e1000_phy.h	/^#define E1000_SFF_ETH_FLAGS_OFFSET	/;"	d
E1000_SFF_IDENTIFIER_OFFSET	config/igb/e1000_phy.h	/^#define E1000_SFF_IDENTIFIER_OFFSET	/;"	d
E1000_SFF_IDENTIFIER_SFF	config/igb/e1000_phy.h	/^#define E1000_SFF_IDENTIFIER_SFF	/;"	d
E1000_SFF_IDENTIFIER_SFP	config/igb/e1000_phy.h	/^#define E1000_SFF_IDENTIFIER_SFP	/;"	d
E1000_SPQF	config/igb/e1000_regs.h	/^#define E1000_SPQF(/;"	d
E1000_SPQF0	config/igb/e1000_regs.h	/^#define E1000_SPQF0 /;"	d
E1000_SRRCTL	config/igb/e1000_regs.h	/^#define E1000_SRRCTL(/;"	d
E1000_SRRCTL_BSIZEHDRSIZE_SHIFT	config/igb/e1000_82575.h	/^#define E1000_SRRCTL_BSIZEHDRSIZE_SHIFT /;"	d
E1000_SRRCTL_BSIZEPKT_SHIFT	config/igb/e1000_82575.h	/^#define E1000_SRRCTL_BSIZEPKT_SHIFT /;"	d
E1000_SRRCTL_DESCTYPE_ADV_ONEBUF	config/igb/e1000_82575.h	/^#define E1000_SRRCTL_DESCTYPE_ADV_ONEBUF /;"	d
E1000_SRRCTL_DESCTYPE_HDR_SPLIT_ALWAYS	config/igb/e1000_82575.h	/^#define E1000_SRRCTL_DESCTYPE_HDR_SPLIT_ALWAYS /;"	d
E1000_SRRCTL_DROP_EN	config/igb/e1000_82575.h	/^#define E1000_SRRCTL_DROP_EN /;"	d
E1000_SRRCTL_TIMESTAMP	config/igb/e1000_82575.h	/^#define E1000_SRRCTL_TIMESTAMP /;"	d
E1000_SRWR	config/igb/e1000_regs.h	/^#define E1000_SRWR	/;"	d
E1000_STATUS	config/igb/e1000_regs.h	/^#define E1000_STATUS /;"	d
E1000_STATUS_2P5_SKU	config/igb/e1000_defines.h	/^#define E1000_STATUS_2P5_SKU	/;"	d
E1000_STATUS_2P5_SKU_OVER	config/igb/e1000_defines.h	/^#define E1000_STATUS_2P5_SKU_OVER	/;"	d
E1000_STATUS_FD	config/igb/e1000_defines.h	/^#define E1000_STATUS_FD /;"	d
E1000_STATUS_FUNC_1	config/igb/e1000_defines.h	/^#define E1000_STATUS_FUNC_1 /;"	d
E1000_STATUS_FUNC_MASK	config/igb/e1000_defines.h	/^#define E1000_STATUS_FUNC_MASK /;"	d
E1000_STATUS_FUNC_SHIFT	config/igb/e1000_defines.h	/^#define E1000_STATUS_FUNC_SHIFT /;"	d
E1000_STATUS_GIO_MASTER_ENABLE	config/igb/e1000_defines.h	/^#define E1000_STATUS_GIO_MASTER_ENABLE /;"	d
E1000_STATUS_LU	config/igb/e1000_defines.h	/^#define E1000_STATUS_LU /;"	d
E1000_STATUS_SPEED_100	config/igb/e1000_defines.h	/^#define E1000_STATUS_SPEED_100 /;"	d
E1000_STATUS_SPEED_1000	config/igb/e1000_defines.h	/^#define E1000_STATUS_SPEED_1000 /;"	d
E1000_STATUS_TXOFF	config/igb/e1000_defines.h	/^#define E1000_STATUS_TXOFF /;"	d
E1000_STAT_DEV_RST_SET	config/igb/e1000_82575.h	/^#define E1000_STAT_DEV_RST_SET /;"	d
E1000_STM_OPCODE	config/igb/e1000_i210.h	/^#define E1000_STM_OPCODE	/;"	d
E1000_SWFW_EEP_SM	config/igb/e1000_defines.h	/^#define E1000_SWFW_EEP_SM /;"	d
E1000_SWFW_PHY0_SM	config/igb/e1000_defines.h	/^#define E1000_SWFW_PHY0_SM /;"	d
E1000_SWFW_PHY1_SM	config/igb/e1000_defines.h	/^#define E1000_SWFW_PHY1_SM /;"	d
E1000_SWFW_PHY2_SM	config/igb/e1000_defines.h	/^#define E1000_SWFW_PHY2_SM /;"	d
E1000_SWFW_PHY3_SM	config/igb/e1000_defines.h	/^#define E1000_SWFW_PHY3_SM /;"	d
E1000_SWSM	config/igb/e1000_regs.h	/^#define E1000_SWSM /;"	d
E1000_SWSM_SMBI	config/igb/e1000_defines.h	/^#define E1000_SWSM_SMBI /;"	d
E1000_SWSM_SWESMBI	config/igb/e1000_defines.h	/^#define E1000_SWSM_SWESMBI /;"	d
E1000_SW_FW_SYNC	config/igb/e1000_regs.h	/^#define E1000_SW_FW_SYNC /;"	d
E1000_SW_SYNCH_MB	config/igb/e1000_82575.h	/^#define E1000_SW_SYNCH_MB /;"	d
E1000_SYMERRS	config/igb/e1000_regs.h	/^#define E1000_SYMERRS /;"	d
E1000_SYNQF	config/igb/e1000_regs.h	/^#define E1000_SYNQF(/;"	d
E1000_SYSTIMH	config/igb/e1000_regs.h	/^#define E1000_SYSTIMH /;"	d
E1000_SYSTIML	config/igb/e1000_regs.h	/^#define E1000_SYSTIML /;"	d
E1000_SYSTIMR	config/igb/e1000_regs.h	/^#define E1000_SYSTIMR /;"	d
E1000_TCPTIMER	config/igb/e1000_regs.h	/^#define E1000_TCPTIMER /;"	d
E1000_TCTL	config/igb/e1000_regs.h	/^#define E1000_TCTL /;"	d
E1000_TCTL_COLD	config/igb/e1000_defines.h	/^#define E1000_TCTL_COLD /;"	d
E1000_TCTL_CT	config/igb/e1000_defines.h	/^#define E1000_TCTL_CT /;"	d
E1000_TCTL_EN	config/igb/e1000_defines.h	/^#define E1000_TCTL_EN /;"	d
E1000_TCTL_EXT	config/igb/e1000_regs.h	/^#define E1000_TCTL_EXT /;"	d
E1000_TCTL_PSP	config/igb/e1000_defines.h	/^#define E1000_TCTL_PSP /;"	d
E1000_TCTL_RTLC	config/igb/e1000_defines.h	/^#define E1000_TCTL_RTLC /;"	d
E1000_TDBAH	config/igb/e1000_regs.h	/^#define E1000_TDBAH(/;"	d
E1000_TDBAL	config/igb/e1000_regs.h	/^#define E1000_TDBAL(/;"	d
E1000_TDFH	config/igb/e1000_regs.h	/^#define E1000_TDFH /;"	d
E1000_TDFHS	config/igb/e1000_regs.h	/^#define E1000_TDFHS /;"	d
E1000_TDFPC	config/igb/e1000_regs.h	/^#define E1000_TDFPC /;"	d
E1000_TDFT	config/igb/e1000_regs.h	/^#define E1000_TDFT /;"	d
E1000_TDH	config/igb/e1000_regs.h	/^#define E1000_TDH(/;"	d
E1000_TDLEN	config/igb/e1000_regs.h	/^#define E1000_TDLEN(/;"	d
E1000_TDT	config/igb/e1000_regs.h	/^#define E1000_TDT(/;"	d
E1000_TDWBAH	config/igb/e1000_regs.h	/^#define E1000_TDWBAH(/;"	d
E1000_TDWBAL	config/igb/e1000_regs.h	/^#define E1000_TDWBAL(/;"	d
E1000_THHIGHTC	config/igb/e1000_regs.h	/^#define E1000_THHIGHTC	/;"	d
E1000_THLOWTC	config/igb/e1000_regs.h	/^#define E1000_THLOWTC	/;"	d
E1000_THMIDTC	config/igb/e1000_regs.h	/^#define E1000_THMIDTC	/;"	d
E1000_THMJT	config/igb/e1000_regs.h	/^#define E1000_THMJT	/;"	d
E1000_THSTAT	config/igb/e1000_regs.h	/^#define E1000_THSTAT	/;"	d
E1000_THSTAT_LINK_THROTTLE	config/igb/e1000_defines.h	/^#define E1000_THSTAT_LINK_THROTTLE /;"	d
E1000_THSTAT_PWR_DOWN	config/igb/e1000_defines.h	/^#define E1000_THSTAT_PWR_DOWN /;"	d
E1000_TIMINCA	config/igb/e1000_regs.h	/^#define E1000_TIMINCA /;"	d
E1000_TIMINCA_16NS_SHIFT	config/igb/e1000_defines.h	/^#define E1000_TIMINCA_16NS_SHIFT /;"	d
E1000_TIPG	config/igb/e1000_regs.h	/^#define E1000_TIPG /;"	d
E1000_TNCRS	config/igb/e1000_regs.h	/^#define E1000_TNCRS /;"	d
E1000_TORH	config/igb/e1000_regs.h	/^#define E1000_TORH /;"	d
E1000_TORL	config/igb/e1000_regs.h	/^#define E1000_TORL /;"	d
E1000_TOTH	config/igb/e1000_regs.h	/^#define E1000_TOTH /;"	d
E1000_TOTL	config/igb/e1000_regs.h	/^#define E1000_TOTL /;"	d
E1000_TPR	config/igb/e1000_regs.h	/^#define E1000_TPR /;"	d
E1000_TPT	config/igb/e1000_regs.h	/^#define E1000_TPT /;"	d
E1000_TQAVCC_IDLESLOPE_MASK	config/igb/e1000_defines.h	/^#define E1000_TQAVCC_IDLESLOPE_MASK	/;"	d
E1000_TQAVCC_QUEUEMODE	config/igb/e1000_defines.h	/^#define E1000_TQAVCC_QUEUEMODE	/;"	d
E1000_TQAVCTRL_DATAFETCHARB	config/igb/e1000_defines.h	/^#define E1000_TQAVCTRL_DATAFETCHARB	/;"	d
E1000_TQAVCTRL_DATATRANARB	config/igb/e1000_defines.h	/^#define E1000_TQAVCTRL_DATATRANARB	/;"	d
E1000_TQAVCTRL_DATATRANTIM	config/igb/e1000_defines.h	/^#define E1000_TQAVCTRL_DATATRANTIM	/;"	d
E1000_TQAVCTRL_FETCHTIME_DELTA	config/igb/e1000_defines.h	/^#define E1000_TQAVCTRL_FETCHTIME_DELTA	/;"	d
E1000_TQAVCTRL_SP_WAIT_SR	config/igb/e1000_defines.h	/^#define E1000_TQAVCTRL_SP_WAIT_SR	/;"	d
E1000_TQAVCTRL_XMIT_MODE	config/igb/e1000_defines.h	/^#define E1000_TQAVCTRL_XMIT_MODE	/;"	d
E1000_TRGTTIMH0	config/igb/e1000_regs.h	/^#define E1000_TRGTTIMH0 /;"	d
E1000_TRGTTIMH1	config/igb/e1000_regs.h	/^#define E1000_TRGTTIMH1 /;"	d
E1000_TRGTTIML0	config/igb/e1000_regs.h	/^#define E1000_TRGTTIML0 /;"	d
E1000_TRGTTIML1	config/igb/e1000_regs.h	/^#define E1000_TRGTTIML1 /;"	d
E1000_TSAUXC	config/igb/e1000_regs.h	/^#define E1000_TSAUXC /;"	d
E1000_TSCTC	config/igb/e1000_regs.h	/^#define E1000_TSCTC /;"	d
E1000_TSCTFC	config/igb/e1000_regs.h	/^#define E1000_TSCTFC /;"	d
E1000_TSICR	config/igb/e1000_regs.h	/^#define E1000_TSICR /;"	d
E1000_TSICR_TXTS	config/igb/e1000_defines.h	/^#define E1000_TSICR_TXTS /;"	d
E1000_TSIM	config/igb/e1000_regs.h	/^#define E1000_TSIM /;"	d
E1000_TSSDP	config/igb/e1000_regs.h	/^#define E1000_TSSDP /;"	d
E1000_TSYNCRXCFG	config/igb/e1000_regs.h	/^#define E1000_TSYNCRXCFG /;"	d
E1000_TSYNCRXCFG_PTP_V1_CTRLT_MASK	config/igb/e1000_defines.h	/^#define E1000_TSYNCRXCFG_PTP_V1_CTRLT_MASK /;"	d
E1000_TSYNCRXCFG_PTP_V1_DELAY_REQ_MESSAGE	config/igb/e1000_defines.h	/^#define E1000_TSYNCRXCFG_PTP_V1_DELAY_REQ_MESSAGE /;"	d
E1000_TSYNCRXCFG_PTP_V1_DELAY_RESP_MESSAGE	config/igb/e1000_defines.h	/^#define E1000_TSYNCRXCFG_PTP_V1_DELAY_RESP_MESSAGE /;"	d
E1000_TSYNCRXCFG_PTP_V1_FOLLOWUP_MESSAGE	config/igb/e1000_defines.h	/^#define E1000_TSYNCRXCFG_PTP_V1_FOLLOWUP_MESSAGE /;"	d
E1000_TSYNCRXCFG_PTP_V1_MANAGEMENT_MESSAGE	config/igb/e1000_defines.h	/^#define E1000_TSYNCRXCFG_PTP_V1_MANAGEMENT_MESSAGE /;"	d
E1000_TSYNCRXCFG_PTP_V1_SYNC_MESSAGE	config/igb/e1000_defines.h	/^#define E1000_TSYNCRXCFG_PTP_V1_SYNC_MESSAGE /;"	d
E1000_TSYNCRXCFG_PTP_V2_ANNOUNCE_MESSAGE	config/igb/e1000_defines.h	/^#define E1000_TSYNCRXCFG_PTP_V2_ANNOUNCE_MESSAGE /;"	d
E1000_TSYNCRXCFG_PTP_V2_DELAY_REQ_MESSAGE	config/igb/e1000_defines.h	/^#define E1000_TSYNCRXCFG_PTP_V2_DELAY_REQ_MESSAGE /;"	d
E1000_TSYNCRXCFG_PTP_V2_DELAY_RESP_MESSAGE	config/igb/e1000_defines.h	/^#define E1000_TSYNCRXCFG_PTP_V2_DELAY_RESP_MESSAGE /;"	d
E1000_TSYNCRXCFG_PTP_V2_FOLLOWUP_MESSAGE	config/igb/e1000_defines.h	/^#define E1000_TSYNCRXCFG_PTP_V2_FOLLOWUP_MESSAGE /;"	d
E1000_TSYNCRXCFG_PTP_V2_MANAGEMENT_MESSAGE	config/igb/e1000_defines.h	/^#define E1000_TSYNCRXCFG_PTP_V2_MANAGEMENT_MESSAGE /;"	d
E1000_TSYNCRXCFG_PTP_V2_MSGID_MASK	config/igb/e1000_defines.h	/^#define E1000_TSYNCRXCFG_PTP_V2_MSGID_MASK /;"	d
E1000_TSYNCRXCFG_PTP_V2_PATH_DELAY_FOLLOWUP_MESSAGE	config/igb/e1000_defines.h	/^#define E1000_TSYNCRXCFG_PTP_V2_PATH_DELAY_FOLLOWUP_MESSAGE /;"	d
E1000_TSYNCRXCFG_PTP_V2_PATH_DELAY_REQ_MESSAGE	config/igb/e1000_defines.h	/^#define E1000_TSYNCRXCFG_PTP_V2_PATH_DELAY_REQ_MESSAGE /;"	d
E1000_TSYNCRXCFG_PTP_V2_PATH_DELAY_RESP_MESSAGE	config/igb/e1000_defines.h	/^#define E1000_TSYNCRXCFG_PTP_V2_PATH_DELAY_RESP_MESSAGE /;"	d
E1000_TSYNCRXCFG_PTP_V2_SIGNALLING_MESSAGE	config/igb/e1000_defines.h	/^#define E1000_TSYNCRXCFG_PTP_V2_SIGNALLING_MESSAGE /;"	d
E1000_TSYNCRXCFG_PTP_V2_SYNC_MESSAGE	config/igb/e1000_defines.h	/^#define E1000_TSYNCRXCFG_PTP_V2_SYNC_MESSAGE /;"	d
E1000_TSYNCRXCTL	config/igb/e1000_regs.h	/^#define E1000_TSYNCRXCTL /;"	d
E1000_TSYNCRXCTL_ENABLED	config/igb/e1000_defines.h	/^#define E1000_TSYNCRXCTL_ENABLED /;"	d
E1000_TSYNCRXCTL_TYPE_ALL	config/igb/e1000_defines.h	/^#define E1000_TSYNCRXCTL_TYPE_ALL /;"	d
E1000_TSYNCRXCTL_TYPE_EVENT_V2	config/igb/e1000_defines.h	/^#define E1000_TSYNCRXCTL_TYPE_EVENT_V2 /;"	d
E1000_TSYNCRXCTL_TYPE_L2_L4_V2	config/igb/e1000_defines.h	/^#define E1000_TSYNCRXCTL_TYPE_L2_L4_V2 /;"	d
E1000_TSYNCRXCTL_TYPE_L2_V2	config/igb/e1000_defines.h	/^#define E1000_TSYNCRXCTL_TYPE_L2_V2 /;"	d
E1000_TSYNCRXCTL_TYPE_L4_V1	config/igb/e1000_defines.h	/^#define E1000_TSYNCRXCTL_TYPE_L4_V1 /;"	d
E1000_TSYNCRXCTL_TYPE_MASK	config/igb/e1000_defines.h	/^#define E1000_TSYNCRXCTL_TYPE_MASK /;"	d
E1000_TSYNCRXCTL_VALID	config/igb/e1000_defines.h	/^#define E1000_TSYNCRXCTL_VALID /;"	d
E1000_TSYNCTXCTL	config/igb/e1000_regs.h	/^#define E1000_TSYNCTXCTL /;"	d
E1000_TSYNCTXCTL_ENABLED	config/igb/e1000_defines.h	/^#define E1000_TSYNCTXCTL_ENABLED /;"	d
E1000_TSYNCTXCTL_VALID	config/igb/e1000_defines.h	/^#define E1000_TSYNCTXCTL_VALID /;"	d
E1000_TXCTL	config/igb/e1000_regs.h	/^#define E1000_TXCTL(/;"	d
E1000_TXCW	config/igb/e1000_regs.h	/^#define E1000_TXCW /;"	d
E1000_TXCW_ASM_DIR	config/igb/e1000_defines.h	/^#define E1000_TXCW_ASM_DIR	/;"	d
E1000_TXCW_PAUSE	config/igb/e1000_defines.h	/^#define E1000_TXCW_PAUSE	/;"	d
E1000_TXDCTL	config/igb/e1000_regs.h	/^#define E1000_TXDCTL(/;"	d
E1000_TXDCTL_PRIORITY	config/igb/e1000_defines.h	/^#define E1000_TXDCTL_PRIORITY	/;"	d
E1000_TXDCTL_QUEUE_ENABLE	config/igb/e1000_82575.h	/^#define E1000_TXDCTL_QUEUE_ENABLE /;"	d
E1000_TXD_CMD_DEXT	config/igb/e1000_defines.h	/^#define E1000_TXD_CMD_DEXT /;"	d
E1000_TXD_CMD_EOP	config/igb/e1000_defines.h	/^#define E1000_TXD_CMD_EOP /;"	d
E1000_TXD_CMD_IFCS	config/igb/e1000_defines.h	/^#define E1000_TXD_CMD_IFCS /;"	d
E1000_TXD_CMD_RS	config/igb/e1000_defines.h	/^#define E1000_TXD_CMD_RS /;"	d
E1000_TXD_POPTS_IXSM	config/igb/e1000_defines.h	/^#define E1000_TXD_POPTS_IXSM /;"	d
E1000_TXD_POPTS_TXSM	config/igb/e1000_defines.h	/^#define E1000_TXD_POPTS_TXSM /;"	d
E1000_TXD_STAT_DD	config/igb/e1000_defines.h	/^#define E1000_TXD_STAT_DD /;"	d
E1000_TXPBS	config/igb/e1000_regs.h	/^#define E1000_TXPBS	/;"	d
E1000_TXSTMPH	config/igb/e1000_regs.h	/^#define E1000_TXSTMPH /;"	d
E1000_TXSTMPL	config/igb/e1000_regs.h	/^#define E1000_TXSTMPL /;"	d
E1000_TXSWC	config/igb/e1000_regs.h	/^#define E1000_TXSWC /;"	d
E1000_UTA	config/igb/e1000_regs.h	/^#define E1000_UTA /;"	d
E1000_VET	config/igb/e1000_regs.h	/^#define E1000_VET /;"	d
E1000_VFLRE	config/igb/e1000_regs.h	/^#define E1000_VFLRE /;"	d
E1000_VFMAILBOX_SIZE	config/igb/e1000_mbx.h	/^#define E1000_VFMAILBOX_SIZE	/;"	d
E1000_VFRE	config/igb/e1000_regs.h	/^#define E1000_VFRE /;"	d
E1000_VFTA	config/igb/e1000_regs.h	/^#define E1000_VFTA /;"	d
E1000_VFTA_ENTRY_BIT_SHIFT_MASK	config/igb/e1000_defines.h	/^#define E1000_VFTA_ENTRY_BIT_SHIFT_MASK /;"	d
E1000_VFTA_ENTRY_MASK	config/igb/e1000_defines.h	/^#define E1000_VFTA_ENTRY_MASK /;"	d
E1000_VFTA_ENTRY_SHIFT	config/igb/e1000_defines.h	/^#define E1000_VFTA_ENTRY_SHIFT /;"	d
E1000_VFTE	config/igb/e1000_regs.h	/^#define E1000_VFTE /;"	d
E1000_VF_MAC_FILTER_ADD	config/igb/e1000_mbx.h	/^#define E1000_VF_MAC_FILTER_ADD	/;"	d
E1000_VF_MAC_FILTER_CLR	config/igb/e1000_mbx.h	/^#define E1000_VF_MAC_FILTER_CLR	/;"	d
E1000_VF_RESET	config/igb/e1000_mbx.h	/^#define E1000_VF_RESET	/;"	d
E1000_VF_SET_LPE	config/igb/e1000_mbx.h	/^#define E1000_VF_SET_LPE	/;"	d
E1000_VF_SET_MAC_ADDR	config/igb/e1000_mbx.h	/^#define E1000_VF_SET_MAC_ADDR	/;"	d
E1000_VF_SET_MULTICAST	config/igb/e1000_mbx.h	/^#define E1000_VF_SET_MULTICAST	/;"	d
E1000_VF_SET_PROMISC	config/igb/e1000_mbx.h	/^#define E1000_VF_SET_PROMISC	/;"	d
E1000_VF_SET_PROMISC_MULTICAST	config/igb/e1000_mbx.h	/^#define E1000_VF_SET_PROMISC_MULTICAST	/;"	d
E1000_VF_SET_VLAN	config/igb/e1000_mbx.h	/^#define E1000_VF_SET_VLAN	/;"	d
E1000_VLAN_FILTER_TBL_SIZE	config/igb/e1000_defines.h	/^#define E1000_VLAN_FILTER_TBL_SIZE /;"	d
E1000_VLAPQF	config/igb/e1000_regs.h	/^#define E1000_VLAPQF	/;"	d
E1000_VLAPQF_P_VALID	config/igb/e1000_defines.h	/^#define E1000_VLAPQF_P_VALID(/;"	d
E1000_VLAPQF_QUEUE_MASK	config/igb/e1000_defines.h	/^#define E1000_VLAPQF_QUEUE_MASK	/;"	d
E1000_VLAPQF_QUEUE_SEL	config/igb/e1000_defines.h	/^#define E1000_VLAPQF_QUEUE_SEL(/;"	d
E1000_VLVF	config/igb/e1000_regs.h	/^#define E1000_VLVF(/;"	d
E1000_VLVF_ARRAY_SIZE	config/igb/e1000_82575.h	/^#define E1000_VLVF_ARRAY_SIZE /;"	d
E1000_VLVF_LVLAN	config/igb/e1000_82575.h	/^#define E1000_VLVF_LVLAN /;"	d
E1000_VLVF_POOLSEL_MASK	config/igb/e1000_82575.h	/^#define E1000_VLVF_POOLSEL_MASK /;"	d
E1000_VLVF_POOLSEL_SHIFT	config/igb/e1000_82575.h	/^#define E1000_VLVF_POOLSEL_SHIFT /;"	d
E1000_VLVF_VLANID_ENABLE	config/igb/e1000_82575.h	/^#define E1000_VLVF_VLANID_ENABLE /;"	d
E1000_VLVF_VLANID_MASK	config/igb/e1000_82575.h	/^#define E1000_VLVF_VLANID_MASK /;"	d
E1000_VMBMEM	config/igb/e1000_regs.h	/^#define E1000_VMBMEM(/;"	d
E1000_VMOLR	config/igb/e1000_regs.h	/^#define E1000_VMOLR(/;"	d
E1000_VMOLR_AUPE	config/igb/e1000_82575.h	/^#define E1000_VMOLR_AUPE /;"	d
E1000_VMOLR_BAM	config/igb/e1000_82575.h	/^#define E1000_VMOLR_BAM /;"	d
E1000_VMOLR_LPE	config/igb/e1000_82575.h	/^#define E1000_VMOLR_LPE /;"	d
E1000_VMOLR_MPME	config/igb/e1000_82575.h	/^#define E1000_VMOLR_MPME /;"	d
E1000_VMOLR_RLPML_MASK	config/igb/e1000_82575.h	/^#define E1000_VMOLR_RLPML_MASK /;"	d
E1000_VMOLR_ROMPE	config/igb/e1000_82575.h	/^#define E1000_VMOLR_ROMPE /;"	d
E1000_VMOLR_ROPE	config/igb/e1000_82575.h	/^#define E1000_VMOLR_ROPE /;"	d
E1000_VMOLR_RSSE	config/igb/e1000_82575.h	/^#define E1000_VMOLR_RSSE /;"	d
E1000_VMOLR_STRCRC	config/igb/e1000_82575.h	/^#define E1000_VMOLR_STRCRC /;"	d
E1000_VMOLR_STRVLAN	config/igb/e1000_82575.h	/^#define E1000_VMOLR_STRVLAN /;"	d
E1000_VMVIR	config/igb/e1000_regs.h	/^#define E1000_VMVIR(/;"	d
E1000_VMVIR_VLANA_DEFAULT	config/igb/e1000_82575.h	/^#define E1000_VMVIR_VLANA_DEFAULT /;"	d
E1000_VMVIR_VLANA_NEVER	config/igb/e1000_82575.h	/^#define E1000_VMVIR_VLANA_NEVER /;"	d
E1000_VT_CTL	config/igb/e1000_regs.h	/^#define E1000_VT_CTL /;"	d
E1000_VT_CTL_DEFAULT_POOL_MASK	config/igb/e1000_82575.h	/^#define E1000_VT_CTL_DEFAULT_POOL_MASK /;"	d
E1000_VT_CTL_DEFAULT_POOL_SHIFT	config/igb/e1000_82575.h	/^#define E1000_VT_CTL_DEFAULT_POOL_SHIFT /;"	d
E1000_VT_CTL_DISABLE_DEF_POOL	config/igb/e1000_82575.h	/^#define E1000_VT_CTL_DISABLE_DEF_POOL /;"	d
E1000_VT_CTL_IGNORE_MAC	config/igb/e1000_82575.h	/^#define E1000_VT_CTL_IGNORE_MAC /;"	d
E1000_VT_CTL_VM_REPL_EN	config/igb/e1000_82575.h	/^#define E1000_VT_CTL_VM_REPL_EN /;"	d
E1000_VT_MSGINFO_MASK	config/igb/e1000_mbx.h	/^#define E1000_VT_MSGINFO_MASK	/;"	d
E1000_VT_MSGINFO_SHIFT	config/igb/e1000_mbx.h	/^#define E1000_VT_MSGINFO_SHIFT	/;"	d
E1000_VT_MSGTYPE_ACK	config/igb/e1000_mbx.h	/^#define E1000_VT_MSGTYPE_ACK	/;"	d
E1000_VT_MSGTYPE_CTS	config/igb/e1000_mbx.h	/^#define E1000_VT_MSGTYPE_CTS	/;"	d
E1000_VT_MSGTYPE_NACK	config/igb/e1000_mbx.h	/^#define E1000_VT_MSGTYPE_NACK	/;"	d
E1000_WUC	config/igb/e1000_regs.h	/^#define E1000_WUC /;"	d
E1000_WUC_PME_EN	config/igb/e1000_defines.h	/^#define E1000_WUC_PME_EN /;"	d
E1000_WUFC	config/igb/e1000_regs.h	/^#define E1000_WUFC /;"	d
E1000_WUFC_BC	config/igb/e1000_defines.h	/^#define E1000_WUFC_BC /;"	d
E1000_WUFC_EX	config/igb/e1000_defines.h	/^#define E1000_WUFC_EX /;"	d
E1000_WUFC_LNKC	config/igb/e1000_defines.h	/^#define E1000_WUFC_LNKC /;"	d
E1000_WUFC_MAG	config/igb/e1000_defines.h	/^#define E1000_WUFC_MAG /;"	d
E1000_WUFC_MC	config/igb/e1000_defines.h	/^#define E1000_WUFC_MC /;"	d
E1000_WUPL	config/igb/e1000_regs.h	/^#define E1000_WUPL /;"	d
E1000_WUPL_MASK	config/igb/e1000_defines.h	/^#define E1000_WUPL_MASK	/;"	d
E1000_WUPM_BYTES	config/igb/e1000_defines.h	/^#define E1000_WUPM_BYTES	/;"	d
E1000_WUPM_REG	config/igb/e1000_regs.h	/^#define E1000_WUPM_REG(/;"	d
E1000_WUS	config/igb/e1000_regs.h	/^#define E1000_WUS /;"	d
E1000_WUS_ARPD	config/igb/e1000_defines.h	/^#define E1000_WUS_ARPD	/;"	d
E1000_WUS_EX	config/igb/e1000_defines.h	/^#define E1000_WUS_EX	/;"	d
E1000_WUS_IPV4	config/igb/e1000_defines.h	/^#define E1000_WUS_IPV4	/;"	d
E1000_WUS_IPV6	config/igb/e1000_defines.h	/^#define E1000_WUS_IPV6	/;"	d
E1000_WUS_NSD	config/igb/e1000_defines.h	/^#define E1000_WUS_NSD	/;"	d
E1000_WVBR	config/igb/e1000_regs.h	/^#define E1000_WVBR /;"	d
E1000_XOFFRXC	config/igb/e1000_regs.h	/^#define E1000_XOFFRXC /;"	d
E1000_XOFFTXC	config/igb/e1000_regs.h	/^#define E1000_XOFFTXC /;"	d
E1000_XONRXC	config/igb/e1000_regs.h	/^#define E1000_XONRXC /;"	d
E1000_XONTXC	config/igb/e1000_regs.h	/^#define E1000_XONTXC /;"	d
ETHERNET_IEEE_VLAN_TYPE	config/igb/e1000_defines.h	/^#define ETHERNET_IEEE_VLAN_TYPE /;"	d
ETHER_TYPE_FULL_MASK	config/igb/igb_ethtool.c	/^#define ETHER_TYPE_FULL_MASK /;"	d	file:
ETHER_TYPE_FULL_MASK	config/igb/igb_main.c	/^#define ETHER_TYPE_FULL_MASK /;"	d	file:
ETHER_TYPE_IPv4	dpdk/cy_2p1q.c	/^#define ETHER_TYPE_IPv4 /;"	d	file:
EXIT_FAILURE	src/dpdk.h	/^#define EXIT_FAILURE /;"	d
FLOW_CONTROL_ADDRESS_HIGH	config/igb/e1000_defines.h	/^#define FLOW_CONTROL_ADDRESS_HIGH /;"	d
FLOW_CONTROL_ADDRESS_LOW	config/igb/e1000_defines.h	/^#define FLOW_CONTROL_ADDRESS_LOW /;"	d
FLOW_CONTROL_TYPE	config/igb/e1000_defines.h	/^#define FLOW_CONTROL_TYPE /;"	d
FREQUENCY	dpdk/cy_bk.c	/^#define FREQUENCY /;"	d	file:
FULL_DUPLEX	config/igb/e1000_defines.h	/^#define FULL_DUPLEX /;"	d
HALF_DUPLEX	config/igb/e1000_defines.h	/^#define HALF_DUPLEX /;"	d
I210_DTXMXPKTSZ_DEFAULT	config/igb/e1000_defines.h	/^#define I210_DTXMXPKTSZ_DEFAULT	/;"	d
I210_I_PHY_ID	config/igb/e1000_defines.h	/^#define I210_I_PHY_ID /;"	d
I210_RXPBSIZE_DEFAULT	config/igb/e1000_defines.h	/^#define I210_RXPBSIZE_DEFAULT	/;"	d
I210_RXPBSIZE_MASK	config/igb/e1000_defines.h	/^#define I210_RXPBSIZE_MASK	/;"	d
I210_RXPBSIZE_PB_30KB	config/igb/e1000_defines.h	/^#define I210_RXPBSIZE_PB_30KB	/;"	d
I210_RXPBSIZE_PB_32KB	config/igb/e1000_defines.h	/^#define I210_RXPBSIZE_PB_32KB	/;"	d
I210_SR_QUEUES_NUM	config/igb/e1000_defines.h	/^#define I210_SR_QUEUES_NUM	/;"	d
I210_TXPBSIZE_DEFAULT	config/igb/e1000_defines.h	/^#define I210_TXPBSIZE_DEFAULT	/;"	d
I210_TXPBSIZE_MASK	config/igb/e1000_defines.h	/^#define I210_TXPBSIZE_MASK	/;"	d
I210_TXPBSIZE_PB0_6KB	config/igb/e1000_defines.h	/^#define I210_TXPBSIZE_PB0_6KB	/;"	d
I210_TXPBSIZE_PB1_6KB	config/igb/e1000_defines.h	/^#define I210_TXPBSIZE_PB1_6KB	/;"	d
I210_TXPBSIZE_PB2_6KB	config/igb/e1000_defines.h	/^#define I210_TXPBSIZE_PB2_6KB	/;"	d
I210_TXPBSIZE_PB3_6KB	config/igb/e1000_defines.h	/^#define I210_TXPBSIZE_PB3_6KB	/;"	d
I347AT4_E_PHY_ID	config/igb/e1000_defines.h	/^#define I347AT4_E_PHY_ID /;"	d
I347AT4_PAGE_SELECT	config/igb/e1000_defines.h	/^#define I347AT4_PAGE_SELECT /;"	d
I347AT4_PCDC	config/igb/e1000_defines.h	/^#define I347AT4_PCDC /;"	d
I347AT4_PCDC_CABLE_LENGTH_UNIT	config/igb/e1000_defines.h	/^#define I347AT4_PCDC_CABLE_LENGTH_UNIT /;"	d
I347AT4_PCDL0	config/igb/e1000_defines.h	/^#define I347AT4_PCDL0 /;"	d
I347AT4_PCDL1	config/igb/e1000_defines.h	/^#define I347AT4_PCDL1 /;"	d
I347AT4_PCDL2	config/igb/e1000_defines.h	/^#define I347AT4_PCDL2 /;"	d
I347AT4_PCDL3	config/igb/e1000_defines.h	/^#define I347AT4_PCDL3 /;"	d
I347AT4_PSCR_DOWNSHIFT_1X	config/igb/e1000_defines.h	/^#define I347AT4_PSCR_DOWNSHIFT_1X /;"	d
I347AT4_PSCR_DOWNSHIFT_2X	config/igb/e1000_defines.h	/^#define I347AT4_PSCR_DOWNSHIFT_2X /;"	d
I347AT4_PSCR_DOWNSHIFT_3X	config/igb/e1000_defines.h	/^#define I347AT4_PSCR_DOWNSHIFT_3X /;"	d
I347AT4_PSCR_DOWNSHIFT_4X	config/igb/e1000_defines.h	/^#define I347AT4_PSCR_DOWNSHIFT_4X /;"	d
I347AT4_PSCR_DOWNSHIFT_5X	config/igb/e1000_defines.h	/^#define I347AT4_PSCR_DOWNSHIFT_5X /;"	d
I347AT4_PSCR_DOWNSHIFT_6X	config/igb/e1000_defines.h	/^#define I347AT4_PSCR_DOWNSHIFT_6X /;"	d
I347AT4_PSCR_DOWNSHIFT_7X	config/igb/e1000_defines.h	/^#define I347AT4_PSCR_DOWNSHIFT_7X /;"	d
I347AT4_PSCR_DOWNSHIFT_8X	config/igb/e1000_defines.h	/^#define I347AT4_PSCR_DOWNSHIFT_8X /;"	d
I347AT4_PSCR_DOWNSHIFT_ENABLE	config/igb/e1000_defines.h	/^#define I347AT4_PSCR_DOWNSHIFT_ENABLE /;"	d
I347AT4_PSCR_DOWNSHIFT_MASK	config/igb/e1000_defines.h	/^#define I347AT4_PSCR_DOWNSHIFT_MASK /;"	d
I350_I_PHY_ID	config/igb/e1000_defines.h	/^#define I350_I_PHY_ID /;"	d
I82580_ADDR_REG	config/igb/e1000_phy.h	/^#define I82580_ADDR_REG /;"	d
I82580_CFG_ASSERT_CRS_ON_TX	config/igb/e1000_phy.h	/^#define I82580_CFG_ASSERT_CRS_ON_TX /;"	d
I82580_CFG_ENABLE_DOWNSHIFT	config/igb/e1000_phy.h	/^#define I82580_CFG_ENABLE_DOWNSHIFT /;"	d
I82580_CFG_REG	config/igb/e1000_phy.h	/^#define I82580_CFG_REG /;"	d
I82580_CTRL_DOWNSHIFT_MASK	config/igb/e1000_phy.h	/^#define I82580_CTRL_DOWNSHIFT_MASK /;"	d
I82580_CTRL_REG	config/igb/e1000_phy.h	/^#define I82580_CTRL_REG /;"	d
I82580_DSTATUS_CABLE_LENGTH	config/igb/e1000_phy.h	/^#define I82580_DSTATUS_CABLE_LENGTH /;"	d
I82580_DSTATUS_CABLE_LENGTH_SHIFT	config/igb/e1000_phy.h	/^#define I82580_DSTATUS_CABLE_LENGTH_SHIFT /;"	d
I82580_I_PHY_ID	config/igb/e1000_defines.h	/^#define I82580_I_PHY_ID /;"	d
I82580_PHY_CTRL2_AUTO_MDI_MDIX	config/igb/e1000_phy.h	/^#define I82580_PHY_CTRL2_AUTO_MDI_MDIX /;"	d
I82580_PHY_CTRL2_MANUAL_MDIX	config/igb/e1000_phy.h	/^#define I82580_PHY_CTRL2_MANUAL_MDIX /;"	d
I82580_PHY_CTRL2_MDIX_CFG_MASK	config/igb/e1000_phy.h	/^#define I82580_PHY_CTRL2_MDIX_CFG_MASK /;"	d
I82580_PHY_CTRL_2	config/igb/e1000_phy.h	/^#define I82580_PHY_CTRL_2 /;"	d
I82580_PHY_DIAG_STATUS	config/igb/e1000_phy.h	/^#define I82580_PHY_DIAG_STATUS /;"	d
I82580_PHY_LBK_CTRL	config/igb/e1000_phy.h	/^#define I82580_PHY_LBK_CTRL /;"	d
I82580_PHY_STATUS2_MDIX	config/igb/e1000_phy.h	/^#define I82580_PHY_STATUS2_MDIX /;"	d
I82580_PHY_STATUS2_REV_POLARITY	config/igb/e1000_phy.h	/^#define I82580_PHY_STATUS2_REV_POLARITY /;"	d
I82580_PHY_STATUS2_SPEED_1000MBPS	config/igb/e1000_phy.h	/^#define I82580_PHY_STATUS2_SPEED_1000MBPS /;"	d
I82580_PHY_STATUS2_SPEED_100MBPS	config/igb/e1000_phy.h	/^#define I82580_PHY_STATUS2_SPEED_100MBPS /;"	d
I82580_PHY_STATUS2_SPEED_MASK	config/igb/e1000_phy.h	/^#define I82580_PHY_STATUS2_SPEED_MASK /;"	d
I82580_PHY_STATUS_2	config/igb/e1000_phy.h	/^#define I82580_PHY_STATUS_2 /;"	d
ID_LED_DEF1_DEF2	config/igb/e1000_defines.h	/^#define ID_LED_DEF1_DEF2 /;"	d
ID_LED_DEF1_OFF2	config/igb/e1000_defines.h	/^#define ID_LED_DEF1_OFF2 /;"	d
ID_LED_DEF1_ON2	config/igb/e1000_defines.h	/^#define ID_LED_DEF1_ON2 /;"	d
ID_LED_DEFAULT	config/igb/e1000_defines.h	/^#define ID_LED_DEFAULT /;"	d
ID_LED_DEFAULT_82575_SERDES	config/igb/e1000_82575.h	/^#define ID_LED_DEFAULT_82575_SERDES /;"	d
ID_LED_DEFAULT_I210	config/igb/e1000_i210.h	/^#define ID_LED_DEFAULT_I210	/;"	d
ID_LED_DEFAULT_I210_SERDES	config/igb/e1000_i210.h	/^#define ID_LED_DEFAULT_I210_SERDES	/;"	d
ID_LED_OFF1_DEF2	config/igb/e1000_defines.h	/^#define ID_LED_OFF1_DEF2 /;"	d
ID_LED_OFF1_OFF2	config/igb/e1000_defines.h	/^#define ID_LED_OFF1_OFF2 /;"	d
ID_LED_OFF1_ON2	config/igb/e1000_defines.h	/^#define ID_LED_OFF1_ON2 /;"	d
ID_LED_ON1_DEF2	config/igb/e1000_defines.h	/^#define ID_LED_ON1_DEF2 /;"	d
ID_LED_ON1_OFF2	config/igb/e1000_defines.h	/^#define ID_LED_ON1_OFF2 /;"	d
ID_LED_ON1_ON2	config/igb/e1000_defines.h	/^#define ID_LED_ON1_ON2 /;"	d
ID_LED_RESERVED_0000	config/igb/e1000_defines.h	/^#define ID_LED_RESERVED_0000 /;"	d
ID_LED_RESERVED_FFFF	config/igb/e1000_defines.h	/^#define ID_LED_RESERVED_FFFF /;"	d
IGB_20K_ITR	config/igb/igb.h	/^#define IGB_20K_ITR	/;"	d
IGB_2K_TOO_SMALL_WITH_PADDING	config/igb/igb.h	/^#define IGB_2K_TOO_SMALL_WITH_PADDING /;"	d
IGB_4K_ITR	config/igb/igb.h	/^#define IGB_4K_ITR	/;"	d
IGB_70K_ITR	config/igb/igb.h	/^#define IGB_70K_ITR	/;"	d
IGB_82576_TSYNC_SHIFT	config/igb/igb.h	/^#define IGB_82576_TSYNC_SHIFT	/;"	d
IGB_82576_VF_DEV_ID	config/igb/igb.h	/^#define IGB_82576_VF_DEV_ID	/;"	d
IGB_BUILD_MASK	config/igb/igb.h	/^#define IGB_BUILD_MASK	/;"	d
IGB_COMB_VER_MASK	config/igb/igb.h	/^#define IGB_COMB_VER_MASK	/;"	d
IGB_COMB_VER_SHFT	config/igb/igb.h	/^#define IGB_COMB_VER_SHFT	/;"	d
IGB_DEFAULT_ITR	config/igb/igb.h	/^#define IGB_DEFAULT_ITR	/;"	d
IGB_DEFAULT_RXD	config/igb/igb.h	/^#define IGB_DEFAULT_RXD	/;"	d
IGB_DEFAULT_TXD	config/igb/igb.h	/^#define IGB_DEFAULT_TXD	/;"	d
IGB_DEFAULT_TX_WORK	config/igb/igb.h	/^#define IGB_DEFAULT_TX_WORK	/;"	d
IGB_DMCTLX_DCFLUSH_DIS	config/igb/igb.h	/^#define IGB_DMCTLX_DCFLUSH_DIS	/;"	d
IGB_EEPROM_APME	config/igb/igb.h	/^#define IGB_EEPROM_APME	/;"	d
IGB_ETH_PKT_HDR_PAD	config/igb/igb.h	/^#define IGB_ETH_PKT_HDR_PAD	/;"	d
IGB_ETQF_FILTER_1588	config/igb/igb.h	/^#define IGB_ETQF_FILTER_1588	/;"	d
IGB_ETRACK_SHIFT	config/igb/igb.h	/^#define IGB_ETRACK_SHIFT	/;"	d
IGB_FILTER_FLAG_DST_MAC_ADDR	config/igb/igb.h	/^	IGB_FILTER_FLAG_DST_MAC_ADDR   = 0x8,$/;"	e	enum:igb_filter_match_flags
IGB_FILTER_FLAG_ETHER_TYPE	config/igb/igb.h	/^	IGB_FILTER_FLAG_ETHER_TYPE = 0x1,$/;"	e	enum:igb_filter_match_flags
IGB_FILTER_FLAG_SRC_MAC_ADDR	config/igb/igb.h	/^	IGB_FILTER_FLAG_SRC_MAC_ADDR   = 0x4,$/;"	e	enum:igb_filter_match_flags
IGB_FILTER_FLAG_VLAN_TCI	config/igb/igb.h	/^	IGB_FILTER_FLAG_VLAN_TCI   = 0x2,$/;"	e	enum:igb_filter_match_flags
IGB_FLAG_DCA_ENABLED	config/igb/igb.h	/^#define IGB_FLAG_DCA_ENABLED	/;"	d
IGB_FLAG_DMAC	config/igb/igb.h	/^#define IGB_FLAG_DMAC	/;"	d
IGB_FLAG_EEE	config/igb/igb.h	/^#define IGB_FLAG_EEE	/;"	d
IGB_FLAG_FQTSS	config/igb/igb.h	/^#define IGB_FLAG_FQTSS	/;"	d
IGB_FLAG_HAS_MSI	config/igb/igb.h	/^#define IGB_FLAG_HAS_MSI	/;"	d
IGB_FLAG_HAS_MSIX	config/igb/igb.h	/^#define IGB_FLAG_HAS_MSIX	/;"	d
IGB_FLAG_MAS_CAPABLE	config/igb/igb.h	/^#define IGB_FLAG_MAS_CAPABLE	/;"	d
IGB_FLAG_MAS_ENABLE	config/igb/igb.h	/^#define IGB_FLAG_MAS_ENABLE	/;"	d
IGB_FLAG_MEDIA_RESET	config/igb/igb.h	/^#define IGB_FLAG_MEDIA_RESET	/;"	d
IGB_FLAG_NEED_LINK_UPDATE	config/igb/igb.h	/^#define IGB_FLAG_NEED_LINK_UPDATE	/;"	d
IGB_FLAG_QUAD_PORT_A	config/igb/igb.h	/^#define IGB_FLAG_QUAD_PORT_A	/;"	d
IGB_FLAG_QUEUE_PAIRS	config/igb/igb.h	/^#define IGB_FLAG_QUEUE_PAIRS	/;"	d
IGB_FLAG_RSS_FIELD_IPV4_UDP	config/igb/igb.h	/^#define IGB_FLAG_RSS_FIELD_IPV4_UDP	/;"	d
IGB_FLAG_RSS_FIELD_IPV6_UDP	config/igb/igb.h	/^#define IGB_FLAG_RSS_FIELD_IPV6_UDP	/;"	d
IGB_FLAG_RX_LEGACY	config/igb/igb.h	/^#define IGB_FLAG_RX_LEGACY	/;"	d
IGB_FLAG_VLAN_PROMISC	config/igb/igb.h	/^#define IGB_FLAG_VLAN_PROMISC	/;"	d
IGB_FLAG_WOL_SUPPORTED	config/igb/igb.h	/^#define IGB_FLAG_WOL_SUPPORTED	/;"	d
IGB_GLOBAL_STATS_LEN	config/igb/igb_ethtool.c	/^#define IGB_GLOBAL_STATS_LEN	/;"	d	file:
IGB_GSO_PARTIAL_FEATURES	config/igb/igb_main.c	/^#define IGB_GSO_PARTIAL_FEATURES /;"	d	file:
IGB_HWMON_TYPE_CAUTION	config/igb/igb.h	/^#define IGB_HWMON_TYPE_CAUTION	/;"	d
IGB_HWMON_TYPE_LOC	config/igb/igb.h	/^#define IGB_HWMON_TYPE_LOC	/;"	d
IGB_HWMON_TYPE_MAX	config/igb/igb.h	/^#define IGB_HWMON_TYPE_MAX	/;"	d
IGB_HWMON_TYPE_TEMP	config/igb/igb.h	/^#define IGB_HWMON_TYPE_TEMP	/;"	d
IGB_I210_RX_LATENCY_10	config/igb/igb.h	/^#define IGB_I210_RX_LATENCY_10	/;"	d
IGB_I210_RX_LATENCY_100	config/igb/igb.h	/^#define IGB_I210_RX_LATENCY_100	/;"	d
IGB_I210_RX_LATENCY_1000	config/igb/igb.h	/^#define IGB_I210_RX_LATENCY_1000	/;"	d
IGB_I210_TX_LATENCY_10	config/igb/igb.h	/^#define IGB_I210_TX_LATENCY_10	/;"	d
IGB_I210_TX_LATENCY_100	config/igb/igb.h	/^#define IGB_I210_TX_LATENCY_100	/;"	d
IGB_I210_TX_LATENCY_1000	config/igb/igb.h	/^#define IGB_I210_TX_LATENCY_1000	/;"	d
IGB_I350_VF_DEV_ID	config/igb/igb.h	/^#define IGB_I350_VF_DEV_ID	/;"	d
IGB_LAST_OFFSET	config/igb/igb_main.c	/^#define IGB_LAST_OFFSET /;"	d	file:
IGB_LED_ON	config/igb/igb_ethtool.c	/^#define IGB_LED_ON	/;"	d	file:
IGB_MAC_STATE_DEFAULT	config/igb/igb.h	/^#define IGB_MAC_STATE_DEFAULT	/;"	d
IGB_MAC_STATE_IN_USE	config/igb/igb.h	/^#define IGB_MAC_STATE_IN_USE	/;"	d
IGB_MAC_STATE_QUEUE_STEERING	config/igb/igb.h	/^#define IGB_MAC_STATE_QUEUE_STEERING /;"	d
IGB_MAC_STATE_SRC_ADDR	config/igb/igb.h	/^#define IGB_MAC_STATE_SRC_ADDR	/;"	d
IGB_MAJOR_MASK	config/igb/igb.h	/^#define IGB_MAJOR_MASK	/;"	d
IGB_MAJOR_SHIFT	config/igb/igb.h	/^#define IGB_MAJOR_SHIFT	/;"	d
IGB_MASTER_SLAVE	config/igb/igb.h	/^#define IGB_MASTER_SLAVE	/;"	d
IGB_MAS_ENABLE_0	config/igb/igb.h	/^#define IGB_MAS_ENABLE_0	/;"	d
IGB_MAS_ENABLE_1	config/igb/igb.h	/^#define IGB_MAS_ENABLE_1	/;"	d
IGB_MAS_ENABLE_2	config/igb/igb.h	/^#define IGB_MAS_ENABLE_2	/;"	d
IGB_MAS_ENABLE_3	config/igb/igb.h	/^#define IGB_MAS_ENABLE_3	/;"	d
IGB_MAX_DATA_PER_TXD	config/igb/igb.h	/^#define IGB_MAX_DATA_PER_TXD	/;"	d
IGB_MAX_FRAME_BUILD_SKB	config/igb/igb.h	/^#define IGB_MAX_FRAME_BUILD_SKB /;"	d
IGB_MAX_ITR_USECS	config/igb/igb.h	/^#define IGB_MAX_ITR_USECS	/;"	d
IGB_MAX_MAC_HDR_LEN	config/igb/igb_main.c	/^#define IGB_MAX_MAC_HDR_LEN	/;"	d	file:
IGB_MAX_NETWORK_HDR_LEN	config/igb/igb_main.c	/^#define IGB_MAX_NETWORK_HDR_LEN	/;"	d	file:
IGB_MAX_RXD	config/igb/igb.h	/^#define IGB_MAX_RXD	/;"	d
IGB_MAX_RXNFC_FILTERS	config/igb/igb.h	/^#define IGB_MAX_RXNFC_FILTERS /;"	d
IGB_MAX_RX_QUEUES	config/igb/igb.h	/^#define IGB_MAX_RX_QUEUES	/;"	d
IGB_MAX_RX_QUEUES_82575	config/igb/igb.h	/^#define IGB_MAX_RX_QUEUES_82575	/;"	d
IGB_MAX_RX_QUEUES_I211	config/igb/igb.h	/^#define IGB_MAX_RX_QUEUES_I211	/;"	d
IGB_MAX_TXD	config/igb/igb.h	/^#define IGB_MAX_TXD	/;"	d
IGB_MAX_TXD_PWR	config/igb/igb.h	/^#define IGB_MAX_TXD_PWR	/;"	d
IGB_MAX_TX_QUEUES	config/igb/igb.h	/^#define IGB_MAX_TX_QUEUES	/;"	d
IGB_MAX_VFTA_ENTRIES	config/igb/igb.h	/^#define IGB_MAX_VFTA_ENTRIES	/;"	d
IGB_MAX_VF_FUNCTIONS	config/igb/igb.h	/^#define IGB_MAX_VF_FUNCTIONS	/;"	d
IGB_MAX_VF_MC_ENTRIES	config/igb/igb.h	/^#define IGB_MAX_VF_MC_ENTRIES	/;"	d
IGB_MINOR_MASK	config/igb/igb.h	/^#define IGB_MINOR_MASK	/;"	d
IGB_MINOR_SHIFT	config/igb/igb.h	/^#define IGB_MINOR_SHIFT	/;"	d
IGB_MIN_ITR_USECS	config/igb/igb.h	/^#define IGB_MIN_ITR_USECS	/;"	d
IGB_MIN_RXD	config/igb/igb.h	/^#define IGB_MIN_RXD	/;"	d
IGB_MIN_TXD	config/igb/igb.h	/^#define IGB_MIN_TXD	/;"	d
IGB_MIN_TXPBSIZE	config/igb/igb.h	/^#define IGB_MIN_TXPBSIZE	/;"	d
IGB_MNG_VLAN_NONE	config/igb/igb.h	/^#define IGB_MNG_VLAN_NONE	/;"	d
IGB_N0_QUEUE	config/igb/igb_main.c	/^#define IGB_N0_QUEUE /;"	d	file:
IGB_NBITS_82580	config/igb/igb_ptp.c	/^#define IGB_NBITS_82580	/;"	d	file:
IGB_NETDEV_STAT	config/igb/igb_ethtool.c	/^#define IGB_NETDEV_STAT(/;"	d	file:
IGB_NETDEV_STATS_LEN	config/igb/igb_ethtool.c	/^#define IGB_NETDEV_STATS_LEN	/;"	d	file:
IGB_NVM_VER_INVALID	config/igb/igb.h	/^#define IGB_NVM_VER_INVALID	/;"	d
IGB_N_EXTTS	config/igb/igb.h	/^#define IGB_N_EXTTS	/;"	d
IGB_N_PEROUT	config/igb/igb.h	/^#define IGB_N_PEROUT	/;"	d
IGB_N_SDP	config/igb/igb.h	/^#define IGB_N_SDP	/;"	d
IGB_PF_MAC_FILTERS_RESERVED	config/igb/igb.h	/^#define IGB_PF_MAC_FILTERS_RESERVED	/;"	d
IGB_PRIV_FLAGS_LEGACY_RX	config/igb/igb_ethtool.c	/^#define IGB_PRIV_FLAGS_LEGACY_RX	/;"	d	file:
IGB_PRIV_FLAGS_STR_LEN	config/igb/igb_ethtool.c	/^#define IGB_PRIV_FLAGS_STR_LEN /;"	d	file:
IGB_PTP_ENABLED	config/igb/igb.h	/^#define IGB_PTP_ENABLED	/;"	d
IGB_PTP_OVERFLOW_CHECK	config/igb/igb.h	/^#define IGB_PTP_OVERFLOW_CHECK	/;"	d
IGB_PTP_TX_TIMEOUT	config/igb/igb_ptp.c	/^#define IGB_PTP_TX_TIMEOUT	/;"	d	file:
IGB_QUEUE_STATS_LEN	config/igb/igb_ethtool.c	/^#define IGB_QUEUE_STATS_LEN /;"	d	file:
IGB_REGS_LEN	config/igb/igb_ethtool.c	/^#define IGB_REGS_LEN /;"	d	file:
IGB_RETA_SIZE	config/igb/igb.h	/^#define IGB_RETA_SIZE	/;"	d
IGB_RING_FLAG_RX_3K_BUFFER	config/igb/igb.h	/^	IGB_RING_FLAG_RX_3K_BUFFER,$/;"	e	enum:e1000_ring_flags_t
IGB_RING_FLAG_RX_BUILD_SKB_ENABLED	config/igb/igb.h	/^	IGB_RING_FLAG_RX_BUILD_SKB_ENABLED,$/;"	e	enum:e1000_ring_flags_t
IGB_RING_FLAG_RX_LB_VLAN_BSWAP	config/igb/igb.h	/^	IGB_RING_FLAG_RX_LB_VLAN_BSWAP,$/;"	e	enum:e1000_ring_flags_t
IGB_RING_FLAG_RX_SCTP_CSUM	config/igb/igb.h	/^	IGB_RING_FLAG_RX_SCTP_CSUM,$/;"	e	enum:e1000_ring_flags_t
IGB_RING_FLAG_TX_CTX_IDX	config/igb/igb.h	/^	IGB_RING_FLAG_TX_CTX_IDX,$/;"	e	enum:e1000_ring_flags_t
IGB_RING_FLAG_TX_DETECT_HANG	config/igb/igb.h	/^	IGB_RING_FLAG_TX_DETECT_HANG$/;"	e	enum:e1000_ring_flags_t
IGB_RXBUFFER_1536	config/igb/igb.h	/^#define IGB_RXBUFFER_1536	/;"	d
IGB_RXBUFFER_2048	config/igb/igb.h	/^#define IGB_RXBUFFER_2048	/;"	d
IGB_RXBUFFER_256	config/igb/igb.h	/^#define IGB_RXBUFFER_256	/;"	d
IGB_RXBUFFER_3072	config/igb/igb.h	/^#define IGB_RXBUFFER_3072	/;"	d
IGB_RX_BUFFER_WRITE	config/igb/igb.h	/^#define IGB_RX_BUFFER_WRITE	/;"	d
IGB_RX_DESC	config/igb/igb.h	/^#define IGB_RX_DESC(/;"	d
IGB_RX_DMA_ATTR	config/igb/igb.h	/^#define IGB_RX_DMA_ATTR /;"	d
IGB_RX_HDR_LEN	config/igb/igb.h	/^#define IGB_RX_HDR_LEN	/;"	d
IGB_RX_HTHRESH	config/igb/igb.h	/^#define IGB_RX_HTHRESH	/;"	d
IGB_RX_PTHRESH	config/igb/igb.h	/^#define IGB_RX_PTHRESH	/;"	d
IGB_RX_QUEUE_STATS_LEN	config/igb/igb_ethtool.c	/^#define IGB_RX_QUEUE_STATS_LEN /;"	d	file:
IGB_RX_WTHRESH	config/igb/igb.h	/^#define IGB_RX_WTHRESH	/;"	d
IGB_SET_FLAG	config/igb/igb_main.c	/^#define IGB_SET_FLAG(/;"	d	file:
IGB_SFF_8472_COMP	config/igb/igb.h	/^#define IGB_SFF_8472_COMP	/;"	d
IGB_SFF_8472_SWAP	config/igb/igb.h	/^#define IGB_SFF_8472_SWAP	/;"	d
IGB_SFF_8472_UNSUP	config/igb/igb.h	/^#define IGB_SFF_8472_UNSUP	/;"	d
IGB_SFF_ADDRESSING_MODE	config/igb/igb.h	/^#define IGB_SFF_ADDRESSING_MODE	/;"	d
IGB_SKB_PAD	config/igb/igb.h	/^#define IGB_SKB_PAD	/;"	d
IGB_STAGGERED_QUEUE_OFFSET	config/igb/igb_main.c	/^#define IGB_STAGGERED_QUEUE_OFFSET /;"	d	file:
IGB_START_ITR	config/igb/igb.h	/^#define IGB_START_ITR	/;"	d
IGB_STAT	config/igb/igb_ethtool.c	/^#define IGB_STAT(/;"	d	file:
IGB_STATS_LEN	config/igb/igb_ethtool.c	/^#define IGB_STATS_LEN /;"	d	file:
IGB_SYSTIM_OVERFLOW_PERIOD	config/igb/igb_ptp.c	/^#define IGB_SYSTIM_OVERFLOW_PERIOD	/;"	d	file:
IGB_TEST_LEN	config/igb/igb_ethtool.c	/^#define IGB_TEST_LEN /;"	d	file:
IGB_TS_HDR_LEN	config/igb/igb.h	/^#define IGB_TS_HDR_LEN	/;"	d
IGB_TXD_DCMD	config/igb/igb.h	/^#define IGB_TXD_DCMD /;"	d
IGB_TX_BUF_4096	config/igb/igb.h	/^#define IGB_TX_BUF_4096	/;"	d
IGB_TX_CTXTDESC	config/igb/igb.h	/^#define IGB_TX_CTXTDESC(/;"	d
IGB_TX_DESC	config/igb/igb.h	/^#define IGB_TX_DESC(/;"	d
IGB_TX_FLAGS_CSUM	config/igb/igb.h	/^	IGB_TX_FLAGS_CSUM	= 0x20,$/;"	e	enum:igb_tx_flags
IGB_TX_FLAGS_IPV4	config/igb/igb.h	/^	IGB_TX_FLAGS_IPV4	= 0x10,$/;"	e	enum:igb_tx_flags
IGB_TX_FLAGS_TSO	config/igb/igb.h	/^	IGB_TX_FLAGS_TSO	= 0x02,$/;"	e	enum:igb_tx_flags
IGB_TX_FLAGS_TSTAMP	config/igb/igb.h	/^	IGB_TX_FLAGS_TSTAMP	= 0x04,$/;"	e	enum:igb_tx_flags
IGB_TX_FLAGS_VLAN	config/igb/igb.h	/^	IGB_TX_FLAGS_VLAN	= 0x01,$/;"	e	enum:igb_tx_flags
IGB_TX_FLAGS_VLAN_MASK	config/igb/igb.h	/^#define IGB_TX_FLAGS_VLAN_MASK	/;"	d
IGB_TX_FLAGS_VLAN_SHIFT	config/igb/igb.h	/^#define IGB_TX_FLAGS_VLAN_SHIFT	/;"	d
IGB_TX_HTHRESH	config/igb/igb.h	/^#define IGB_TX_HTHRESH	/;"	d
IGB_TX_PTHRESH	config/igb/igb.h	/^#define IGB_TX_PTHRESH	/;"	d
IGB_TX_QUEUE_STATS_LEN	config/igb/igb_ethtool.c	/^#define IGB_TX_QUEUE_STATS_LEN /;"	d	file:
IGB_TX_WTHRESH	config/igb/igb.h	/^#define IGB_TX_WTHRESH	/;"	d
IGB_TYPE_SKB	config/igb/igb.h	/^	IGB_TYPE_SKB = 0,$/;"	e	enum:igb_tx_buf_type
IGB_TYPE_XDP	config/igb/igb.h	/^	IGB_TYPE_XDP,$/;"	e	enum:igb_tx_buf_type
IGB_VF_FLAG_CTS	config/igb/igb.h	/^#define IGB_VF_FLAG_CTS /;"	d
IGB_VF_FLAG_MULTI_PROMISC	config/igb/igb.h	/^#define IGB_VF_FLAG_MULTI_PROMISC /;"	d
IGB_VF_FLAG_PF_SET_MAC	config/igb/igb.h	/^#define IGB_VF_FLAG_PF_SET_MAC /;"	d
IGB_VF_FLAG_UNI_PROMISC	config/igb/igb.h	/^#define IGB_VF_FLAG_UNI_PROMISC /;"	d
IGB_XDP_CONSUMED	config/igb/igb.h	/^#define IGB_XDP_CONSUMED	/;"	d
IGB_XDP_PASS	config/igb/igb.h	/^#define IGB_XDP_PASS	/;"	d
IGB_XDP_REDIR	config/igb/igb.h	/^#define IGB_XDP_REDIR	/;"	d
IGB_XDP_TX	config/igb/igb.h	/^#define IGB_XDP_TX	/;"	d
IGP01E1000_PHY_LINK_HEALTH	config/igb/e1000_phy.h	/^#define IGP01E1000_PHY_LINK_HEALTH /;"	d
IGP01E1000_PHY_PAGE_SELECT	config/igb/e1000_phy.h	/^#define IGP01E1000_PHY_PAGE_SELECT /;"	d
IGP01E1000_PHY_PCS_INIT_REG	config/igb/e1000_phy.h	/^#define IGP01E1000_PHY_PCS_INIT_REG /;"	d
IGP01E1000_PHY_POLARITY_MASK	config/igb/e1000_phy.h	/^#define IGP01E1000_PHY_POLARITY_MASK /;"	d
IGP01E1000_PHY_PORT_CONFIG	config/igb/e1000_phy.h	/^#define IGP01E1000_PHY_PORT_CONFIG /;"	d
IGP01E1000_PHY_PORT_CTRL	config/igb/e1000_phy.h	/^#define IGP01E1000_PHY_PORT_CTRL /;"	d
IGP01E1000_PHY_PORT_STATUS	config/igb/e1000_phy.h	/^#define IGP01E1000_PHY_PORT_STATUS /;"	d
IGP01E1000_PLHR_SS_DOWNGRADE	config/igb/e1000_phy.h	/^#define IGP01E1000_PLHR_SS_DOWNGRADE /;"	d
IGP01E1000_PSCFR_SMART_SPEED	config/igb/e1000_phy.h	/^#define IGP01E1000_PSCFR_SMART_SPEED /;"	d
IGP01E1000_PSCR_AUTO_MDIX	config/igb/e1000_phy.h	/^#define IGP01E1000_PSCR_AUTO_MDIX /;"	d
IGP01E1000_PSCR_FORCE_MDI_MDIX	config/igb/e1000_phy.h	/^#define IGP01E1000_PSCR_FORCE_MDI_MDIX /;"	d
IGP01E1000_PSSR_MDIX	config/igb/e1000_phy.h	/^#define IGP01E1000_PSSR_MDIX /;"	d
IGP01E1000_PSSR_POLARITY_REVERSED	config/igb/e1000_phy.h	/^#define IGP01E1000_PSSR_POLARITY_REVERSED /;"	d
IGP01E1000_PSSR_SPEED_1000MBPS	config/igb/e1000_phy.h	/^#define IGP01E1000_PSSR_SPEED_1000MBPS /;"	d
IGP01E1000_PSSR_SPEED_MASK	config/igb/e1000_phy.h	/^#define IGP01E1000_PSSR_SPEED_MASK /;"	d
IGP02E1000_AGC_LENGTH_MASK	config/igb/e1000_phy.h	/^#define IGP02E1000_AGC_LENGTH_MASK /;"	d
IGP02E1000_AGC_LENGTH_SHIFT	config/igb/e1000_phy.h	/^#define IGP02E1000_AGC_LENGTH_SHIFT /;"	d
IGP02E1000_AGC_RANGE	config/igb/e1000_phy.h	/^#define IGP02E1000_AGC_RANGE /;"	d
IGP02E1000_PHY_AGC_A	config/igb/e1000_phy.h	/^#define IGP02E1000_PHY_AGC_A /;"	d
IGP02E1000_PHY_AGC_B	config/igb/e1000_phy.h	/^#define IGP02E1000_PHY_AGC_B /;"	d
IGP02E1000_PHY_AGC_C	config/igb/e1000_phy.h	/^#define IGP02E1000_PHY_AGC_C /;"	d
IGP02E1000_PHY_AGC_D	config/igb/e1000_phy.h	/^#define IGP02E1000_PHY_AGC_D /;"	d
IGP02E1000_PHY_CHANNEL_NUM	config/igb/e1000_phy.h	/^#define IGP02E1000_PHY_CHANNEL_NUM /;"	d
IGP02E1000_PHY_POWER_MGMT	config/igb/e1000_phy.h	/^#define IGP02E1000_PHY_POWER_MGMT /;"	d
IGP02E1000_PM_D0_LPLU	config/igb/e1000_phy.h	/^#define IGP02E1000_PM_D0_LPLU /;"	d
IGP02E1000_PM_D3_LPLU	config/igb/e1000_phy.h	/^#define IGP02E1000_PM_D3_LPLU /;"	d
IGP03E1000_E_PHY_ID	config/igb/e1000_defines.h	/^#define IGP03E1000_E_PHY_ID /;"	d
IGP_ACTIVITY_LED_ENABLE	config/igb/e1000_defines.h	/^#define IGP_ACTIVITY_LED_ENABLE /;"	d
IGP_ACTIVITY_LED_MASK	config/igb/e1000_defines.h	/^#define IGP_ACTIVITY_LED_MASK /;"	d
IGP_LED3_MODE	config/igb/e1000_defines.h	/^#define IGP_LED3_MODE /;"	d
IMS_ENABLE_MASK	config/igb/e1000_defines.h	/^#define IMS_ENABLE_MASK /;"	d
INCPERIOD_82576	config/igb/igb_ptp.c	/^#define INCPERIOD_82576	/;"	d	file:
INCVALUE_82576	config/igb/igb_ptp.c	/^#define INCVALUE_82576	/;"	d	file:
INCVALUE_82576_MASK	config/igb/igb_ptp.c	/^#define INCVALUE_82576_MASK	/;"	d	file:
INCVALUE_MASK	config/igb/igb_ptp.c	/^#define INCVALUE_MASK	/;"	d	file:
INVM_DWORD_TO_RECORD_TYPE	config/igb/e1000_i210.h	/^#define INVM_DWORD_TO_RECORD_TYPE(/;"	d
INVM_DWORD_TO_WORD_ADDRESS	config/igb/e1000_i210.h	/^#define INVM_DWORD_TO_WORD_ADDRESS(/;"	d
INVM_DWORD_TO_WORD_DATA	config/igb/e1000_i210.h	/^#define INVM_DWORD_TO_WORD_DATA(/;"	d
ISGN	config/igb/igb_ptp.c	/^#define ISGN	/;"	d	file:
M88E1000_EPSCR_MASTER_DOWNSHIFT_1X	config/igb/e1000_defines.h	/^#define M88E1000_EPSCR_MASTER_DOWNSHIFT_1X /;"	d
M88E1000_EPSCR_MASTER_DOWNSHIFT_MASK	config/igb/e1000_defines.h	/^#define M88E1000_EPSCR_MASTER_DOWNSHIFT_MASK /;"	d
M88E1000_EPSCR_SLAVE_DOWNSHIFT_1X	config/igb/e1000_defines.h	/^#define M88E1000_EPSCR_SLAVE_DOWNSHIFT_1X /;"	d
M88E1000_EPSCR_SLAVE_DOWNSHIFT_MASK	config/igb/e1000_defines.h	/^#define M88E1000_EPSCR_SLAVE_DOWNSHIFT_MASK /;"	d
M88E1000_EPSCR_TX_CLK_25	config/igb/e1000_defines.h	/^#define M88E1000_EPSCR_TX_CLK_25 /;"	d
M88E1000_EXT_PHY_SPEC_CTRL	config/igb/e1000_defines.h	/^#define M88E1000_EXT_PHY_SPEC_CTRL /;"	d
M88E1000_PHY_GEN_CONTROL	config/igb/e1000_defines.h	/^#define M88E1000_PHY_GEN_CONTROL /;"	d
M88E1000_PHY_PAGE_SELECT	config/igb/e1000_defines.h	/^#define M88E1000_PHY_PAGE_SELECT /;"	d
M88E1000_PHY_SPEC_CTRL	config/igb/e1000_defines.h	/^#define M88E1000_PHY_SPEC_CTRL /;"	d
M88E1000_PHY_SPEC_STATUS	config/igb/e1000_defines.h	/^#define M88E1000_PHY_SPEC_STATUS /;"	d
M88E1000_PSCR_ASSERT_CRS_ON_TX	config/igb/e1000_defines.h	/^#define M88E1000_PSCR_ASSERT_CRS_ON_TX /;"	d
M88E1000_PSCR_AUTO_X_1000T	config/igb/e1000_defines.h	/^#define M88E1000_PSCR_AUTO_X_1000T /;"	d
M88E1000_PSCR_AUTO_X_MODE	config/igb/e1000_defines.h	/^#define M88E1000_PSCR_AUTO_X_MODE /;"	d
M88E1000_PSCR_MDIX_MANUAL_MODE	config/igb/e1000_defines.h	/^#define M88E1000_PSCR_MDIX_MANUAL_MODE /;"	d
M88E1000_PSCR_MDI_MANUAL_MODE	config/igb/e1000_defines.h	/^#define M88E1000_PSCR_MDI_MANUAL_MODE /;"	d
M88E1000_PSCR_POLARITY_REVERSAL	config/igb/e1000_defines.h	/^#define M88E1000_PSCR_POLARITY_REVERSAL /;"	d
M88E1000_PSSR_1000MBS	config/igb/e1000_defines.h	/^#define M88E1000_PSSR_1000MBS /;"	d
M88E1000_PSSR_CABLE_LENGTH	config/igb/e1000_defines.h	/^#define M88E1000_PSSR_CABLE_LENGTH /;"	d
M88E1000_PSSR_CABLE_LENGTH_SHIFT	config/igb/e1000_defines.h	/^#define M88E1000_PSSR_CABLE_LENGTH_SHIFT /;"	d
M88E1000_PSSR_DOWNSHIFT	config/igb/e1000_defines.h	/^#define M88E1000_PSSR_DOWNSHIFT /;"	d
M88E1000_PSSR_MDIX	config/igb/e1000_defines.h	/^#define M88E1000_PSSR_MDIX /;"	d
M88E1000_PSSR_REV_POLARITY	config/igb/e1000_defines.h	/^#define M88E1000_PSSR_REV_POLARITY /;"	d
M88E1000_PSSR_SPEED	config/igb/e1000_defines.h	/^#define M88E1000_PSSR_SPEED /;"	d
M88E1111_I_PHY_ID	config/igb/e1000_defines.h	/^#define M88E1111_I_PHY_ID /;"	d
M88E1112_E_PHY_ID	config/igb/e1000_defines.h	/^#define M88E1112_E_PHY_ID /;"	d
M88E1112_VCT_DSP_DISTANCE	config/igb/e1000_defines.h	/^#define M88E1112_VCT_DSP_DISTANCE /;"	d
M88E1512_E_PHY_ID	config/igb/e1000_defines.h	/^#define M88E1512_E_PHY_ID /;"	d
M88E1543_E_PHY_ID	config/igb/e1000_defines.h	/^#define M88E1543_E_PHY_ID /;"	d
M88EC018_EPSCR_DOWNSHIFT_COUNTER_5X	config/igb/e1000_defines.h	/^#define M88EC018_EPSCR_DOWNSHIFT_COUNTER_5X /;"	d
M88EC018_EPSCR_DOWNSHIFT_COUNTER_MASK	config/igb/e1000_defines.h	/^#define M88EC018_EPSCR_DOWNSHIFT_COUNTER_MASK /;"	d
M88_VENDOR	config/igb/e1000_defines.h	/^#define M88_VENDOR /;"	d
MASTER_DISABLE_TIMEOUT	config/igb/e1000_defines.h	/^#define MASTER_DISABLE_TIMEOUT /;"	d
MAXIMUM_ETHERNET_VLAN_SIZE	config/igb/igb.h	/^#define MAXIMUM_ETHERNET_VLAN_SIZE /;"	d
MAX_ETYPE_FILTER	config/igb/igb.h	/^#define MAX_ETYPE_FILTER	/;"	d
MAX_JUMBO_FRAME_SIZE	config/igb/e1000_defines.h	/^#define MAX_JUMBO_FRAME_SIZE	/;"	d
MAX_LINE_LENGTH	src/flow.h	/^#define MAX_LINE_LENGTH /;"	d
MAX_MSIX_ENTRIES	config/igb/igb.h	/^#define MAX_MSIX_ENTRIES	/;"	d
MAX_MTA_REG	config/igb/e1000_hw.h	/^	#define MAX_MTA_REG /;"	d
MAX_NUM_FLOWS	src/flow.h	/^#define MAX_NUM_FLOWS /;"	d
MAX_NUM_VFS	config/igb/e1000_82575.h	/^#define MAX_NUM_VFS /;"	d
MAX_PHY_MULTI_PAGE_REG	config/igb/e1000_defines.h	/^#define MAX_PHY_MULTI_PAGE_REG /;"	d
MAX_PHY_REG_ADDRESS	config/igb/e1000_defines.h	/^#define MAX_PHY_REG_ADDRESS /;"	d
MAX_Q_VECTORS	config/igb/igb.h	/^#define MAX_Q_VECTORS	/;"	d
MAX_STD_JUMBO_FRAME_SIZE	config/igb/e1000_defines.h	/^#define MAX_STD_JUMBO_FRAME_SIZE	/;"	d
MII_CR_AUTO_NEG_EN	config/igb/e1000_defines.h	/^#define MII_CR_AUTO_NEG_EN /;"	d
MII_CR_FULL_DUPLEX	config/igb/e1000_defines.h	/^#define MII_CR_FULL_DUPLEX /;"	d
MII_CR_LOOPBACK	config/igb/e1000_defines.h	/^#define MII_CR_LOOPBACK /;"	d
MII_CR_POWER_DOWN	config/igb/e1000_defines.h	/^#define MII_CR_POWER_DOWN /;"	d
MII_CR_RESET	config/igb/e1000_defines.h	/^#define MII_CR_RESET /;"	d
MII_CR_RESTART_AUTO_NEG	config/igb/e1000_defines.h	/^#define MII_CR_RESTART_AUTO_NEG /;"	d
MII_CR_SPEED_10	config/igb/e1000_defines.h	/^#define MII_CR_SPEED_10 /;"	d
MII_CR_SPEED_100	config/igb/e1000_defines.h	/^#define MII_CR_SPEED_100 /;"	d
MII_CR_SPEED_1000	config/igb/e1000_defines.h	/^#define MII_CR_SPEED_1000 /;"	d
MII_SR_AUTONEG_COMPLETE	config/igb/e1000_defines.h	/^#define MII_SR_AUTONEG_COMPLETE /;"	d
MII_SR_LINK_STATUS	config/igb/e1000_defines.h	/^#define MII_SR_LINK_STATUS /;"	d
MSG	dpdk/cy_func.c	/^#define MSG /;"	d	file:
MSG_LENGTH	dpdk/cy_func.c	/^#define MSG_LENGTH /;"	d	file:
MSG_LENGTH	dpdk/cy_func_multicore.c	/^#define MSG_LENGTH /;"	d	file:
MTU	src/system.h	/^#define MTU /;"	d
Message	dpdk/cy_2p1q.c	/^    struct Message$/;"	s	function:main	file:
Message	dpdk/cy_base.c	/^    struct Message$/;"	s	function:main	file:
Message	dpdk/cy_bk.c	/^    struct Message$/;"	s	function:main	file:
NON_Q_VECTORS	config/igb/igb.h	/^#define NON_Q_VECTORS	/;"	d
NUM_MBUFS	src/dpdk.h	/^#define NUM_MBUFS /;"	d
NUM_PACKETS	dpdk/cy_2p1q.c	/^#define NUM_PACKETS /;"	d	file:
NUM_PACKETS	dpdk/cy_base.c	/^#define NUM_PACKETS /;"	d	file:
NUM_PACKETS	dpdk/cy_func.c	/^#define NUM_PACKETS /;"	d	file:
NUM_PACKETS	dpdk/cy_func_multicore.c	/^#define NUM_PACKETS /;"	d	file:
NUM_PACKETS	dpdk/cy_timer.c	/^#define NUM_PACKETS /;"	d	file:
NUM_THREAD	dpdk/cy_func_multicore.c	/^#define NUM_THREAD /;"	d	file:
NVM_82580_LAN_FUNC_OFFSET	config/igb/e1000_defines.h	/^#define NVM_82580_LAN_FUNC_OFFSET(/;"	d
NVM_A8_OPCODE_SPI	config/igb/e1000_defines.h	/^#define NVM_A8_OPCODE_SPI /;"	d
NVM_ALT_MAC_ADDR_PTR	config/igb/e1000_defines.h	/^#define NVM_ALT_MAC_ADDR_PTR /;"	d
NVM_CHECKSUM_REG	config/igb/e1000_defines.h	/^#define NVM_CHECKSUM_REG /;"	d
NVM_COMB_VER_MASK	config/igb/e1000_defines.h	/^#define NVM_COMB_VER_MASK	/;"	d
NVM_COMB_VER_OFF	config/igb/e1000_defines.h	/^#define NVM_COMB_VER_OFF /;"	d
NVM_COMB_VER_OFF	config/igb/igb.h	/^#define NVM_COMB_VER_OFF	/;"	d
NVM_COMB_VER_PTR	config/igb/e1000_defines.h	/^#define NVM_COMB_VER_PTR /;"	d
NVM_COMB_VER_PTR	config/igb/igb.h	/^#define NVM_COMB_VER_PTR	/;"	d
NVM_COMB_VER_SHFT	config/igb/e1000_defines.h	/^#define NVM_COMB_VER_SHFT	/;"	d
NVM_COMPAT	config/igb/e1000_defines.h	/^#define NVM_COMPAT /;"	d
NVM_COMPATIBILITY_BIT_MASK	config/igb/e1000_defines.h	/^#define NVM_COMPATIBILITY_BIT_MASK /;"	d
NVM_COMPATIBILITY_REG_3	config/igb/e1000_defines.h	/^#define NVM_COMPATIBILITY_REG_3 /;"	d
NVM_DEV_ID	config/igb/e1000_defines.h	/^#define NVM_DEV_ID /;"	d
NVM_ETRACK_HIWORD	config/igb/e1000_defines.h	/^#define NVM_ETRACK_HIWORD /;"	d
NVM_ETRACK_SHIFT	config/igb/e1000_defines.h	/^#define NVM_ETRACK_SHIFT	/;"	d
NVM_ETRACK_VALID	config/igb/e1000_defines.h	/^#define NVM_ETRACK_VALID	/;"	d
NVM_ETRACK_WORD	config/igb/e1000_defines.h	/^#define NVM_ETRACK_WORD /;"	d
NVM_ETRACK_WORD	config/igb/igb.h	/^#define NVM_ETRACK_WORD	/;"	d
NVM_ETS_CFG	config/igb/e1000_defines.h	/^#define NVM_ETS_CFG	/;"	d
NVM_ETS_DATA_HTHRESH_MASK	config/igb/e1000_defines.h	/^#define NVM_ETS_DATA_HTHRESH_MASK	/;"	d
NVM_ETS_DATA_INDEX_MASK	config/igb/e1000_defines.h	/^#define NVM_ETS_DATA_INDEX_MASK	/;"	d
NVM_ETS_DATA_INDEX_SHIFT	config/igb/e1000_defines.h	/^#define NVM_ETS_DATA_INDEX_SHIFT	/;"	d
NVM_ETS_DATA_LOC_MASK	config/igb/e1000_defines.h	/^#define NVM_ETS_DATA_LOC_MASK	/;"	d
NVM_ETS_DATA_LOC_SHIFT	config/igb/e1000_defines.h	/^#define NVM_ETS_DATA_LOC_SHIFT	/;"	d
NVM_ETS_LTHRES_DELTA_MASK	config/igb/e1000_defines.h	/^#define NVM_ETS_LTHRES_DELTA_MASK	/;"	d
NVM_ETS_LTHRES_DELTA_SHIFT	config/igb/e1000_defines.h	/^#define NVM_ETS_LTHRES_DELTA_SHIFT	/;"	d
NVM_ETS_NUM_SENSORS_MASK	config/igb/e1000_defines.h	/^#define NVM_ETS_NUM_SENSORS_MASK	/;"	d
NVM_ETS_TYPE_EMC	config/igb/e1000_defines.h	/^#define NVM_ETS_TYPE_EMC	/;"	d
NVM_ETS_TYPE_MASK	config/igb/e1000_defines.h	/^#define NVM_ETS_TYPE_MASK	/;"	d
NVM_ETS_TYPE_SHIFT	config/igb/e1000_defines.h	/^#define NVM_ETS_TYPE_SHIFT	/;"	d
NVM_HEX_CONV	config/igb/e1000_defines.h	/^#define NVM_HEX_CONV	/;"	d
NVM_HEX_TENS	config/igb/e1000_defines.h	/^#define NVM_HEX_TENS	/;"	d
NVM_ID_LED_SETTINGS	config/igb/e1000_defines.h	/^#define NVM_ID_LED_SETTINGS /;"	d
NVM_IMAGE_ID_MASK	config/igb/e1000_defines.h	/^#define NVM_IMAGE_ID_MASK	/;"	d
NVM_INIT_CONTROL2_REG	config/igb/e1000_defines.h	/^#define NVM_INIT_CONTROL2_REG /;"	d
NVM_INIT_CONTROL3_PORT_A	config/igb/e1000_defines.h	/^#define NVM_INIT_CONTROL3_PORT_A /;"	d
NVM_INIT_CONTROL3_PORT_B	config/igb/e1000_defines.h	/^#define NVM_INIT_CONTROL3_PORT_B /;"	d
NVM_INIT_CTRL_2	config/igb/e1000_defines.h	/^#define NVM_INIT_CTRL_2 /;"	d
NVM_INIT_CTRL_2_DEFAULT_I211	config/igb/e1000_i210.h	/^#define NVM_INIT_CTRL_2_DEFAULT_I211	/;"	d
NVM_INIT_CTRL_4	config/igb/e1000_defines.h	/^#define NVM_INIT_CTRL_4 /;"	d
NVM_INIT_CTRL_4_DEFAULT_I211	config/igb/e1000_i210.h	/^#define NVM_INIT_CTRL_4_DEFAULT_I211	/;"	d
NVM_LED_0_2_CFG	config/igb/e1000_defines.h	/^#define NVM_LED_0_2_CFG /;"	d
NVM_LED_0_2_CFG_DEFAULT_I211	config/igb/e1000_i210.h	/^#define NVM_LED_0_2_CFG_DEFAULT_I211	/;"	d
NVM_LED_1_CFG	config/igb/e1000_defines.h	/^#define NVM_LED_1_CFG /;"	d
NVM_LED_1_CFG_DEFAULT_I211	config/igb/e1000_i210.h	/^#define NVM_LED_1_CFG_DEFAULT_I211	/;"	d
NVM_MAC_ADDR	config/igb/e1000_defines.h	/^#define NVM_MAC_ADDR /;"	d
NVM_MAJOR_MASK	config/igb/e1000_defines.h	/^#define NVM_MAJOR_MASK	/;"	d
NVM_MAJOR_SHIFT	config/igb/e1000_defines.h	/^#define NVM_MAJOR_SHIFT	/;"	d
NVM_MAX_RETRY_SPI	config/igb/e1000_defines.h	/^#define NVM_MAX_RETRY_SPI /;"	d
NVM_MINOR_MASK	config/igb/e1000_defines.h	/^#define NVM_MINOR_MASK	/;"	d
NVM_MINOR_SHIFT	config/igb/e1000_defines.h	/^#define NVM_MINOR_SHIFT	/;"	d
NVM_NEW_DEC_MASK	config/igb/e1000_defines.h	/^#define NVM_NEW_DEC_MASK	/;"	d
NVM_PBA_OFFSET_0	config/igb/e1000_defines.h	/^#define NVM_PBA_OFFSET_0 /;"	d
NVM_PBA_OFFSET_1	config/igb/e1000_defines.h	/^#define NVM_PBA_OFFSET_1 /;"	d
NVM_PBA_PTR_GUARD	config/igb/e1000_defines.h	/^#define NVM_PBA_PTR_GUARD /;"	d
NVM_RDSR_OPCODE_SPI	config/igb/e1000_defines.h	/^#define NVM_RDSR_OPCODE_SPI /;"	d
NVM_READ_OPCODE_SPI	config/igb/e1000_defines.h	/^#define NVM_READ_OPCODE_SPI /;"	d
NVM_RESERVED_WORD	config/igb/e1000_defines.h	/^#define NVM_RESERVED_WORD	/;"	d
NVM_STATUS_RDY_SPI	config/igb/e1000_defines.h	/^#define NVM_STATUS_RDY_SPI /;"	d
NVM_SUB_DEV_ID	config/igb/e1000_defines.h	/^#define NVM_SUB_DEV_ID /;"	d
NVM_SUB_VEN_ID	config/igb/e1000_defines.h	/^#define NVM_SUB_VEN_ID /;"	d
NVM_SUM	config/igb/e1000_defines.h	/^#define NVM_SUM /;"	d
NVM_VEN_ID	config/igb/e1000_defines.h	/^#define NVM_VEN_ID /;"	d
NVM_VERSION	config/igb/e1000_defines.h	/^#define NVM_VERSION /;"	d
NVM_VER_INVALID	config/igb/e1000_defines.h	/^#define NVM_VER_INVALID	/;"	d
NVM_WORD0F_ASM_DIR	config/igb/e1000_defines.h	/^#define NVM_WORD0F_ASM_DIR /;"	d
NVM_WORD0F_PAUSE_MASK	config/igb/e1000_defines.h	/^#define NVM_WORD0F_PAUSE_MASK /;"	d
NVM_WORD24_COM_MDIO	config/igb/e1000_defines.h	/^#define NVM_WORD24_COM_MDIO /;"	d
NVM_WORD24_EXT_MDIO	config/igb/e1000_defines.h	/^#define NVM_WORD24_EXT_MDIO /;"	d
NVM_WORD_SIZE_BASE_SHIFT	config/igb/e1000_defines.h	/^#define NVM_WORD_SIZE_BASE_SHIFT /;"	d
NVM_WREN_OPCODE_SPI	config/igb/e1000_defines.h	/^#define NVM_WREN_OPCODE_SPI /;"	d
NVM_WRITE_OPCODE_SPI	config/igb/e1000_defines.h	/^#define NVM_WRITE_OPCODE_SPI /;"	d
NWAY_AR_100TX_FD_CAPS	config/igb/e1000_defines.h	/^#define NWAY_AR_100TX_FD_CAPS /;"	d
NWAY_AR_100TX_HD_CAPS	config/igb/e1000_defines.h	/^#define NWAY_AR_100TX_HD_CAPS /;"	d
NWAY_AR_10T_FD_CAPS	config/igb/e1000_defines.h	/^#define NWAY_AR_10T_FD_CAPS /;"	d
NWAY_AR_10T_HD_CAPS	config/igb/e1000_defines.h	/^#define NWAY_AR_10T_HD_CAPS /;"	d
NWAY_AR_ASM_DIR	config/igb/e1000_defines.h	/^#define NWAY_AR_ASM_DIR /;"	d
NWAY_AR_PAUSE	config/igb/e1000_defines.h	/^#define NWAY_AR_PAUSE /;"	d
NWAY_LPAR_ASM_DIR	config/igb/e1000_defines.h	/^#define NWAY_LPAR_ASM_DIR /;"	d
NWAY_LPAR_PAUSE	config/igb/e1000_defines.h	/^#define NWAY_LPAR_PAUSE /;"	d
ONESEC	src/system.h	/^#define ONESEC /;"	d
PATTERN_TEST	config/igb/igb_ethtool.c	/^#define PATTERN_TEST	/;"	d	file:
PCIE_DEVICE_CONTROL2	config/igb/e1000_defines.h	/^#define PCIE_DEVICE_CONTROL2 /;"	d
PCIE_DEVICE_CONTROL2_16ms	config/igb/e1000_defines.h	/^#define PCIE_DEVICE_CONTROL2_16ms /;"	d
PHY_1000T_CTRL	config/igb/e1000_defines.h	/^#define PHY_1000T_CTRL /;"	d
PHY_1000T_STATUS	config/igb/e1000_defines.h	/^#define PHY_1000T_STATUS /;"	d
PHY_AUTONEG_ADV	config/igb/e1000_defines.h	/^#define PHY_AUTONEG_ADV /;"	d
PHY_AUTO_NEG_LIMIT	config/igb/e1000_defines.h	/^#define PHY_AUTO_NEG_LIMIT /;"	d
PHY_CFG_TIMEOUT	config/igb/e1000_defines.h	/^#define PHY_CFG_TIMEOUT /;"	d
PHY_CONTROL	config/igb/e1000_defines.h	/^#define PHY_CONTROL /;"	d
PHY_FORCE_LIMIT	config/igb/e1000_defines.h	/^#define PHY_FORCE_LIMIT /;"	d
PHY_ID1	config/igb/e1000_defines.h	/^#define PHY_ID1 /;"	d
PHY_ID2	config/igb/e1000_defines.h	/^#define PHY_ID2 /;"	d
PHY_LP_ABILITY	config/igb/e1000_defines.h	/^#define PHY_LP_ABILITY /;"	d
PHY_REVISION_MASK	config/igb/e1000_defines.h	/^#define PHY_REVISION_MASK /;"	d
PHY_STATUS	config/igb/e1000_defines.h	/^#define PHY_STATUS /;"	d
QUEUE_MODE_STREAM_RESERVATION	config/igb/igb_main.c	/^	QUEUE_MODE_STREAM_RESERVATION,$/;"	e	enum:queue_mode	file:
QUEUE_MODE_STRICT_PRIORITY	config/igb/igb_main.c	/^	QUEUE_MODE_STRICT_PRIORITY,$/;"	e	enum:queue_mode	file:
Q_IDX_82576	config/igb/igb_main.c	/^#define Q_IDX_82576(/;"	d	file:
REG_PATTERN_TEST	config/igb/igb_ethtool.c	/^#define REG_PATTERN_TEST(/;"	d	file:
REG_SET_AND_CHECK	config/igb/igb_ethtool.c	/^#define REG_SET_AND_CHECK(/;"	d	file:
REQ_RX_DESCRIPTOR_MULTIPLE	config/igb/e1000_defines.h	/^#define REQ_RX_DESCRIPTOR_MULTIPLE /;"	d
REQ_TX_DESCRIPTOR_MULTIPLE	config/igb/e1000_defines.h	/^#define REQ_TX_DESCRIPTOR_MULTIPLE /;"	d
RX_RING_SIZE	src/dpdk.h	/^#define RX_RING_SIZE /;"	d
SET_READ_TEST	config/igb/igb_ethtool.c	/^#define SET_READ_TEST	/;"	d	file:
SO_LAUNCHTIME_CY	dpdk/cy_func_multicore.c	/^#define SO_LAUNCHTIME_CY /;"	d	file:
SO_TIMESTAMPING_TX_CY	dpdk/cy_2p1q.c	/^#define SO_TIMESTAMPING_TX_CY /;"	d	file:
SO_TIMESTAMPING_TX_CY	dpdk/cy_base.c	/^#define SO_TIMESTAMPING_TX_CY /;"	d	file:
SO_TIMESTAMPING_TX_CY	dpdk/cy_func.c	/^#define SO_TIMESTAMPING_TX_CY /;"	d	file:
SO_TIMESTAMPING_TX_CY	dpdk/cy_func_multicore.c	/^#define SO_TIMESTAMPING_TX_CY /;"	d	file:
SO_TIMESTAMPING_TX_CY	dpdk/cy_timer.c	/^#define SO_TIMESTAMPING_TX_CY /;"	d	file:
SPEED_10	config/igb/e1000_defines.h	/^#define SPEED_10 /;"	d
SPEED_100	config/igb/e1000_defines.h	/^#define SPEED_100 /;"	d
SPEED_1000	config/igb/e1000_defines.h	/^#define SPEED_1000 /;"	d
SPEED_2500	config/igb/e1000_defines.h	/^#define SPEED_2500 /;"	d
SRC_ETH_ADDR	dpdk/cy_func.c	/^#define SRC_ETH_ADDR /;"	d	file:
SRC_ETH_ADDR	dpdk/cy_func_multicore.c	/^#define SRC_ETH_ADDR /;"	d	file:
SRC_IP	dpdk/cy_func.c	/^#define SRC_IP /;"	d	file:
SRC_IP	dpdk/cy_func_multicore.c	/^#define SRC_IP /;"	d	file:
SRC_PORT	dpdk/cy_func.c	/^#define SRC_PORT /;"	d	file:
SRC_PORT	dpdk/cy_func_multicore.c	/^#define SRC_PORT /;"	d	file:
SR_1000T_LOCAL_RX_STATUS	config/igb/e1000_defines.h	/^#define SR_1000T_LOCAL_RX_STATUS /;"	d
SR_1000T_REMOTE_RX_STATUS	config/igb/e1000_defines.h	/^#define SR_1000T_REMOTE_RX_STATUS /;"	d
START_DELAY_FROM_NOW_IN_SEC	src/flow.h	/^#define START_DELAY_FROM_NOW_IN_SEC /;"	d
TABLE32_TEST	config/igb/igb_ethtool.c	/^#define TABLE32_TEST	/;"	d	file:
TABLE64_TEST_HI	config/igb/igb_ethtool.c	/^#define TABLE64_TEST_HI	/;"	d	file:
TABLE64_TEST_LO	config/igb/igb_ethtool.c	/^#define TABLE64_TEST_LO	/;"	d	file:
TEST_EEP	config/igb/igb_ethtool.c	/^	TEST_EEP,$/;"	e	enum:igb_diagnostics_results	file:
TEST_IRQ	config/igb/igb_ethtool.c	/^	TEST_IRQ,$/;"	e	enum:igb_diagnostics_results	file:
TEST_LINK	config/igb/igb_ethtool.c	/^	TEST_LINK$/;"	e	enum:igb_diagnostics_results	file:
TEST_LOOP	config/igb/igb_ethtool.c	/^	TEST_LOOP,$/;"	e	enum:igb_diagnostics_results	file:
TEST_REG	config/igb/igb_ethtool.c	/^	TEST_REG = 0,$/;"	e	enum:igb_diagnostics_results	file:
TIMESTAMP_BATCH_SIZE	dpdk/cy_2p1q.c	/^#define TIMESTAMP_BATCH_SIZE /;"	d	file:
TIMESTAMP_BATCH_SIZE	dpdk/cy_base.c	/^#define TIMESTAMP_BATCH_SIZE /;"	d	file:
TIMESTAMP_BATCH_SIZE	dpdk/cy_func.c	/^#define TIMESTAMP_BATCH_SIZE /;"	d	file:
TIMESTAMP_BATCH_SIZE	dpdk/cy_func_multicore.c	/^#define TIMESTAMP_BATCH_SIZE /;"	d	file:
TSAUXC_AUTT0	config/igb/e1000_defines.h	/^#define TSAUXC_AUTT0 /;"	d
TSAUXC_AUTT1	config/igb/e1000_defines.h	/^#define TSAUXC_AUTT1 /;"	d
TSAUXC_DISABLE	config/igb/e1000_defines.h	/^#define TSAUXC_DISABLE /;"	d
TSAUXC_EN_CLK0	config/igb/e1000_defines.h	/^#define TSAUXC_EN_CLK0 /;"	d
TSAUXC_EN_CLK1	config/igb/e1000_defines.h	/^#define TSAUXC_EN_CLK1 /;"	d
TSAUXC_EN_TS0	config/igb/e1000_defines.h	/^#define TSAUXC_EN_TS0 /;"	d
TSAUXC_EN_TS1	config/igb/e1000_defines.h	/^#define TSAUXC_EN_TS1 /;"	d
TSAUXC_EN_TT0	config/igb/e1000_defines.h	/^#define TSAUXC_EN_TT0 /;"	d
TSAUXC_EN_TT1	config/igb/e1000_defines.h	/^#define TSAUXC_EN_TT1 /;"	d
TSAUXC_PLSG	config/igb/e1000_defines.h	/^#define TSAUXC_PLSG /;"	d
TSAUXC_SAMP_AUT0	config/igb/e1000_defines.h	/^#define TSAUXC_SAMP_AUT0 /;"	d
TSAUXC_SAMP_AUT1	config/igb/e1000_defines.h	/^#define TSAUXC_SAMP_AUT1 /;"	d
TSAUXC_ST0	config/igb/e1000_defines.h	/^#define TSAUXC_ST0 /;"	d
TSAUXC_ST1	config/igb/e1000_defines.h	/^#define TSAUXC_ST1 /;"	d
TSINTR_AUTT0	config/igb/e1000_defines.h	/^#define TSINTR_AUTT0 /;"	d
TSINTR_AUTT1	config/igb/e1000_defines.h	/^#define TSINTR_AUTT1 /;"	d
TSINTR_RXTS	config/igb/e1000_defines.h	/^#define TSINTR_RXTS /;"	d
TSINTR_SYS_WRAP	config/igb/e1000_defines.h	/^#define TSINTR_SYS_WRAP /;"	d
TSINTR_TADJ	config/igb/e1000_defines.h	/^#define TSINTR_TADJ /;"	d
TSINTR_TT0	config/igb/e1000_defines.h	/^#define TSINTR_TT0 /;"	d
TSINTR_TT1	config/igb/e1000_defines.h	/^#define TSINTR_TT1 /;"	d
TSINTR_TXTS	config/igb/e1000_defines.h	/^#define TSINTR_TXTS /;"	d
TSYNC_INTERRUPTS	config/igb/e1000_defines.h	/^#define TSYNC_INTERRUPTS /;"	d
TS_SDP0_EN	config/igb/e1000_defines.h	/^#define TS_SDP0_EN /;"	d
TS_SDP0_SEL_FC0	config/igb/e1000_defines.h	/^#define TS_SDP0_SEL_FC0 /;"	d
TS_SDP0_SEL_FC1	config/igb/e1000_defines.h	/^#define TS_SDP0_SEL_FC1 /;"	d
TS_SDP0_SEL_TT0	config/igb/e1000_defines.h	/^#define TS_SDP0_SEL_TT0 /;"	d
TS_SDP0_SEL_TT1	config/igb/e1000_defines.h	/^#define TS_SDP0_SEL_TT1 /;"	d
TS_SDP1_EN	config/igb/e1000_defines.h	/^#define TS_SDP1_EN /;"	d
TS_SDP1_SEL_FC0	config/igb/e1000_defines.h	/^#define TS_SDP1_SEL_FC0 /;"	d
TS_SDP1_SEL_FC1	config/igb/e1000_defines.h	/^#define TS_SDP1_SEL_FC1 /;"	d
TS_SDP1_SEL_TT0	config/igb/e1000_defines.h	/^#define TS_SDP1_SEL_TT0 /;"	d
TS_SDP1_SEL_TT1	config/igb/e1000_defines.h	/^#define TS_SDP1_SEL_TT1 /;"	d
TS_SDP2_EN	config/igb/e1000_defines.h	/^#define TS_SDP2_EN /;"	d
TS_SDP2_SEL_FC0	config/igb/e1000_defines.h	/^#define TS_SDP2_SEL_FC0 /;"	d
TS_SDP2_SEL_FC1	config/igb/e1000_defines.h	/^#define TS_SDP2_SEL_FC1 /;"	d
TS_SDP2_SEL_TT0	config/igb/e1000_defines.h	/^#define TS_SDP2_SEL_TT0 /;"	d
TS_SDP2_SEL_TT1	config/igb/e1000_defines.h	/^#define TS_SDP2_SEL_TT1 /;"	d
TS_SDP3_EN	config/igb/e1000_defines.h	/^#define TS_SDP3_EN /;"	d
TS_SDP3_SEL_FC0	config/igb/e1000_defines.h	/^#define TS_SDP3_SEL_FC0 /;"	d
TS_SDP3_SEL_FC1	config/igb/e1000_defines.h	/^#define TS_SDP3_SEL_FC1 /;"	d
TS_SDP3_SEL_TT0	config/igb/e1000_defines.h	/^#define TS_SDP3_SEL_TT0 /;"	d
TS_SDP3_SEL_TT1	config/igb/e1000_defines.h	/^#define TS_SDP3_SEL_TT1 /;"	d
TXD_USE_COUNT	config/igb/igb.h	/^#define TXD_USE_COUNT(/;"	d
TX_QUEUE_PRIO_HIGH	config/igb/igb_main.c	/^	TX_QUEUE_PRIO_HIGH,$/;"	e	enum:tx_queue_prio	file:
TX_QUEUE_PRIO_LOW	config/igb/igb_main.c	/^	TX_QUEUE_PRIO_LOW,$/;"	e	enum:tx_queue_prio	file:
TX_RING_SIZE	src/dpdk.h	/^#define TX_RING_SIZE /;"	d
TX_WAKE_THRESHOLD	config/igb/igb_main.c	/^#define TX_WAKE_THRESHOLD /;"	d	file:
UDP_RSS_FLAGS	config/igb/igb_ethtool.c	/^#define UDP_RSS_FLAGS /;"	d	file:
VFTA_BLOCK_SIZE	config/igb/igb_main.c	/^#define VFTA_BLOCK_SIZE /;"	d	file:
VLAN_PRIO_FULL_MASK	config/igb/igb_main.c	/^#define VLAN_PRIO_FULL_MASK /;"	d	file:
VLAN_TAG_SIZE	config/igb/e1000_defines.h	/^#define VLAN_TAG_SIZE /;"	d
WAKE_PKT_WUS	config/igb/e1000_defines.h	/^#define WAKE_PKT_WUS /;"	d
WRITE_NO_TEST	config/igb/igb_ethtool.c	/^#define WRITE_NO_TEST	/;"	d	file:
_82575	config/igb/e1000_hw.h	/^		struct e1000_dev_spec_82575	_82575;$/;"	m	union:e1000_hw::__anonc1f2b125010a	typeref:struct:e1000_dev_spec_82575
_E1000_82575_H_	config/igb/e1000_82575.h	/^#define _E1000_82575_H_$/;"	d
_E1000_DEFINES_H_	config/igb/e1000_defines.h	/^#define _E1000_DEFINES_H_$/;"	d
_E1000_I210_H_	config/igb/e1000_i210.h	/^#define _E1000_I210_H_$/;"	d
_E1000_IGB_HW_H_	config/igb/e1000_hw.h	/^#define _E1000_IGB_HW_H_$/;"	d
_E1000_MAC_H_	config/igb/e1000_mac.h	/^#define _E1000_MAC_H_$/;"	d
_E1000_MBX_H_	config/igb/e1000_mbx.h	/^#define _E1000_MBX_H_$/;"	d
_E1000_NVM_H_	config/igb/e1000_nvm.h	/^#define _E1000_NVM_H_$/;"	d
_E1000_PHY_H_	config/igb/e1000_phy.h	/^#define _E1000_PHY_H_$/;"	d
_E1000_REGS_H_	config/igb/e1000_regs.h	/^#define _E1000_REGS_H_$/;"	d
_FLOW_H_	src/flow.h	/^#define _FLOW_H_$/;"	d
_IGB_H_	config/igb/igb.h	/^#define _IGB_H_$/;"	d
_LISTENER_H_	src/listener.h	/^#define _LISTENER_H_$/;"	d
_SCHE_H_	src/sche.h	/^#define _SCHE_H_$/;"	d
_SYSTEM_H_	src/system.h	/^#define _SYSTEM_H_$/;"	d
_TALKER_H_	src/talker.h	/^#define _TALKER_H_$/;"	d
_UDP_H_	src/udp.h	/^#define _UDP_H_$/;"	d
__IGB_DOWN	config/igb/igb.h	/^	__IGB_DOWN,$/;"	e	enum:e1000_state_t
__IGB_PTP_TX_IN_PROGRESS	config/igb/igb.h	/^	__IGB_PTP_TX_IN_PROGRESS,$/;"	e	enum:e1000_state_t
__IGB_RESETTING	config/igb/igb.h	/^	__IGB_RESETTING,$/;"	e	enum:e1000_state_t
__IGB_TESTING	config/igb/igb.h	/^	__IGB_TESTING,$/;"	e	enum:e1000_state_t
____cacheline_internodealigned_in_smp	config/igb/igb.h	/^} ____cacheline_internodealigned_in_smp;$/;"	v	typeref:struct:igb_ring
__anon265ab8310108	config/igb/e1000_82575.h	/^	struct {$/;"	s	union:e1000_adv_rx_desc
__anon265ab8310208	config/igb/e1000_82575.h	/^	struct {$/;"	s	union:e1000_adv_rx_desc
__anon265ab8310308	config/igb/e1000_82575.h	/^		struct {$/;"	s	struct:e1000_adv_rx_desc::__anon265ab8310208
__anon265ab8310408	config/igb/e1000_82575.h	/^			struct {$/;"	s	struct:e1000_adv_rx_desc::__anon265ab8310208::__anon265ab8310308
__anon265ab831050a	config/igb/e1000_82575.h	/^			union {$/;"	u	struct:e1000_adv_rx_desc::__anon265ab8310208::__anon265ab8310308
__anon265ab8310608	config/igb/e1000_82575.h	/^				struct {$/;"	s	union:e1000_adv_rx_desc::__anon265ab8310208::__anon265ab8310308::__anon265ab831050a
__anon265ab8310708	config/igb/e1000_82575.h	/^		struct {$/;"	s	struct:e1000_adv_rx_desc::__anon265ab8310208
__anon265ab8310808	config/igb/e1000_82575.h	/^	struct {$/;"	s	union:e1000_adv_tx_desc
__anon265ab8310908	config/igb/e1000_82575.h	/^	struct {$/;"	s	union:e1000_adv_tx_desc
__anon3998ccb2010a	config/igb/igb_main.c	/^	union {$/;"	u	function:igb_tso	file:
__anon3998ccb2020a	config/igb/igb_main.c	/^	union {$/;"	u	function:igb_tso	file:
__anon94720dd3010a	config/igb/igb.h	/^	union {$/;"	u	struct:igb_tx_buffer
__anon94720dd3020a	config/igb/igb.h	/^	union {				\/* array of buffer info structs *\/$/;"	u	struct:igb_ring
__anon94720dd3030a	config/igb/igb.h	/^	union {$/;"	u	struct:igb_ring
__anon94720dd30408	config/igb/igb.h	/^		struct {$/;"	s	union:igb_ring::__anon94720dd3030a
__anon94720dd30508	config/igb/igb.h	/^		struct {$/;"	s	union:igb_ring::__anon94720dd3030a
__anon94720dd30608	config/igb/igb.h	/^	struct {$/;"	s	struct:igb_adapter
__anonc1f2b125010a	config/igb/e1000_hw.h	/^	union {$/;"	u	struct:e1000_hw
__igb_access_emi_reg	config/igb/e1000_82575.c	/^static s32 __igb_access_emi_reg(struct e1000_hw *hw, u16 address,$/;"	f	typeref:typename:s32	file:
__igb_access_xmdio_reg	config/igb/e1000_i210.c	/^static s32 __igb_access_xmdio_reg(struct e1000_hw *hw, u16 address,$/;"	f	typeref:typename:s32	file:
__igb_close	config/igb/igb_main.c	/^static int __igb_close(struct net_device *netdev, bool suspending)$/;"	f	typeref:typename:int	file:
__igb_maybe_stop_tx	config/igb/igb_main.c	/^static int __igb_maybe_stop_tx(struct igb_ring *tx_ring, const u16 size)$/;"	f	typeref:typename:int	file:
__igb_notify_dca	config/igb/igb_main.c	/^static int __igb_notify_dca(struct device *dev, void *data)$/;"	f	typeref:typename:int	file:
__igb_open	config/igb/igb_main.c	/^static int __igb_open(struct net_device *netdev, bool resuming)$/;"	f	typeref:typename:int	file:
__igb_resume	config/igb/igb_main.c	/^static int __maybe_unused __igb_resume(struct device *dev, bool rpm)$/;"	f	typeref:typename:int __maybe_unused	file:
__igb_shutdown	config/igb/igb_main.c	/^static int __igb_shutdown(struct pci_dev *pdev, bool *enable_wake,$/;"	f	typeref:typename:int	file:
a	config/igb/igb_main.c	/^	struct my_u0 { __le64 a; __le64 b; } *u0;$/;"	m	struct:igb_dump::my_u0	typeref:typename:__le64	file:
acks	config/igb/e1000_hw.h	/^	u32 acks;$/;"	m	struct:e1000_mbx_stats	typeref:typename:u32
acquire	config/igb/e1000_hw.h	/^	s32 (*acquire)(struct e1000_hw *);$/;"	m	struct:e1000_nvm_operations	typeref:typename:s32 (*)(struct e1000_hw *)
acquire	config/igb/e1000_hw.h	/^	s32 (*acquire)(struct e1000_hw *);$/;"	m	struct:e1000_phy_operations	typeref:typename:s32 (*)(struct e1000_hw *)
acquire_swfw_sync	config/igb/e1000_hw.h	/^	s32 (*acquire_swfw_sync)(struct e1000_hw *, u16);$/;"	m	struct:e1000_mac_operations	typeref:typename:s32 (*)(struct e1000_hw *,u16)
action	config/igb/igb.h	/^	u16 action;$/;"	m	struct:igb_nfc_filter	typeref:typename:u16
active_vlans	config/igb/igb.h	/^	unsigned long active_vlans[BITS_TO_LONGS(VLAN_N_VID)];$/;"	m	struct:igb_adapter	typeref:typename:unsigned long[]
adapter	config/igb/igb.h	/^	struct igb_adapter *adapter;	\/* backlink *\/$/;"	m	struct:igb_q_vector	typeref:struct:igb_adapter *
adaptive_ifs	config/igb/e1000_hw.h	/^	bool adaptive_ifs;$/;"	m	struct:e1000_mac_info	typeref:typename:bool
add_flow	src/flow.c	/^void add_flow(struct flow_state *flow_state, struct flow *flow)$/;"	f	typeref:typename:void
addr	config/igb/e1000_hw.h	/^	u32 addr;$/;"	m	struct:e1000_phy_info	typeref:typename:u32
addr	config/igb/e1000_hw.h	/^	u8 addr[6];$/;"	m	struct:e1000_mac_info	typeref:typename:u8[6]
addr	config/igb/igb.h	/^	u8 addr[ETH_ALEN];$/;"	m	struct:igb_mac_addr	typeref:typename:u8[]
address	src/listener.c	/^char address[INET_ADDRSTRLEN];$/;"	v	typeref:typename:char[]
address	src/talker.c	/^static char *address = "127.0.0.1";$/;"	v	typeref:typename:char *	file:
address_bits	config/igb/e1000_hw.h	/^	u16 address_bits;$/;"	m	struct:e1000_nvm_info	typeref:typename:u16
address_dst	src/flow.h	/^    char *address_dst;$/;"	m	struct:interface_config	typeref:typename:char *
address_src	src/flow.h	/^    char *address_src;$/;"	m	struct:interface_config	typeref:typename:char *
algnerrc	config/igb/e1000_hw.h	/^	u64 algnerrc;$/;"	m	struct:e1000_hw_stats	typeref:typename:u64
alloc_failed	config/igb/igb.h	/^	u64 alloc_failed;$/;"	m	struct:igb_rx_queue_stats	typeref:typename:u64
alloc_pkt	dpdk/cy_timer.c	/^struct rte_mbuf *alloc_pkt(struct rte_mempool *mbuf_pool)$/;"	f	typeref:struct:rte_mbuf *
allocate_packet	dpdk/cy_func.c	/^struct rte_mbuf *allocate_packet(void)$/;"	f	typeref:struct:rte_mbuf *
allocate_packet	dpdk/cy_func_multicore.c	/^struct rte_mbuf *allocate_packet(void)$/;"	f	typeref:struct:rte_mbuf *
apply_command_arguments	src/talker.c	/^void apply_command_arguments(struct flow_state *state)$/;"	f	typeref:typename:void
apply_config_file	src/talker.c	/^void apply_config_file(struct flow_state *state, const char *config_path)$/;"	f	typeref:typename:void
arc_subsystem_valid	config/igb/e1000_hw.h	/^	bool arc_subsystem_valid;$/;"	m	struct:e1000_mac_info	typeref:typename:bool
array_len	config/igb/igb_ethtool.c	/^	u16 array_len;$/;"	m	struct:igb_reg_test	typeref:typename:u16	file:
array_rd32	config/igb/e1000_regs.h	/^#define array_rd32(/;"	d
array_wr32	config/igb/e1000_regs.h	/^#define array_wr32(/;"	d
asf_firmware_present	config/igb/e1000_hw.h	/^	bool asf_firmware_present;$/;"	m	struct:e1000_mac_info	typeref:typename:bool
attrs	config/igb/igb.h	/^	struct attribute *attrs[E1000_MAX_SENSORS * 4 + 1];$/;"	m	struct:hwmon_buff	typeref:struct:attribute * []
autoneg	config/igb/e1000_hw.h	/^	bool autoneg;$/;"	m	struct:e1000_mac_info	typeref:typename:bool
autoneg_advertised	config/igb/e1000_hw.h	/^	u16 autoneg_advertised;$/;"	m	struct:e1000_phy_info	typeref:typename:u16
autoneg_failed	config/igb/e1000_hw.h	/^	bool autoneg_failed;$/;"	m	struct:e1000_mac_info	typeref:typename:bool
autoneg_mask	config/igb/e1000_hw.h	/^	u16 autoneg_mask;$/;"	m	struct:e1000_phy_info	typeref:typename:u16
autoneg_wait_to_complete	config/igb/e1000_hw.h	/^	bool autoneg_wait_to_complete;$/;"	m	struct:e1000_phy_info	typeref:typename:bool
b	config/igb/igb_main.c	/^	struct my_u0 { __le64 a; __le64 b; } *u0;$/;"	m	struct:igb_dump::my_u0	typeref:typename:__le64	file:
b2ogprc	config/igb/e1000_hw.h	/^	u64 b2ogprc;$/;"	m	struct:e1000_hw_stats	typeref:typename:u64
b2ospc	config/igb/e1000_hw.h	/^	u64 b2ospc;$/;"	m	struct:e1000_hw_stats	typeref:typename:u64
back	config/igb/e1000_hw.h	/^	void *back;$/;"	m	struct:e1000_hw	typeref:typename:void *
bd_number	config/igb/igb.h	/^	u32 bd_number;$/;"	m	struct:igb_adapter	typeref:typename:u32
blink_timer	config/igb/igb.h	/^	struct timer_list blink_timer;$/;"	m	struct:igb_adapter	typeref:struct:timer_list
board_82575	config/igb/igb.h	/^	board_82575,$/;"	e	enum:igb_boards
bprc	config/igb/e1000_hw.h	/^	u64 bprc;$/;"	m	struct:e1000_hw_stats	typeref:typename:u64
bptc	config/igb/e1000_hw.h	/^	u64 bptc;$/;"	m	struct:e1000_hw_stats	typeref:typename:u64
buffer_addr	config/igb/e1000_82575.h	/^		__le64 buffer_addr;    \/* Address of descriptor's data buf *\/$/;"	m	struct:e1000_adv_tx_desc::__anon265ab8310808	typeref:typename:__le64
bulk_latency	config/igb/igb_main.c	/^	bulk_latency = 2,$/;"	e	enum:latency_range	file:
bus	config/igb/e1000_hw.h	/^	struct e1000_bus_info  bus;$/;"	m	struct:e1000_hw	typeref:struct:e1000_bus_info
bytecount	config/igb/igb.h	/^	unsigned int bytecount;$/;"	m	struct:igb_tx_buffer	typeref:typename:unsigned int
bytes	config/igb/igb.h	/^	u64 bytes;$/;"	m	struct:igb_rx_queue_stats	typeref:typename:u64
bytes	config/igb/igb.h	/^	u64 bytes;$/;"	m	struct:igb_tx_queue_stats	typeref:typename:u64
cable_length	config/igb/e1000_hw.h	/^	u16 cable_length;$/;"	m	struct:e1000_phy_info	typeref:typename:u16
cable_polarity	config/igb/e1000_hw.h	/^	enum e1000_rev_polarity cable_polarity;$/;"	m	struct:e1000_phy_info	typeref:enum:e1000_rev_polarity
calculate_cycle	src/sche.c	/^long calculate_cycle(const struct flow_state *state){$/;"	f	typeref:typename:long
calculate_jitter	dpdk/cy_func.c	/^void calculate_jitter(long hw_timestamps[], int num_packets)$/;"	f	typeref:typename:void
calculate_jitter	dpdk/cy_func_multicore.c	/^void calculate_jitter(long hw_timestamps[], int num_packets)$/;"	f	typeref:typename:void
calculate_num_frames	src/sche.c	/^int calculate_num_frames(const struct flow_state *state, long cycle_period){$/;"	f	typeref:typename:int
caution_thresh	config/igb/e1000_hw.h	/^	u8 caution_thresh;$/;"	m	struct:e1000_thermal_diode_data	typeref:typename:u8
cbrdpc	config/igb/e1000_hw.h	/^	u64 cbrdpc;$/;"	m	struct:e1000_hw_stats	typeref:typename:u64
cbrmpc	config/igb/e1000_hw.h	/^	u64 cbrmpc;$/;"	m	struct:e1000_hw_stats	typeref:typename:u64
cbs_enable	config/igb/igb.h	/^	bool cbs_enable;		\/* indicates if CBS is enabled *\/$/;"	m	struct:igb_ring	typeref:typename:bool
cbtmpc	config/igb/e1000_hw.h	/^	u64 cbtmpc;$/;"	m	struct:e1000_hw_stats	typeref:typename:u64
cc	config/igb/igb.h	/^	struct cyclecounter cc;$/;"	m	struct:igb_adapter	typeref:struct:cyclecounter
cexterr	config/igb/e1000_hw.h	/^	u64 cexterr;$/;"	m	struct:e1000_hw_stats	typeref:typename:u64
check_for_ack	config/igb/e1000_hw.h	/^	s32 (*check_for_ack)(struct e1000_hw *hw, u16 mbx_id);$/;"	m	struct:e1000_mbx_operations	typeref:typename:s32 (*)(struct e1000_hw * hw,u16 mbx_id)
check_for_link	config/igb/e1000_hw.h	/^	s32 (*check_for_link)(struct e1000_hw *);$/;"	m	struct:e1000_mac_operations	typeref:typename:s32 (*)(struct e1000_hw *)
check_for_msg	config/igb/e1000_hw.h	/^	s32 (*check_for_msg)(struct e1000_hw *hw, u16 mbx_id);$/;"	m	struct:e1000_mbx_operations	typeref:typename:s32 (*)(struct e1000_hw * hw,u16 mbx_id)
check_for_rst	config/igb/e1000_hw.h	/^	s32 (*check_for_rst)(struct e1000_hw *hw, u16 mbx_id);$/;"	m	struct:e1000_mbx_operations	typeref:typename:s32 (*)(struct e1000_hw * hw,u16 mbx_id)
check_mng_mode	config/igb/e1000_hw.h	/^	bool (*check_mng_mode)(struct e1000_hw *);$/;"	m	struct:e1000_mac_operations	typeref:typename:bool (*)(struct e1000_hw *)
check_offload_capabilities	dpdk/cy_func.c	/^int check_offload_capabilities(void)$/;"	f	typeref:typename:int
check_offload_capabilities	dpdk/cy_func_multicore.c	/^int check_offload_capabilities(void)$/;"	f	typeref:typename:int
check_polarity	config/igb/e1000_hw.h	/^	s32 (*check_polarity)(struct e1000_hw *);$/;"	m	struct:e1000_phy_operations	typeref:typename:s32 (*)(struct e1000_hw *)
check_reset_block	config/igb/e1000_hw.h	/^	s32 (*check_reset_block)(struct e1000_hw *);$/;"	m	struct:e1000_phy_operations	typeref:typename:s32 (*)(struct e1000_hw *)
checksum	config/igb/e1000_hw.h	/^	u8  checksum;$/;"	m	struct:e1000_host_mng_command_header	typeref:typename:u8
checksum	config/igb/e1000_hw.h	/^	u8  checksum;$/;"	m	struct:e1000_host_mng_dhcp_cookie	typeref:typename:u8
checksum	config/igb/e1000_hw.h	/^	u8 checksum;$/;"	m	struct:e1000_host_command_header	typeref:typename:u8
clean	src/makefile	/^clean:$/;"	t
cleanup_resources	dpdk/cy_func.c	/^void cleanup_resources(void)$/;"	f	typeref:typename:void
cleanup_resources	dpdk/cy_func_multicore.c	/^void cleanup_resources(void)$/;"	f	typeref:typename:void
clear_ring_build_skb_enabled	config/igb/igb.h	/^#define clear_ring_build_skb_enabled(/;"	d
clear_ring_uses_large_buffer	config/igb/igb.h	/^#define clear_ring_uses_large_buffer(/;"	d
clear_semaphore_once	config/igb/e1000_hw.h	/^	bool clear_semaphore_once;$/;"	m	struct:e1000_dev_spec_82575	typeref:typename:bool
cls_flower_list	config/igb/igb.h	/^	struct hlist_head cls_flower_list;$/;"	m	struct:igb_adapter	typeref:struct:hlist_head
cmd_type_len	config/igb/e1000_82575.h	/^		__le32 cmd_type_len;$/;"	m	struct:e1000_adv_tx_desc::__anon265ab8310808	typeref:typename:__le32
colc	config/igb/e1000_hw.h	/^	u64 colc;$/;"	m	struct:e1000_hw_stats	typeref:typename:u64
command_data	config/igb/e1000_hw.h	/^	u8 command_data[E1000_HI_MAX_DATA_LENGTH];$/;"	m	struct:e1000_host_command_info	typeref:typename:u8[]
command_data	config/igb/e1000_hw.h	/^	u8 command_data[E1000_HI_MAX_MNG_DATA_LENGTH];$/;"	m	struct:e1000_host_mng_command_info	typeref:typename:u8[]
command_header	config/igb/e1000_hw.h	/^	struct e1000_host_command_header command_header;$/;"	m	struct:e1000_host_command_info	typeref:struct:e1000_host_command_header
command_header	config/igb/e1000_hw.h	/^	struct e1000_host_mng_command_header command_header;$/;"	m	struct:e1000_host_mng_command_info	typeref:struct:e1000_host_mng_command_header
command_id	config/igb/e1000_hw.h	/^	u8  command_id;$/;"	m	struct:e1000_host_mng_command_header	typeref:typename:u8
command_id	config/igb/e1000_hw.h	/^	u8 command_id;$/;"	m	struct:e1000_host_command_header	typeref:typename:u8
command_length	config/igb/e1000_hw.h	/^	u16 command_length;$/;"	m	struct:e1000_host_mng_command_header	typeref:typename:u16
command_length	config/igb/e1000_hw.h	/^	u8 command_length;$/;"	m	struct:e1000_host_command_header	typeref:typename:u8
command_options	config/igb/e1000_hw.h	/^	u8 command_options;$/;"	m	struct:e1000_host_command_header	typeref:typename:u8
configure_port	dpdk/cy_func.c	/^int configure_port(void)$/;"	f	typeref:typename:int
configure_port	dpdk/cy_func_multicore.c	/^int configure_port(int num_queues)$/;"	f	typeref:typename:int
cookie	config/igb/igb.h	/^	unsigned long cookie;$/;"	m	struct:igb_nfc_filter	typeref:typename:unsigned long
copper_tries	config/igb/igb.h	/^	int copper_tries;$/;"	m	struct:igb_adapter	typeref:typename:int
count	config/igb/igb.h	/^	u16 count;			\/* number of desc. in the ring *\/$/;"	m	struct:igb_ring	typeref:typename:u16
count	config/igb/igb.h	/^	u8 count;			\/* total number of rings in vector *\/$/;"	m	struct:igb_ring_container	typeref:typename:u8
count	src/flow.h	/^    long count;$/;"	m	struct:flow	typeref:typename:long
cpu	config/igb/igb.h	/^	int cpu;			\/* CPU for DCA *\/$/;"	m	struct:igb_q_vector	typeref:typename:int
crcerrs	config/igb/e1000_hw.h	/^	u64 crcerrs;$/;"	m	struct:e1000_hw_stats	typeref:typename:u64
create_flow	src/flow.c	/^struct flow *create_flow($/;"	f	typeref:struct:flow *
create_flow_state	src/flow.c	/^struct flow_state *create_flow_state()$/;"	f	typeref:struct:flow_state *
create_interface	src/flow.c	/^struct interface_config *create_interface(int vlan, char *interface_name, char *address_src, cha/;"	f	typeref:struct:interface_config *
create_mbuf_pool	dpdk/cy_func.c	/^struct rte_mempool *create_mbuf_pool(void)$/;"	f	typeref:struct:rte_mempool *
create_mbuf_pool	dpdk/cy_func_multicore.c	/^struct rte_mempool *create_mbuf_pool(int num_queues)$/;"	f	typeref:struct:rte_mempool *
create_schedule_state	src/sche.c	/^struct schedule_state *create_schedule_state(const struct flow_state *state){$/;"	f	typeref:struct:schedule_state *
csum	config/igb/e1000_82575.h	/^					__le16 csum;     \/* Packet Checksum *\/$/;"	m	struct:e1000_adv_rx_desc::__anon265ab8310208::__anon265ab8310308::__anon265ab831050a::__anon265ab8310608	typeref:typename:__le16
csum_err	config/igb/igb.h	/^	u64 csum_err;$/;"	m	struct:igb_rx_queue_stats	typeref:typename:u64
csum_ip	config/igb/e1000_82575.h	/^				} csum_ip;$/;"	m	union:e1000_adv_rx_desc::__anon265ab8310208::__anon265ab8310308::__anon265ab831050a	typeref:struct:e1000_adv_rx_desc::__anon265ab8310208::__anon265ab8310308::__anon265ab831050a::__anon265ab8310608
current_mode	config/igb/e1000_hw.h	/^	enum e1000_fc_mode current_mode; \/* Type of flow control *\/$/;"	m	struct:e1000_fc_info	typeref:enum:e1000_fc_mode
cycle_period	src/sche.h	/^    long cycle_period;$/;"	m	struct:schedule_state	typeref:typename:long
cycle_record	dpdk/cy_timer.c	/^    uint64_t *cycle_record;  \/\/ A list of cycles when packets are sent$/;"	m	struct:pkt_info	typeref:typename:uint64_t *	file:
d_addr	src/dpdk.h	/^    struct rte_ether_addr d_addr; \/**< Destination address. *\/$/;"	m	struct:ether_hdr	typeref:struct:rte_ether_addr
data	dpdk/cy_2p1q.c	/^        char data[10];$/;"	m	struct:main::Message	typeref:typename:char[10]	file:
data	dpdk/cy_base.c	/^        char data[10];$/;"	m	struct:main::Message	typeref:typename:char[10]	file:
data	dpdk/cy_bk.c	/^        char data[10];$/;"	m	struct:main::Message	typeref:typename:char[10]	file:
dc	config/igb/e1000_hw.h	/^	u64 dc;$/;"	m	struct:e1000_hw_stats	typeref:typename:u64
dca_notifier	config/igb/igb_main.c	/^static struct notifier_block dca_notifier = {$/;"	v	typeref:struct:notifier_block	file:
debug	config/igb/igb_main.c	/^static int debug = -1;$/;"	v	typeref:typename:int	file:
delay_usec	config/igb/e1000_hw.h	/^	u16 delay_usec;$/;"	m	struct:e1000_nvm_info	typeref:typename:u16
delta	src/flow.h	/^    long delta;$/;"	m	struct:flow	typeref:typename:long
desc	config/igb/igb.h	/^	void *desc;			\/* descriptor ring memory *\/$/;"	m	struct:igb_ring	typeref:typename:void *
destroy_flow	src/flow.c	/^void destroy_flow(struct flow *flow)$/;"	f	typeref:typename:void
destroy_flow_state	src/flow.c	/^void destroy_flow_state(struct flow_state *flow_state)$/;"	f	typeref:typename:void
destroy_interface	src/flow.c	/^void destroy_interface(struct interface_config *interface)$/;"	f	typeref:typename:void
destroy_schedule_state	src/sche.c	/^void destroy_schedule_state(struct schedule_state *schedule_state){$/;"	f	typeref:typename:void
dev	config/igb/igb.h	/^	struct device *dev;		\/* device pointer for dma mapping *\/$/;"	m	struct:igb_ring	typeref:struct:device *
dev_attr	config/igb/igb.h	/^	struct device_attribute dev_attr;$/;"	m	struct:hwmon_attr	typeref:struct:device_attribute
dev_spec	config/igb/e1000_hw.h	/^	} dev_spec;$/;"	m	struct:e1000_hw	typeref:union:e1000_hw::__anonc1f2b125010a
device_id	config/igb/e1000_hw.h	/^	u16 device_id;$/;"	m	struct:e1000_hw	typeref:typename:u16
dgram_cksum	src/dpdk.h	/^    uint16_t dgram_cksum; \/**< UDP datagram checksum *\/$/;"	m	struct:udp_hdr	typeref:typename:uint16_t
dgram_len	src/dpdk.h	/^    uint16_t dgram_len;   \/**< UDP datagram length *\/$/;"	m	struct:udp_hdr	typeref:typename:uint16_t
die	src/system.c	/^void die(const char *s) { printf("[!] Error: %s\\n", s);}$/;"	f	typeref:typename:void
disable_hw_init_bits	config/igb/e1000_hw.h	/^	bool disable_hw_init_bits;$/;"	m	struct:e1000_mac_info	typeref:typename:bool
disable_polarity_correction	config/igb/e1000_hw.h	/^	bool disable_polarity_correction;$/;"	m	struct:e1000_phy_info	typeref:typename:bool
dma	config/igb/igb.h	/^	dma_addr_t dma;			\/* phys address of the ring *\/$/;"	m	struct:igb_ring	typeref:typename:dma_addr_t
dma	config/igb/igb.h	/^	dma_addr_t dma;$/;"	m	struct:igb_rx_buffer	typeref:typename:dma_addr_t
doosync	config/igb/e1000_hw.h	/^	u64 doosync;$/;"	m	struct:e1000_hw_stats	typeref:typename:u64
drops	config/igb/igb.h	/^	u64 drops;$/;"	m	struct:igb_rx_queue_stats	typeref:typename:u64
dst_addr	config/igb/igb.h	/^	u8 dst_addr[ETH_ALEN];$/;"	m	struct:igb_nfc_input	typeref:typename:u8[]
dst_addr	src/dpdk.h	/^    uint32_t dst_addr;        \/**< destination address *\/$/;"	m	struct:ipv4_hdr	typeref:typename:uint32_t
dst_port	src/dpdk.h	/^    uint16_t dst_port;    \/**< UDP destination port. *\/$/;"	m	struct:udp_hdr	typeref:typename:uint16_t
e1000_1000t_rx_status	config/igb/e1000_hw.h	/^enum e1000_1000t_rx_status {$/;"	g
e1000_1000t_rx_status_not_ok	config/igb/e1000_hw.h	/^	e1000_1000t_rx_status_not_ok = 0,$/;"	e	enum:e1000_1000t_rx_status
e1000_1000t_rx_status_ok	config/igb/e1000_hw.h	/^	e1000_1000t_rx_status_ok,$/;"	e	enum:e1000_1000t_rx_status
e1000_1000t_rx_status_undefined	config/igb/e1000_hw.h	/^	e1000_1000t_rx_status_undefined = 0xFF$/;"	e	enum:e1000_1000t_rx_status
e1000_82575	config/igb/e1000_hw.h	/^	e1000_82575,$/;"	e	enum:e1000_mac_type
e1000_82575_info	config/igb/e1000_82575.c	/^const struct e1000_info e1000_82575_info = {$/;"	v	typeref:typename:const struct e1000_info
e1000_82576	config/igb/e1000_hw.h	/^	e1000_82576,$/;"	e	enum:e1000_mac_type
e1000_82580	config/igb/e1000_hw.h	/^	e1000_82580,$/;"	e	enum:e1000_mac_type
e1000_82580_rxpbs_table	config/igb/e1000_82575.c	/^static const u16 e1000_82580_rxpbs_table[] = {$/;"	v	typeref:typename:const u16[]	file:
e1000_adv_rx_desc	config/igb/e1000_82575.h	/^union e1000_adv_rx_desc {$/;"	u
e1000_adv_tx_context_desc	config/igb/e1000_82575.h	/^struct e1000_adv_tx_context_desc {$/;"	s
e1000_adv_tx_desc	config/igb/e1000_82575.h	/^union e1000_adv_tx_desc {$/;"	u
e1000_base_cx	config/igb/e1000_phy.h	/^	u8 e1000_base_cx:1;$/;"	m	struct:e1000_sfp_flags	typeref:typename:u8:1
e1000_base_lx	config/igb/e1000_phy.h	/^	u8 e1000_base_lx:1;$/;"	m	struct:e1000_sfp_flags	typeref:typename:u8:1
e1000_base_sx	config/igb/e1000_phy.h	/^	u8 e1000_base_sx:1;$/;"	m	struct:e1000_sfp_flags	typeref:typename:u8:1
e1000_base_t	config/igb/e1000_phy.h	/^	u8 e1000_base_t:1;$/;"	m	struct:e1000_sfp_flags	typeref:typename:u8:1
e1000_bus_info	config/igb/e1000_hw.h	/^struct e1000_bus_info {$/;"	s
e1000_bus_speed	config/igb/e1000_hw.h	/^enum e1000_bus_speed {$/;"	g
e1000_bus_speed_100	config/igb/e1000_hw.h	/^	e1000_bus_speed_100,$/;"	e	enum:e1000_bus_speed
e1000_bus_speed_120	config/igb/e1000_hw.h	/^	e1000_bus_speed_120,$/;"	e	enum:e1000_bus_speed
e1000_bus_speed_133	config/igb/e1000_hw.h	/^	e1000_bus_speed_133,$/;"	e	enum:e1000_bus_speed
e1000_bus_speed_2500	config/igb/e1000_hw.h	/^	e1000_bus_speed_2500,$/;"	e	enum:e1000_bus_speed
e1000_bus_speed_33	config/igb/e1000_hw.h	/^	e1000_bus_speed_33,$/;"	e	enum:e1000_bus_speed
e1000_bus_speed_5000	config/igb/e1000_hw.h	/^	e1000_bus_speed_5000,$/;"	e	enum:e1000_bus_speed
e1000_bus_speed_66	config/igb/e1000_hw.h	/^	e1000_bus_speed_66,$/;"	e	enum:e1000_bus_speed
e1000_bus_speed_reserved	config/igb/e1000_hw.h	/^	e1000_bus_speed_reserved$/;"	e	enum:e1000_bus_speed
e1000_bus_speed_unknown	config/igb/e1000_hw.h	/^	e1000_bus_speed_unknown = 0,$/;"	e	enum:e1000_bus_speed
e1000_bus_type	config/igb/e1000_hw.h	/^enum e1000_bus_type {$/;"	g
e1000_bus_type_pci	config/igb/e1000_hw.h	/^	e1000_bus_type_pci,$/;"	e	enum:e1000_bus_type
e1000_bus_type_pci_express	config/igb/e1000_hw.h	/^	e1000_bus_type_pci_express,$/;"	e	enum:e1000_bus_type
e1000_bus_type_pcix	config/igb/e1000_hw.h	/^	e1000_bus_type_pcix,$/;"	e	enum:e1000_bus_type
e1000_bus_type_reserved	config/igb/e1000_hw.h	/^	e1000_bus_type_reserved$/;"	e	enum:e1000_bus_type
e1000_bus_type_unknown	config/igb/e1000_hw.h	/^	e1000_bus_type_unknown = 0,$/;"	e	enum:e1000_bus_type
e1000_bus_width	config/igb/e1000_hw.h	/^enum e1000_bus_width {$/;"	g
e1000_bus_width_32	config/igb/e1000_hw.h	/^	e1000_bus_width_32,$/;"	e	enum:e1000_bus_width
e1000_bus_width_64	config/igb/e1000_hw.h	/^	e1000_bus_width_64,$/;"	e	enum:e1000_bus_width
e1000_bus_width_pcie_x1	config/igb/e1000_hw.h	/^	e1000_bus_width_pcie_x1,$/;"	e	enum:e1000_bus_width
e1000_bus_width_pcie_x2	config/igb/e1000_hw.h	/^	e1000_bus_width_pcie_x2,$/;"	e	enum:e1000_bus_width
e1000_bus_width_pcie_x4	config/igb/e1000_hw.h	/^	e1000_bus_width_pcie_x4 = 4,$/;"	e	enum:e1000_bus_width
e1000_bus_width_pcie_x8	config/igb/e1000_hw.h	/^	e1000_bus_width_pcie_x8 = 8,$/;"	e	enum:e1000_bus_width
e1000_bus_width_reserved	config/igb/e1000_hw.h	/^	e1000_bus_width_reserved$/;"	e	enum:e1000_bus_width
e1000_bus_width_unknown	config/igb/e1000_hw.h	/^	e1000_bus_width_unknown = 0,$/;"	e	enum:e1000_bus_width
e1000_dev_spec_82575	config/igb/e1000_hw.h	/^struct e1000_dev_spec_82575 {$/;"	s
e1000_emc_temp_data	config/igb/e1000_82575.c	/^static const u8 e1000_emc_temp_data[4] = {$/;"	v	typeref:typename:const u8[4]	file:
e1000_emc_therm_limit	config/igb/e1000_82575.c	/^static const u8 e1000_emc_therm_limit[4] = {$/;"	v	typeref:typename:const u8[4]	file:
e1000_fc_default	config/igb/e1000_hw.h	/^	e1000_fc_default = 0xFF$/;"	e	enum:e1000_fc_mode
e1000_fc_full	config/igb/e1000_hw.h	/^	e1000_fc_full,$/;"	e	enum:e1000_fc_mode
e1000_fc_info	config/igb/e1000_hw.h	/^struct e1000_fc_info {$/;"	s
e1000_fc_mode	config/igb/e1000_hw.h	/^enum e1000_fc_mode {$/;"	g
e1000_fc_none	config/igb/e1000_hw.h	/^	e1000_fc_none = 0,$/;"	e	enum:e1000_fc_mode
e1000_fc_rx_pause	config/igb/e1000_hw.h	/^	e1000_fc_rx_pause,$/;"	e	enum:e1000_fc_mode
e1000_fc_tx_pause	config/igb/e1000_hw.h	/^	e1000_fc_tx_pause,$/;"	e	enum:e1000_fc_mode
e1000_fw_version	config/igb/e1000_nvm.h	/^struct e1000_fw_version {$/;"	s
e1000_host_command_header	config/igb/e1000_hw.h	/^struct e1000_host_command_header {$/;"	s
e1000_host_command_info	config/igb/e1000_hw.h	/^struct e1000_host_command_info {$/;"	s
e1000_host_mng_command_header	config/igb/e1000_hw.h	/^struct e1000_host_mng_command_header {$/;"	s
e1000_host_mng_command_info	config/igb/e1000_hw.h	/^struct e1000_host_mng_command_info {$/;"	s
e1000_host_mng_dhcp_cookie	config/igb/e1000_hw.h	/^struct e1000_host_mng_dhcp_cookie {$/;"	s
e1000_hw	config/igb/e1000_hw.h	/^struct e1000_hw {$/;"	s
e1000_hw_stats	config/igb/e1000_hw.h	/^struct e1000_hw_stats {$/;"	s
e1000_i210	config/igb/e1000_hw.h	/^	e1000_i210,$/;"	e	enum:e1000_mac_type
e1000_i211	config/igb/e1000_hw.h	/^	e1000_i211,$/;"	e	enum:e1000_mac_type
e1000_i350	config/igb/e1000_hw.h	/^	e1000_i350,$/;"	e	enum:e1000_mac_type
e1000_i354	config/igb/e1000_hw.h	/^	e1000_i354,$/;"	e	enum:e1000_mac_type
e1000_igp_2_cable_length_table	config/igb/e1000_phy.c	/^static const u16 e1000_igp_2_cable_length_table[] = {$/;"	v	typeref:typename:const u16[]	file:
e1000_info	config/igb/e1000_hw.h	/^struct e1000_info {$/;"	s
e1000_m88_cable_length_table	config/igb/e1000_phy.c	/^static const u16 e1000_m88_cable_length_table[] = {$/;"	v	typeref:typename:const u16[]	file:
e1000_mac_info	config/igb/e1000_hw.h	/^struct e1000_mac_info {$/;"	s
e1000_mac_operations	config/igb/e1000_hw.h	/^struct e1000_mac_operations {$/;"	s
e1000_mac_ops_82575	config/igb/e1000_82575.c	/^static struct e1000_mac_operations e1000_mac_ops_82575 = {$/;"	v	typeref:struct:e1000_mac_operations	file:
e1000_mac_type	config/igb/e1000_hw.h	/^enum e1000_mac_type {$/;"	g
e1000_mbx_info	config/igb/e1000_hw.h	/^struct e1000_mbx_info {$/;"	s
e1000_mbx_operations	config/igb/e1000_hw.h	/^struct e1000_mbx_operations {$/;"	s
e1000_mbx_stats	config/igb/e1000_hw.h	/^struct e1000_mbx_stats {$/;"	s
e1000_media_type	config/igb/e1000_hw.h	/^enum e1000_media_type {$/;"	g
e1000_media_type_copper	config/igb/e1000_hw.h	/^	e1000_media_type_copper = 1,$/;"	e	enum:e1000_media_type
e1000_media_type_fiber	config/igb/e1000_hw.h	/^	e1000_media_type_fiber = 2,$/;"	e	enum:e1000_media_type
e1000_media_type_internal_serdes	config/igb/e1000_hw.h	/^	e1000_media_type_internal_serdes = 3,$/;"	e	enum:e1000_media_type
e1000_media_type_unknown	config/igb/e1000_hw.h	/^	e1000_media_type_unknown = 0,$/;"	e	enum:e1000_media_type
e1000_mng_mode	config/igb/e1000_mac.h	/^enum e1000_mng_mode {$/;"	g
e1000_mng_mode_asf	config/igb/e1000_mac.h	/^	e1000_mng_mode_asf,$/;"	e	enum:e1000_mng_mode
e1000_mng_mode_host_if_only	config/igb/e1000_mac.h	/^	e1000_mng_mode_host_if_only$/;"	e	enum:e1000_mng_mode
e1000_mng_mode_ipmi	config/igb/e1000_mac.h	/^	e1000_mng_mode_ipmi,$/;"	e	enum:e1000_mng_mode
e1000_mng_mode_none	config/igb/e1000_mac.h	/^	e1000_mng_mode_none = 0,$/;"	e	enum:e1000_mng_mode
e1000_mng_mode_pt	config/igb/e1000_mac.h	/^	e1000_mng_mode_pt,$/;"	e	enum:e1000_mng_mode
e1000_ms_auto	config/igb/e1000_phy.h	/^	e1000_ms_auto$/;"	e	enum:e1000_ms_type
e1000_ms_force_master	config/igb/e1000_phy.h	/^	e1000_ms_force_master,$/;"	e	enum:e1000_ms_type
e1000_ms_force_slave	config/igb/e1000_phy.h	/^	e1000_ms_force_slave,$/;"	e	enum:e1000_ms_type
e1000_ms_hw_default	config/igb/e1000_phy.h	/^	e1000_ms_hw_default = 0,$/;"	e	enum:e1000_ms_type
e1000_ms_type	config/igb/e1000_phy.h	/^enum e1000_ms_type {$/;"	g
e1000_num_macs	config/igb/e1000_hw.h	/^	e1000_num_macs  \/* List is 1-based, so subtract 1 for true count. *\/$/;"	e	enum:e1000_mac_type
e1000_num_media_types	config/igb/e1000_hw.h	/^	e1000_num_media_types$/;"	e	enum:e1000_media_type
e1000_nvm_eeprom_spi	config/igb/e1000_hw.h	/^	e1000_nvm_eeprom_spi,$/;"	e	enum:e1000_nvm_type
e1000_nvm_flash_hw	config/igb/e1000_hw.h	/^	e1000_nvm_flash_hw,$/;"	e	enum:e1000_nvm_type
e1000_nvm_flash_sw	config/igb/e1000_hw.h	/^	e1000_nvm_flash_sw$/;"	e	enum:e1000_nvm_type
e1000_nvm_info	config/igb/e1000_hw.h	/^struct e1000_nvm_info {$/;"	s
e1000_nvm_invm	config/igb/e1000_hw.h	/^	e1000_nvm_invm,$/;"	e	enum:e1000_nvm_type
e1000_nvm_none	config/igb/e1000_hw.h	/^	e1000_nvm_none,$/;"	e	enum:e1000_nvm_type
e1000_nvm_operations	config/igb/e1000_hw.h	/^struct e1000_nvm_operations {$/;"	s
e1000_nvm_ops_82575	config/igb/e1000_82575.c	/^static struct e1000_nvm_operations e1000_nvm_ops_82575 = {$/;"	v	typeref:struct:e1000_nvm_operations	file:
e1000_nvm_override	config/igb/e1000_hw.h	/^enum e1000_nvm_override {$/;"	g
e1000_nvm_override_none	config/igb/e1000_hw.h	/^	e1000_nvm_override_none = 0,$/;"	e	enum:e1000_nvm_override
e1000_nvm_override_spi_large	config/igb/e1000_hw.h	/^	e1000_nvm_override_spi_large,$/;"	e	enum:e1000_nvm_override
e1000_nvm_override_spi_small	config/igb/e1000_hw.h	/^	e1000_nvm_override_spi_small,$/;"	e	enum:e1000_nvm_override
e1000_nvm_type	config/igb/e1000_hw.h	/^enum e1000_nvm_type {$/;"	g
e1000_nvm_unknown	config/igb/e1000_hw.h	/^	e1000_nvm_unknown = 0,$/;"	e	enum:e1000_nvm_type
e1000_phy_82580	config/igb/e1000_hw.h	/^	e1000_phy_82580,$/;"	e	enum:e1000_phy_type
e1000_phy_bcm54616	config/igb/e1000_hw.h	/^	e1000_phy_bcm54616,$/;"	e	enum:e1000_phy_type
e1000_phy_gg82563	config/igb/e1000_hw.h	/^	e1000_phy_gg82563,$/;"	e	enum:e1000_phy_type
e1000_phy_i210	config/igb/e1000_hw.h	/^	e1000_phy_i210,$/;"	e	enum:e1000_phy_type
e1000_phy_ife	config/igb/e1000_hw.h	/^	e1000_phy_ife,$/;"	e	enum:e1000_phy_type
e1000_phy_igp	config/igb/e1000_hw.h	/^	e1000_phy_igp,$/;"	e	enum:e1000_phy_type
e1000_phy_igp_2	config/igb/e1000_hw.h	/^	e1000_phy_igp_2,$/;"	e	enum:e1000_phy_type
e1000_phy_igp_3	config/igb/e1000_hw.h	/^	e1000_phy_igp_3,$/;"	e	enum:e1000_phy_type
e1000_phy_info	config/igb/e1000_hw.h	/^struct e1000_phy_info {$/;"	s
e1000_phy_m88	config/igb/e1000_hw.h	/^	e1000_phy_m88,$/;"	e	enum:e1000_phy_type
e1000_phy_none	config/igb/e1000_hw.h	/^	e1000_phy_none,$/;"	e	enum:e1000_phy_type
e1000_phy_operations	config/igb/e1000_hw.h	/^struct e1000_phy_operations {$/;"	s
e1000_phy_ops_82575	config/igb/e1000_82575.c	/^static const struct e1000_phy_operations e1000_phy_ops_82575 = {$/;"	v	typeref:typename:const struct e1000_phy_operations	file:
e1000_phy_type	config/igb/e1000_hw.h	/^enum e1000_phy_type {$/;"	g
e1000_phy_unknown	config/igb/e1000_hw.h	/^	e1000_phy_unknown = 0,$/;"	e	enum:e1000_phy_type
e1000_rev_polarity	config/igb/e1000_hw.h	/^enum e1000_rev_polarity {$/;"	g
e1000_rev_polarity_normal	config/igb/e1000_hw.h	/^	e1000_rev_polarity_normal = 0,$/;"	e	enum:e1000_rev_polarity
e1000_rev_polarity_reversed	config/igb/e1000_hw.h	/^	e1000_rev_polarity_reversed,$/;"	e	enum:e1000_rev_polarity
e1000_rev_polarity_undefined	config/igb/e1000_hw.h	/^	e1000_rev_polarity_undefined = 0xFF$/;"	e	enum:e1000_rev_polarity
e1000_ring_flags_t	config/igb/igb.h	/^enum e1000_ring_flags_t {$/;"	g
e1000_sfp_flags	config/igb/e1000_phy.h	/^struct e1000_sfp_flags {$/;"	s
e1000_smart_speed	config/igb/e1000_phy.h	/^enum e1000_smart_speed {$/;"	g
e1000_smart_speed_default	config/igb/e1000_phy.h	/^	e1000_smart_speed_default = 0,$/;"	e	enum:e1000_smart_speed
e1000_smart_speed_off	config/igb/e1000_phy.h	/^	e1000_smart_speed_off$/;"	e	enum:e1000_smart_speed
e1000_smart_speed_on	config/igb/e1000_phy.h	/^	e1000_smart_speed_on,$/;"	e	enum:e1000_smart_speed
e1000_state_t	config/igb/igb.h	/^enum e1000_state_t {$/;"	g
e1000_stop_nvm	config/igb/e1000_nvm.c	/^static void e1000_stop_nvm(struct e1000_hw *hw)$/;"	f	typeref:typename:void	file:
e1000_thermal_diode_data	config/igb/e1000_hw.h	/^struct e1000_thermal_diode_data {$/;"	s
e1000_thermal_sensor_data	config/igb/e1000_hw.h	/^struct e1000_thermal_sensor_data {$/;"	s
e1000_undefined	config/igb/e1000_hw.h	/^	e1000_undefined = 0,$/;"	e	enum:e1000_mac_type
e100_base_fx	config/igb/e1000_phy.h	/^	u8 e100_base_fx:1;$/;"	m	struct:e1000_sfp_flags	typeref:typename:u8:1
e100_base_lx	config/igb/e1000_phy.h	/^	u8 e100_base_lx:1;$/;"	m	struct:e1000_sfp_flags	typeref:typename:u8:1
e10_base_bx10	config/igb/e1000_phy.h	/^	u8 e10_base_bx10:1;$/;"	m	struct:e1000_sfp_flags	typeref:typename:u8:1
e10_base_px	config/igb/e1000_phy.h	/^	u8 e10_base_px:1;$/;"	m	struct:e1000_sfp_flags	typeref:typename:u8:1
ecol	config/igb/e1000_hw.h	/^	u64 ecol;$/;"	m	struct:e1000_hw_stats	typeref:typename:u64
eee_advert	config/igb/igb.h	/^	u16 eee_advert;$/;"	m	struct:igb_adapter	typeref:typename:u16
eee_disable	config/igb/e1000_hw.h	/^	bool eee_disable;$/;"	m	struct:e1000_dev_spec_82575	typeref:typename:bool
eep_build	config/igb/e1000_nvm.h	/^	u16 eep_build;$/;"	m	struct:e1000_fw_version	typeref:typename:u16
eep_major	config/igb/e1000_nvm.h	/^	u16 eep_major;$/;"	m	struct:e1000_fw_version	typeref:typename:u16
eep_minor	config/igb/e1000_nvm.h	/^	u16 eep_minor;$/;"	m	struct:e1000_fw_version	typeref:typename:u16
ei	config/igb/igb.h	/^	struct e1000_info ei;$/;"	m	struct:igb_adapter	typeref:struct:e1000_info
eims_enable_mask	config/igb/igb.h	/^	u32 eims_enable_mask;$/;"	m	struct:igb_adapter	typeref:typename:u32
eims_other	config/igb/igb.h	/^	u32 eims_other;$/;"	m	struct:igb_adapter	typeref:typename:u32
eims_value	config/igb/igb.h	/^	u32 eims_value;			\/* EIMS mask value *\/$/;"	m	struct:igb_q_vector	typeref:typename:u32
en_mng_pt	config/igb/igb.h	/^	u32 en_mng_pt;$/;"	m	struct:igb_adapter	typeref:typename:u32
enable_fqtss	config/igb/igb_main.c	/^static void enable_fqtss(struct igb_adapter *adapter, bool enable)$/;"	f	typeref:typename:void	file:
enable_nic_hwtimestamping	src/udp.c	/^int enable_nic_hwtimestamping(int fd, const char *dev_name)$/;"	f	typeref:typename:int
enable_timesync	dpdk/cy_func.c	/^int enable_timesync(void)$/;"	f	typeref:typename:int
enable_timesync	dpdk/cy_func_multicore.c	/^int enable_timesync(void)$/;"	f	typeref:typename:int
eth_flags	config/igb/e1000_hw.h	/^	struct e1000_sfp_flags eth_flags;$/;"	m	struct:e1000_dev_spec_82575	typeref:struct:e1000_sfp_flags
ether_hdr	src/dpdk.h	/^struct ether_hdr$/;"	s
ether_type	src/dpdk.h	/^    uint16_t ether_type;          \/**< Frame type. *\/$/;"	m	struct:ether_hdr	typeref:typename:uint16_t
etrack_id	config/igb/e1000_nvm.h	/^	u32 etrack_id;$/;"	m	struct:e1000_fw_version	typeref:typename:u32
ets	config/igb/igb.h	/^	bool ets;$/;"	m	struct:igb_adapter	typeref:typename:bool
etype	config/igb/igb.h	/^	__be16 etype;$/;"	m	struct:igb_nfc_input	typeref:typename:__be16
etype_bitmap	config/igb/igb.h	/^	bool etype_bitmap[MAX_ETYPE_FILTER];$/;"	m	struct:igb_adapter	typeref:typename:bool[]
etype_reg_index	config/igb/igb.h	/^	u16 etype_reg_index;$/;"	m	struct:igb_nfc_filter	typeref:typename:u16
fc	config/igb/e1000_hw.h	/^	struct e1000_fc_info   fc;$/;"	m	struct:e1000_hw	typeref:struct:e1000_fc_info
fc_autoneg	config/igb/igb.h	/^	bool fc_autoneg;$/;"	m	struct:igb_adapter	typeref:typename:bool
fcruc	config/igb/e1000_hw.h	/^	u64 fcruc;$/;"	m	struct:e1000_hw_stats	typeref:typename:u64
fd	src/flow.h	/^    int fd;$/;"	m	struct:interface_config	typeref:typename:int
filter	config/igb/igb.h	/^	struct igb_nfc_input filter;$/;"	m	struct:igb_nfc_filter	typeref:struct:igb_nfc_input
flags	config/igb/igb.h	/^	u32 flags;$/;"	m	struct:vf_data_storage	typeref:typename:u32
flags	config/igb/igb.h	/^	unsigned int flags;$/;"	m	struct:igb_adapter	typeref:typename:unsigned int
flags	config/igb/igb.h	/^	unsigned long flags;		\/* ring specific flags *\/$/;"	m	struct:igb_ring	typeref:typename:unsigned long
flash_address	config/igb/e1000_hw.h	/^	u8 __iomem *flash_address;$/;"	m	struct:e1000_hw	typeref:typename:u8 __iomem *
flash_bank_size	config/igb/e1000_hw.h	/^	u32 flash_bank_size;$/;"	m	struct:e1000_nvm_info	typeref:typename:u32
flash_base_addr	config/igb/e1000_hw.h	/^	u32 flash_base_addr;$/;"	m	struct:e1000_nvm_info	typeref:typename:u32
flow	src/flow.h	/^struct flow$/;"	s
flow.o	src/makefile	/^flow.o: flow.c flow.h system.h$/;"	t
flow_state	src/flow.h	/^struct flow_state$/;"	s
flows	src/flow.h	/^    struct flow *flows[MAX_NUM_FLOWS];$/;"	m	struct:flow_state	typeref:struct:flow * []
force_speed_duplex	config/igb/e1000_hw.h	/^	s32 (*force_speed_duplex)(struct e1000_hw *);$/;"	m	struct:e1000_phy_operations	typeref:typename:s32 (*)(struct e1000_hw *)
forced_speed_duplex	config/igb/e1000_hw.h	/^	u8  forced_speed_duplex;$/;"	m	struct:e1000_mac_info	typeref:typename:u8
fragment_offset	src/dpdk.h	/^    uint16_t fragment_offset; \/**< fragmentation offset *\/$/;"	m	struct:ipv4_hdr	typeref:typename:uint16_t
free	config/igb/igb.h	/^	bool free;$/;"	m	struct:vf_mac_filter	typeref:typename:bool
func	config/igb/e1000_hw.h	/^	u16 func;$/;"	m	struct:e1000_bus_info	typeref:typename:u16
fw_version	config/igb/igb.h	/^	char fw_version[32];$/;"	m	struct:igb_adapter	typeref:typename:char[32]
gcd	src/sche.c	/^long gcd(long a, long b){$/;"	f	typeref:typename:long
get_cable_length	config/igb/e1000_hw.h	/^	s32 (*get_cable_length)(struct e1000_hw *);$/;"	m	struct:e1000_phy_operations	typeref:typename:s32 (*)(struct e1000_hw *)
get_cfg_done	config/igb/e1000_hw.h	/^	s32 (*get_cfg_done)(struct e1000_hw *hw);$/;"	m	struct:e1000_phy_operations	typeref:typename:s32 (*)(struct e1000_hw * hw)
get_invariants	config/igb/e1000_hw.h	/^	s32 (*get_invariants)(struct e1000_hw *);$/;"	m	struct:e1000_info	typeref:typename:s32 (*)(struct e1000_hw *)
get_link_status	config/igb/e1000_hw.h	/^	bool get_link_status;$/;"	m	struct:e1000_mac_info	typeref:typename:bool
get_phy_info	config/igb/e1000_hw.h	/^	s32 (*get_phy_info)(struct e1000_hw *);$/;"	m	struct:e1000_phy_operations	typeref:typename:s32 (*)(struct e1000_hw *)
get_speed_and_duplex	config/igb/e1000_hw.h	/^	s32 (*get_speed_and_duplex)(struct e1000_hw *, u16 *, u16 *);$/;"	m	struct:e1000_mac_operations	typeref:typename:s32 (*)(struct e1000_hw *,u16 *,u16 *)
get_thermal_sensor_data	config/igb/e1000_hw.h	/^	s32 (*get_thermal_sensor_data)(struct e1000_hw *);$/;"	m	struct:e1000_mac_operations	typeref:typename:s32 (*)(struct e1000_hw *)
global_device_reset	config/igb/e1000_hw.h	/^	bool global_device_reset;$/;"	m	struct:e1000_dev_spec_82575	typeref:typename:bool
gorc	config/igb/e1000_hw.h	/^	u64 gorc;$/;"	m	struct:e1000_hw_stats	typeref:typename:u64
gotc	config/igb/e1000_hw.h	/^	u64 gotc;$/;"	m	struct:e1000_hw_stats	typeref:typename:u64
gprc	config/igb/e1000_hw.h	/^	u64 gprc;$/;"	m	struct:e1000_hw_stats	typeref:typename:u64
gptc	config/igb/e1000_hw.h	/^	u64 gptc;$/;"	m	struct:e1000_hw_stats	typeref:typename:u64
group	config/igb/igb.h	/^	struct attribute_group group;$/;"	m	struct:hwmon_buff	typeref:struct:attribute_group
groups	config/igb/igb.h	/^	const struct attribute_group *groups[2];$/;"	m	struct:hwmon_buff	typeref:typename:const struct attribute_group * [2]
gso_segs	config/igb/igb.h	/^	u16 gso_segs;$/;"	m	struct:igb_tx_buffer	typeref:typename:u16
hdr	config/igb/igb_main.c	/^		unsigned char *hdr;$/;"	m	union:igb_tso::__anon3998ccb2010a	typeref:typename:unsigned char *	file:
hdr	config/igb/igb_main.c	/^		unsigned char *hdr;$/;"	m	union:igb_tso::__anon3998ccb2020a	typeref:typename:unsigned char *	file:
hdr_addr	config/igb/e1000_82575.h	/^		__le64 hdr_addr;             \/* Header buffer address *\/$/;"	m	struct:e1000_adv_rx_desc::__anon265ab8310108	typeref:typename:__le64
hdr_checksum	src/dpdk.h	/^    uint16_t hdr_checksum;    \/**< header checksum *\/$/;"	m	struct:ipv4_hdr	typeref:typename:uint16_t
hdr_info	config/igb/e1000_82575.h	/^				__le16 hdr_info;   \/* Split Head, buf len *\/$/;"	m	struct:e1000_adv_rx_desc::__anon265ab8310208::__anon265ab8310308::__anon265ab8310408	typeref:typename:__le16
hgorc	config/igb/e1000_hw.h	/^	u64 hgorc;$/;"	m	struct:e1000_hw_stats	typeref:typename:u64
hgotc	config/igb/e1000_hw.h	/^	u64 hgotc;$/;"	m	struct:e1000_hw_stats	typeref:typename:u64
hgptc	config/igb/e1000_hw.h	/^	u64 hgptc;$/;"	m	struct:e1000_hw_stats	typeref:typename:u64
hi_dword	config/igb/e1000_82575.h	/^			} hi_dword;$/;"	m	struct:e1000_adv_rx_desc::__anon265ab8310208::__anon265ab8310308	typeref:union:e1000_adv_rx_desc::__anon265ab8310208::__anon265ab8310308::__anon265ab831050a
hicredit	config/igb/igb.h	/^	s32 hicredit;			\/* hiCredit in bytes *\/$/;"	m	struct:igb_ring	typeref:typename:s32
high_water	config/igb/e1000_hw.h	/^	u32 high_water;     \/* Flow control high-water mark *\/$/;"	m	struct:e1000_fc_info	typeref:typename:u32
hrmpc	config/igb/e1000_hw.h	/^	u64 hrmpc;$/;"	m	struct:e1000_hw_stats	typeref:typename:u64
htcbdpc	config/igb/e1000_hw.h	/^	u64 htcbdpc;$/;"	m	struct:e1000_hw_stats	typeref:typename:u64
htdpmc	config/igb/e1000_hw.h	/^	u64 htdpmc;$/;"	m	struct:e1000_hw_stats	typeref:typename:u64
hw	config/igb/igb.h	/^	struct e1000_hw *hw;$/;"	m	struct:hwmon_attr	typeref:struct:e1000_hw *
hw	config/igb/igb.h	/^	struct e1000_hw hw;$/;"	m	struct:igb_adapter	typeref:struct:e1000_hw
hw_addr	config/igb/e1000_hw.h	/^	u8 __iomem *hw_addr;$/;"	m	struct:e1000_hw	typeref:typename:u8 __iomem *
hw_dbg	config/igb/e1000_hw.h	/^#define hw_dbg(/;"	d
hw_timestamps	dpdk/cy_func_multicore.c	/^    uint64_t *hw_timestamps;$/;"	m	struct:tx_loop_args	typeref:typename:uint64_t *	file:
hw_timestamps	dpdk/cy_timer.c	/^    uint64_t *hw_timestamps; \/\/ A list of hardware timestamps when packets are sent$/;"	m	struct:pkt_info	typeref:typename:uint64_t *	file:
hwmon_attr	config/igb/igb.h	/^struct hwmon_attr {$/;"	s
hwmon_buff	config/igb/igb.h	/^struct hwmon_buff {$/;"	s
hwmon_list	config/igb/igb.h	/^	struct hwmon_attr hwmon_list[E1000_MAX_SENSORS * 4];$/;"	m	struct:hwmon_buff	typeref:struct:hwmon_attr[]
i2c_adap	config/igb/igb.h	/^	struct i2c_adapter i2c_adap;$/;"	m	struct:igb_adapter	typeref:struct:i2c_adapter
i2c_algo	config/igb/igb.h	/^	struct i2c_algo_bit_data i2c_algo;$/;"	m	struct:igb_adapter	typeref:struct:i2c_algo_bit_data
i2c_client	config/igb/igb.h	/^	struct i2c_client *i2c_client;$/;"	m	struct:igb_adapter	typeref:struct:i2c_client *
i350_sensor_info	config/igb/igb_hwmon.c	/^static struct i2c_board_info i350_sensor_info = {$/;"	v	typeref:struct:i2c_board_info	file:
iac	config/igb/e1000_hw.h	/^	u64 iac;$/;"	m	struct:e1000_hw_stats	typeref:typename:u64
icrxatc	config/igb/e1000_hw.h	/^	u64 icrxatc;$/;"	m	struct:e1000_hw_stats	typeref:typename:u64
icrxdmtc	config/igb/e1000_hw.h	/^	u64 icrxdmtc;$/;"	m	struct:e1000_hw_stats	typeref:typename:u64
icrxoc	config/igb/e1000_hw.h	/^	u64 icrxoc;$/;"	m	struct:e1000_hw_stats	typeref:typename:u64
icrxptc	config/igb/e1000_hw.h	/^	u64 icrxptc;$/;"	m	struct:e1000_hw_stats	typeref:typename:u64
ictxatc	config/igb/e1000_hw.h	/^	u64 ictxatc;$/;"	m	struct:e1000_hw_stats	typeref:typename:u64
ictxptc	config/igb/e1000_hw.h	/^	u64 ictxptc;$/;"	m	struct:e1000_hw_stats	typeref:typename:u64
ictxqec	config/igb/e1000_hw.h	/^	u64 ictxqec;$/;"	m	struct:e1000_hw_stats	typeref:typename:u64
ictxqmtc	config/igb/e1000_hw.h	/^	u64 ictxqmtc;$/;"	m	struct:e1000_hw_stats	typeref:typename:u64
id	config/igb/e1000_hw.h	/^	u32 id;$/;"	m	struct:e1000_phy_info	typeref:typename:u32
idleslope	config/igb/igb.h	/^	s32 idleslope;			\/* idleSlope in kbps *\/$/;"	m	struct:igb_ring	typeref:typename:s32
ifs_params_forced	config/igb/e1000_hw.h	/^	bool ifs_params_forced;$/;"	m	struct:e1000_mac_info	typeref:typename:bool
igb-objs	config/igb/Makefile	/^igb-objs := igb_main.o igb_ethtool.o e1000_82575.o \\$/;"	m
igb_acquire_nvm	config/igb/e1000_nvm.c	/^s32 igb_acquire_nvm(struct e1000_hw *hw)$/;"	f	typeref:typename:s32
igb_acquire_nvm_82575	config/igb/e1000_82575.c	/^static s32 igb_acquire_nvm_82575(struct e1000_hw *hw)$/;"	f	typeref:typename:s32	file:
igb_acquire_nvm_i210	config/igb/e1000_i210.c	/^static s32 igb_acquire_nvm_i210(struct e1000_hw *hw)$/;"	f	typeref:typename:s32	file:
igb_acquire_phy_82575	config/igb/e1000_82575.c	/^static s32 igb_acquire_phy_82575(struct e1000_hw *hw)$/;"	f	typeref:typename:s32	file:
igb_acquire_swfw_sync_82575	config/igb/e1000_82575.c	/^static s32 igb_acquire_swfw_sync_82575(struct e1000_hw *hw, u16 mask)$/;"	f	typeref:typename:s32	file:
igb_acquire_swfw_sync_i210	config/igb/e1000_i210.c	/^s32 igb_acquire_swfw_sync_i210(struct e1000_hw *hw, u16 mask)$/;"	f	typeref:typename:s32
igb_adapter	config/igb/igb.h	/^struct igb_adapter {$/;"	s
igb_add_ethtool_nfc_entry	config/igb/igb_ethtool.c	/^static int igb_add_ethtool_nfc_entry(struct igb_adapter *adapter,$/;"	f	typeref:typename:int	file:
igb_add_filter	config/igb/igb_ethtool.c	/^int igb_add_filter(struct igb_adapter *adapter, struct igb_nfc_filter *input)$/;"	f	typeref:typename:int
igb_add_hwmon_attr	config/igb/igb_hwmon.c	/^static int igb_add_hwmon_attr(struct igb_adapter *adapter,$/;"	f	typeref:typename:int	file:
igb_add_mac_filter	config/igb/igb_main.c	/^static int igb_add_mac_filter(struct igb_adapter *adapter, const u8 *addr,$/;"	f	typeref:typename:int	file:
igb_add_mac_filter_flags	config/igb/igb_main.c	/^static int igb_add_mac_filter_flags(struct igb_adapter *adapter,$/;"	f	typeref:typename:int	file:
igb_add_mac_steering_filter	config/igb/igb_main.c	/^int igb_add_mac_steering_filter(struct igb_adapter *adapter,$/;"	f	typeref:typename:int
igb_add_ring	config/igb/igb_main.c	/^static void igb_add_ring(struct igb_ring *ring,$/;"	f	typeref:typename:void	file:
igb_add_rx_frag	config/igb/igb_main.c	/^static void igb_add_rx_frag(struct igb_ring *rx_ring,$/;"	f	typeref:typename:void	file:
igb_alloc_mapped_page	config/igb/igb_main.c	/^static bool igb_alloc_mapped_page(struct igb_ring *rx_ring,$/;"	f	typeref:typename:bool	file:
igb_alloc_q_vector	config/igb/igb_main.c	/^static int igb_alloc_q_vector(struct igb_adapter *adapter,$/;"	f	typeref:typename:int	file:
igb_alloc_q_vectors	config/igb/igb_main.c	/^static int igb_alloc_q_vectors(struct igb_adapter *adapter)$/;"	f	typeref:typename:int	file:
igb_alloc_rx_buffers	config/igb/igb_main.c	/^void igb_alloc_rx_buffers(struct igb_ring *rx_ring, u16 cleaned_count)$/;"	f	typeref:typename:void
igb_assign_vector	config/igb/igb_main.c	/^static void igb_assign_vector(struct igb_q_vector *q_vector, int msix_vector)$/;"	f	typeref:typename:void	file:
igb_available_rars	config/igb/igb_main.c	/^static int igb_available_rars(struct igb_adapter *adapter, u8 queue)$/;"	f	typeref:typename:int	file:
igb_blink_led	config/igb/e1000_mac.c	/^s32 igb_blink_led(struct e1000_hw *hw)$/;"	f	typeref:typename:s32
igb_boards	config/igb/igb.h	/^enum igb_boards {$/;"	g
igb_build_skb	config/igb/igb_main.c	/^static struct sk_buff *igb_build_skb(struct igb_ring *rx_ring,$/;"	f	typeref:struct:sk_buff *	file:
igb_cache_ring_register	config/igb/igb_main.c	/^static void igb_cache_ring_register(struct igb_adapter *adapter)$/;"	f	typeref:typename:void	file:
igb_can_reuse_rx_page	config/igb/igb_main.c	/^static bool igb_can_reuse_rx_page(struct igb_rx_buffer *rx_buffer,$/;"	f	typeref:typename:bool	file:
igb_change_mtu	config/igb/igb_main.c	/^static int igb_change_mtu(struct net_device *netdev, int new_mtu)$/;"	f	typeref:typename:int	file:
igb_check_alt_mac_addr	config/igb/e1000_mac.c	/^s32 igb_check_alt_mac_addr(struct e1000_hw *hw)$/;"	f	typeref:typename:s32
igb_check_downshift	config/igb/e1000_phy.c	/^s32 igb_check_downshift(struct e1000_hw *hw)$/;"	f	typeref:typename:s32
igb_check_for_ack	config/igb/e1000_mbx.c	/^s32 igb_check_for_ack(struct e1000_hw *hw, u16 mbx_id)$/;"	f	typeref:typename:s32
igb_check_for_ack_pf	config/igb/e1000_mbx.c	/^static s32 igb_check_for_ack_pf(struct e1000_hw *hw, u16 vf_number)$/;"	f	typeref:typename:s32	file:
igb_check_for_bit_pf	config/igb/e1000_mbx.c	/^static s32 igb_check_for_bit_pf(struct e1000_hw *hw, u32 mask)$/;"	f	typeref:typename:s32	file:
igb_check_for_copper_link	config/igb/e1000_mac.c	/^s32 igb_check_for_copper_link(struct e1000_hw *hw)$/;"	f	typeref:typename:s32
igb_check_for_link_82575	config/igb/e1000_82575.c	/^static s32 igb_check_for_link_82575(struct e1000_hw *hw)$/;"	f	typeref:typename:s32	file:
igb_check_for_link_media_swap	config/igb/e1000_82575.c	/^static s32 igb_check_for_link_media_swap(struct e1000_hw *hw)$/;"	f	typeref:typename:s32	file:
igb_check_for_msg	config/igb/e1000_mbx.c	/^s32 igb_check_for_msg(struct e1000_hw *hw, u16 mbx_id)$/;"	f	typeref:typename:s32
igb_check_for_msg_pf	config/igb/e1000_mbx.c	/^static s32 igb_check_for_msg_pf(struct e1000_hw *hw, u16 vf_number)$/;"	f	typeref:typename:s32	file:
igb_check_for_rst	config/igb/e1000_mbx.c	/^s32 igb_check_for_rst(struct e1000_hw *hw, u16 mbx_id)$/;"	f	typeref:typename:s32
igb_check_for_rst_pf	config/igb/e1000_mbx.c	/^static s32 igb_check_for_rst_pf(struct e1000_hw *hw, u16 vf_number)$/;"	f	typeref:typename:s32	file:
igb_check_lbtest_frame	config/igb/igb_ethtool.c	/^static int igb_check_lbtest_frame(struct igb_rx_buffer *rx_buffer,$/;"	f	typeref:typename:int	file:
igb_check_lvmmc	config/igb/igb_main.c	/^static void igb_check_lvmmc(struct igb_adapter *adapter)$/;"	f	typeref:typename:void	file:
igb_check_polarity_82580	config/igb/e1000_phy.c	/^static s32 igb_check_polarity_82580(struct e1000_hw *hw)$/;"	f	typeref:typename:s32	file:
igb_check_polarity_igp	config/igb/e1000_phy.c	/^static s32 igb_check_polarity_igp(struct e1000_hw *hw)$/;"	f	typeref:typename:s32	file:
igb_check_polarity_m88	config/igb/e1000_phy.c	/^s32 igb_check_polarity_m88(struct e1000_hw *hw)$/;"	f	typeref:typename:s32
igb_check_reset_block	config/igb/e1000_phy.c	/^s32 igb_check_reset_block(struct e1000_hw *hw)$/;"	f	typeref:typename:s32
igb_check_swap_media	config/igb/igb_main.c	/^static void igb_check_swap_media(struct igb_adapter *adapter)$/;"	f	typeref:typename:void	file:
igb_check_vf_rate_limit	config/igb/igb_main.c	/^static void igb_check_vf_rate_limit(struct igb_adapter *adapter)$/;"	f	typeref:typename:void	file:
igb_check_wvbr	config/igb/igb_main.c	/^static void igb_check_wvbr(struct igb_adapter *adapter)$/;"	f	typeref:typename:void	file:
igb_clean_all_rx_rings	config/igb/igb_main.c	/^static void igb_clean_all_rx_rings(struct igb_adapter *adapter)$/;"	f	typeref:typename:void	file:
igb_clean_all_tx_rings	config/igb/igb_main.c	/^static void igb_clean_all_tx_rings(struct igb_adapter *adapter)$/;"	f	typeref:typename:void	file:
igb_clean_rx_irq	config/igb/igb_main.c	/^static int igb_clean_rx_irq(struct igb_q_vector *q_vector, const int budget)$/;"	f	typeref:typename:int	file:
igb_clean_rx_ring	config/igb/igb_main.c	/^static void igb_clean_rx_ring(struct igb_ring *rx_ring)$/;"	f	typeref:typename:void	file:
igb_clean_test_rings	config/igb/igb_ethtool.c	/^static int igb_clean_test_rings(struct igb_ring *rx_ring,$/;"	f	typeref:typename:int	file:
igb_clean_tx_irq	config/igb/igb_main.c	/^static bool igb_clean_tx_irq(struct igb_q_vector *q_vector, int napi_budget)$/;"	f	typeref:typename:bool	file:
igb_clean_tx_ring	config/igb/igb_main.c	/^static void igb_clean_tx_ring(struct igb_ring *tx_ring)$/;"	f	typeref:typename:void	file:
igb_cleanup_headers	config/igb/igb_main.c	/^static bool igb_cleanup_headers(struct igb_ring *rx_ring,$/;"	f	typeref:typename:bool	file:
igb_cleanup_led	config/igb/e1000_mac.c	/^s32 igb_cleanup_led(struct e1000_hw *hw)$/;"	f	typeref:typename:s32
igb_clear_etype_filter_regs	config/igb/igb_ethtool.c	/^static void igb_clear_etype_filter_regs(struct igb_adapter *adapter,$/;"	f	typeref:typename:void	file:
igb_clear_hw_cntrs_82575	config/igb/e1000_82575.c	/^static void igb_clear_hw_cntrs_82575(struct e1000_hw *hw)$/;"	f	typeref:typename:void	file:
igb_clear_hw_cntrs_base	config/igb/e1000_mac.c	/^void igb_clear_hw_cntrs_base(struct e1000_hw *hw)$/;"	f	typeref:typename:void
igb_clear_interrupt_scheme	config/igb/igb_main.c	/^static void igb_clear_interrupt_scheme(struct igb_adapter *adapter)$/;"	f	typeref:typename:void	file:
igb_clear_vf_vfta	config/igb/igb_main.c	/^static void igb_clear_vf_vfta(struct igb_adapter *adapter, u32 vf)$/;"	f	typeref:typename:void	file:
igb_clear_vfta	config/igb/e1000_mac.c	/^void igb_clear_vfta(struct e1000_hw *hw)$/;"	f	typeref:typename:void
igb_clear_vlan_prio_filter	config/igb/igb_ethtool.c	/^static void igb_clear_vlan_prio_filter(struct igb_adapter *adapter,$/;"	f	typeref:typename:void	file:
igb_close	config/igb/igb_main.c	/^int igb_close(struct net_device *netdev)$/;"	f	typeref:typename:int
igb_compute_pad	config/igb/igb.h	/^static inline int igb_compute_pad(int rx_buf_len)$/;"	f	typeref:typename:int
igb_config_collision_dist	config/igb/e1000_mac.c	/^void igb_config_collision_dist(struct e1000_hw *hw)$/;"	f	typeref:typename:void
igb_config_fc_after_link_up	config/igb/e1000_mac.c	/^s32 igb_config_fc_after_link_up(struct e1000_hw *hw)$/;"	f	typeref:typename:s32
igb_config_tx_modes	config/igb/igb_main.c	/^static void igb_config_tx_modes(struct igb_adapter *adapter, int queue)$/;"	f	typeref:typename:void	file:
igb_configure	config/igb/igb_main.c	/^static void igb_configure(struct igb_adapter *adapter)$/;"	f	typeref:typename:void	file:
igb_configure_clsflower	config/igb/igb_main.c	/^static int igb_configure_clsflower(struct igb_adapter *adapter,$/;"	f	typeref:typename:int	file:
igb_configure_msix	config/igb/igb_main.c	/^static void igb_configure_msix(struct igb_adapter *adapter)$/;"	f	typeref:typename:void	file:
igb_configure_rx	config/igb/igb_main.c	/^static void igb_configure_rx(struct igb_adapter *adapter)$/;"	f	typeref:typename:void	file:
igb_configure_rx_ring	config/igb/igb_main.c	/^void igb_configure_rx_ring(struct igb_adapter *adapter,$/;"	f	typeref:typename:void
igb_configure_tx	config/igb/igb_main.c	/^static void igb_configure_tx(struct igb_adapter *adapter)$/;"	f	typeref:typename:void	file:
igb_configure_tx_ring	config/igb/igb_main.c	/^void igb_configure_tx_ring(struct igb_adapter *adapter,$/;"	f	typeref:typename:void
igb_construct_skb	config/igb/igb_main.c	/^static struct sk_buff *igb_construct_skb(struct igb_ring *rx_ring,$/;"	f	typeref:struct:sk_buff *	file:
igb_copper_link_autoneg	config/igb/e1000_phy.c	/^static s32 igb_copper_link_autoneg(struct e1000_hw *hw)$/;"	f	typeref:typename:s32	file:
igb_copper_link_setup_82580	config/igb/e1000_phy.c	/^s32 igb_copper_link_setup_82580(struct e1000_hw *hw)$/;"	f	typeref:typename:s32
igb_copper_link_setup_igp	config/igb/e1000_phy.c	/^s32 igb_copper_link_setup_igp(struct e1000_hw *hw)$/;"	f	typeref:typename:s32
igb_copper_link_setup_m88	config/igb/e1000_phy.c	/^s32 igb_copper_link_setup_m88(struct e1000_hw *hw)$/;"	f	typeref:typename:s32
igb_copper_link_setup_m88_gen2	config/igb/e1000_phy.c	/^s32 igb_copper_link_setup_m88_gen2(struct e1000_hw *hw)$/;"	f	typeref:typename:s32
igb_copyright	config/igb/igb_main.c	/^static const char igb_copyright[] =$/;"	v	typeref:typename:const char[]	file:
igb_create_lbtest_frame	config/igb/igb_ethtool.c	/^static void igb_create_lbtest_frame(struct sk_buff *skb,$/;"	f	typeref:typename:void	file:
igb_del_ethtool_nfc_entry	config/igb/igb_ethtool.c	/^static int igb_del_ethtool_nfc_entry(struct igb_adapter *adapter,$/;"	f	typeref:typename:int	file:
igb_del_mac_filter	config/igb/igb_main.c	/^static int igb_del_mac_filter(struct igb_adapter *adapter, const u8 *addr,$/;"	f	typeref:typename:int	file:
igb_del_mac_filter_flags	config/igb/igb_main.c	/^static int igb_del_mac_filter_flags(struct igb_adapter *adapter,$/;"	f	typeref:typename:int	file:
igb_del_mac_steering_filter	config/igb/igb_main.c	/^int igb_del_mac_steering_filter(struct igb_adapter *adapter,$/;"	f	typeref:typename:int
igb_delete_clsflower	config/igb/igb_main.c	/^static int igb_delete_clsflower(struct igb_adapter *adapter,$/;"	f	typeref:typename:int	file:
igb_deliver_wake_packet	config/igb/igb_main.c	/^static void igb_deliver_wake_packet(struct net_device *netdev)$/;"	f	typeref:typename:void	file:
igb_desc_unused	config/igb/igb.h	/^static inline int igb_desc_unused(struct igb_ring *ring)$/;"	f	typeref:typename:int
igb_diag_test	config/igb/igb_ethtool.c	/^static void igb_diag_test(struct net_device *netdev,$/;"	f	typeref:typename:void	file:
igb_diagnostics_results	config/igb/igb_ethtool.c	/^enum igb_diagnostics_results {$/;"	g	file:
igb_disable_pcie_master	config/igb/e1000_mac.c	/^s32 igb_disable_pcie_master(struct e1000_hw *hw)$/;"	f	typeref:typename:s32
igb_disable_port_vlan	config/igb/igb_main.c	/^static int igb_disable_port_vlan(struct igb_adapter *adapter, int vf)$/;"	f	typeref:typename:int	file:
igb_disable_sriov	config/igb/igb_main.c	/^static int igb_disable_sriov(struct pci_dev *pdev)$/;"	f	typeref:typename:int	file:
igb_down	config/igb/igb_main.c	/^void igb_down(struct igb_adapter *adapter)$/;"	f	typeref:typename:void
igb_driver	config/igb/igb_main.c	/^static struct pci_driver igb_driver = {$/;"	v	typeref:struct:pci_driver	file:
igb_driver_name	config/igb/igb_main.c	/^char igb_driver_name[] = "igb";$/;"	v	typeref:typename:char[]
igb_driver_string	config/igb/igb_main.c	/^static const char igb_driver_string[] =$/;"	v	typeref:typename:const char[]	file:
igb_dump	config/igb/igb_main.c	/^static void igb_dump(struct igb_adapter *adapter)$/;"	f	typeref:typename:void	file:
igb_eeprom_test	config/igb/igb_ethtool.c	/^static int igb_eeprom_test(struct igb_adapter *adapter, u64 *data)$/;"	f	typeref:typename:int	file:
igb_enable_mas	config/igb/igb_main.c	/^static void igb_enable_mas(struct igb_adapter *adapter)$/;"	f	typeref:typename:void	file:
igb_enable_mng_pass_thru	config/igb/e1000_mac.c	/^bool igb_enable_mng_pass_thru(struct e1000_hw *hw)$/;"	f	typeref:typename:bool
igb_enable_port_vlan	config/igb/igb_main.c	/^static int igb_enable_port_vlan(struct igb_adapter *adapter, int vf,$/;"	f	typeref:typename:int	file:
igb_enable_sriov	config/igb/igb_main.c	/^static int igb_enable_sriov(struct pci_dev *pdev, int num_vfs)$/;"	f	typeref:typename:int	file:
igb_erase_filter	config/igb/igb_ethtool.c	/^int igb_erase_filter(struct igb_adapter *adapter, struct igb_nfc_filter *input)$/;"	f	typeref:typename:int
igb_err_handler	config/igb/igb_main.c	/^static const struct pci_error_handlers igb_err_handler = {$/;"	v	typeref:typename:const struct pci_error_handlers	file:
igb_ethtool_begin	config/igb/igb_ethtool.c	/^static int igb_ethtool_begin(struct net_device *netdev)$/;"	f	typeref:typename:int	file:
igb_ethtool_complete	config/igb/igb_ethtool.c	/^static void igb_ethtool_complete(struct net_device *netdev)$/;"	f	typeref:typename:void	file:
igb_ethtool_ops	config/igb/igb_ethtool.c	/^static const struct ethtool_ops igb_ethtool_ops = {$/;"	v	typeref:typename:const struct ethtool_ops	file:
igb_exit_module	config/igb/igb_main.c	/^static void __exit igb_exit_module(void)$/;"	f	typeref:typename:void __exit	file:
igb_features_check	config/igb/igb_main.c	/^igb_features_check(struct sk_buff *skb, struct net_device *dev,$/;"	f	typeref:typename:netdev_features_t	file:
igb_filter_match_flags	config/igb/igb.h	/^enum igb_filter_match_flags {$/;"	g
igb_find_vlvf_entry	config/igb/igb_main.c	/^static int igb_find_vlvf_entry(struct e1000_hw *hw, u32 vlan)$/;"	f	typeref:typename:int	file:
igb_find_vlvf_slot	config/igb/e1000_mac.c	/^static s32 igb_find_vlvf_slot(struct e1000_hw *hw, u32 vlan, bool vlvf_bypass)$/;"	f	typeref:typename:s32	file:
igb_fix_features	config/igb/igb_main.c	/^static netdev_features_t igb_fix_features(struct net_device *netdev,$/;"	f	typeref:typename:netdev_features_t	file:
igb_flush_mac_table	config/igb/igb_main.c	/^static void igb_flush_mac_table(struct igb_adapter *adapter)$/;"	f	typeref:typename:void	file:
igb_force_mac_fc	config/igb/e1000_mac.c	/^s32 igb_force_mac_fc(struct e1000_hw *hw)$/;"	f	typeref:typename:s32
igb_free_all_rx_resources	config/igb/igb_main.c	/^static void igb_free_all_rx_resources(struct igb_adapter *adapter)$/;"	f	typeref:typename:void	file:
igb_free_all_tx_resources	config/igb/igb_main.c	/^static void igb_free_all_tx_resources(struct igb_adapter *adapter)$/;"	f	typeref:typename:void	file:
igb_free_desc_rings	config/igb/igb_ethtool.c	/^static void igb_free_desc_rings(struct igb_adapter *adapter)$/;"	f	typeref:typename:void	file:
igb_free_irq	config/igb/igb_main.c	/^static void igb_free_irq(struct igb_adapter *adapter)$/;"	f	typeref:typename:void	file:
igb_free_q_vector	config/igb/igb_main.c	/^static void igb_free_q_vector(struct igb_adapter *adapter, int v_idx)$/;"	f	typeref:typename:void	file:
igb_free_q_vectors	config/igb/igb_main.c	/^static void igb_free_q_vectors(struct igb_adapter *adapter)$/;"	f	typeref:typename:void	file:
igb_free_rx_resources	config/igb/igb_main.c	/^void igb_free_rx_resources(struct igb_ring *rx_ring)$/;"	f	typeref:typename:void
igb_free_tx_resources	config/igb/igb_main.c	/^void igb_free_tx_resources(struct igb_ring *tx_ring)$/;"	f	typeref:typename:void
igb_get_auto_rd_done	config/igb/e1000_mac.c	/^s32 igb_get_auto_rd_done(struct e1000_hw *hw)$/;"	f	typeref:typename:s32
igb_get_bus_info_pcie	config/igb/e1000_mac.c	/^s32 igb_get_bus_info_pcie(struct e1000_hw *hw)$/;"	f	typeref:typename:s32
igb_get_cable_length_82580	config/igb/e1000_phy.c	/^s32 igb_get_cable_length_82580(struct e1000_hw *hw)$/;"	f	typeref:typename:s32
igb_get_cable_length_igp_2	config/igb/e1000_phy.c	/^s32 igb_get_cable_length_igp_2(struct e1000_hw *hw)$/;"	f	typeref:typename:s32
igb_get_cable_length_m88	config/igb/e1000_phy.c	/^s32 igb_get_cable_length_m88(struct e1000_hw *hw)$/;"	f	typeref:typename:s32
igb_get_cable_length_m88_gen2	config/igb/e1000_phy.c	/^s32 igb_get_cable_length_m88_gen2(struct e1000_hw *hw)$/;"	f	typeref:typename:s32
igb_get_cfg_done_82575	config/igb/e1000_82575.c	/^static s32 igb_get_cfg_done_82575(struct e1000_hw *hw)$/;"	f	typeref:typename:s32	file:
igb_get_cfg_done_i210	config/igb/e1000_i210.c	/^s32 igb_get_cfg_done_i210(struct e1000_hw *hw)$/;"	f	typeref:typename:s32
igb_get_channels	config/igb/igb_ethtool.c	/^static void igb_get_channels(struct net_device *netdev,$/;"	f	typeref:typename:void	file:
igb_get_coalesce	config/igb/igb_ethtool.c	/^static int igb_get_coalesce(struct net_device *netdev,$/;"	f	typeref:typename:int	file:
igb_get_drvinfo	config/igb/igb_ethtool.c	/^static void igb_get_drvinfo(struct net_device *netdev,$/;"	f	typeref:typename:void	file:
igb_get_eee	config/igb/igb_ethtool.c	/^static int igb_get_eee(struct net_device *netdev, struct ethtool_eee *edata)$/;"	f	typeref:typename:int	file:
igb_get_eee_status_i354	config/igb/e1000_82575.c	/^s32 igb_get_eee_status_i354(struct e1000_hw *hw, bool *status)$/;"	f	typeref:typename:s32
igb_get_eeprom	config/igb/igb_ethtool.c	/^static int igb_get_eeprom(struct net_device *netdev,$/;"	f	typeref:typename:int	file:
igb_get_eeprom_len	config/igb/igb_ethtool.c	/^static int igb_get_eeprom_len(struct net_device *netdev)$/;"	f	typeref:typename:int	file:
igb_get_ethtool_nfc_all	config/igb/igb_ethtool.c	/^static int igb_get_ethtool_nfc_all(struct igb_adapter *adapter,$/;"	f	typeref:typename:int	file:
igb_get_ethtool_nfc_entry	config/igb/igb_ethtool.c	/^static int igb_get_ethtool_nfc_entry(struct igb_adapter *adapter,$/;"	f	typeref:typename:int	file:
igb_get_ethtool_stats	config/igb/igb_ethtool.c	/^static void igb_get_ethtool_stats(struct net_device *netdev,$/;"	f	typeref:typename:void	file:
igb_get_flash_presence_i210	config/igb/e1000_i210.c	/^bool igb_get_flash_presence_i210(struct e1000_hw *hw)$/;"	f	typeref:typename:bool
igb_get_fw_version	config/igb/e1000_nvm.c	/^void igb_get_fw_version(struct e1000_hw *hw, struct e1000_fw_version *fw_vers)$/;"	f	typeref:typename:void
igb_get_hw_control	config/igb/igb_main.c	/^static void igb_get_hw_control(struct igb_adapter *adapter)$/;"	f	typeref:typename:void	file:
igb_get_hw_dev	config/igb/igb_main.c	/^struct net_device *igb_get_hw_dev(struct e1000_hw *hw)$/;"	f	typeref:struct:net_device *
igb_get_hw_semaphore	config/igb/e1000_mac.c	/^s32 igb_get_hw_semaphore(struct e1000_hw *hw)$/;"	f	typeref:typename:s32
igb_get_hw_semaphore_i210	config/igb/e1000_i210.c	/^static s32 igb_get_hw_semaphore_i210(struct e1000_hw *hw)$/;"	f	typeref:typename:s32	file:
igb_get_i2c_clk	config/igb/igb_main.c	/^static int igb_get_i2c_clk(void *data)$/;"	f	typeref:typename:int	file:
igb_get_i2c_data	config/igb/igb_main.c	/^static int igb_get_i2c_data(void *data)$/;"	f	typeref:typename:int	file:
igb_get_invariants_82575	config/igb/e1000_82575.c	/^static s32 igb_get_invariants_82575(struct e1000_hw *hw)$/;"	f	typeref:typename:s32	file:
igb_get_link	config/igb/igb_ethtool.c	/^static u32 igb_get_link(struct net_device *netdev)$/;"	f	typeref:typename:u32	file:
igb_get_link_ksettings	config/igb/igb_ethtool.c	/^static int igb_get_link_ksettings(struct net_device *netdev,$/;"	f	typeref:typename:int	file:
igb_get_link_up_info_82575	config/igb/e1000_82575.c	/^static s32 igb_get_link_up_info_82575(struct e1000_hw *hw, u16 *speed,$/;"	f	typeref:typename:s32	file:
igb_get_max_rss_queues	config/igb/igb_main.c	/^unsigned int igb_get_max_rss_queues(struct igb_adapter *adapter)$/;"	f	typeref:typename:unsigned int
igb_get_module_eeprom	config/igb/igb_ethtool.c	/^static int igb_get_module_eeprom(struct net_device *netdev,$/;"	f	typeref:typename:int	file:
igb_get_module_info	config/igb/igb_ethtool.c	/^static int igb_get_module_info(struct net_device *netdev,$/;"	f	typeref:typename:int	file:
igb_get_msglevel	config/igb/igb_ethtool.c	/^static u32 igb_get_msglevel(struct net_device *netdev)$/;"	f	typeref:typename:u32	file:
igb_get_pauseparam	config/igb/igb_ethtool.c	/^static void igb_get_pauseparam(struct net_device *netdev,$/;"	f	typeref:typename:void	file:
igb_get_pcs_speed_and_duplex_82575	config/igb/e1000_82575.c	/^static s32 igb_get_pcs_speed_and_duplex_82575(struct e1000_hw *hw, u16 *speed,$/;"	f	typeref:typename:s32	file:
igb_get_phy_id	config/igb/e1000_phy.c	/^s32 igb_get_phy_id(struct e1000_hw *hw)$/;"	f	typeref:typename:s32
igb_get_phy_id_82575	config/igb/e1000_82575.c	/^static s32 igb_get_phy_id_82575(struct e1000_hw *hw)$/;"	f	typeref:typename:s32	file:
igb_get_phy_info	config/igb/igb.h	/^static inline s32 igb_get_phy_info(struct e1000_hw *hw)$/;"	f	typeref:typename:s32
igb_get_phy_info_82580	config/igb/e1000_phy.c	/^s32 igb_get_phy_info_82580(struct e1000_hw *hw)$/;"	f	typeref:typename:s32
igb_get_phy_info_igp	config/igb/e1000_phy.c	/^s32 igb_get_phy_info_igp(struct e1000_hw *hw)$/;"	f	typeref:typename:s32
igb_get_phy_info_m88	config/igb/e1000_phy.c	/^s32 igb_get_phy_info_m88(struct e1000_hw *hw)$/;"	f	typeref:typename:s32
igb_get_priv_flags	config/igb/igb_ethtool.c	/^static u32 igb_get_priv_flags(struct net_device *netdev)$/;"	f	typeref:typename:u32	file:
igb_get_regs	config/igb/igb_ethtool.c	/^static void igb_get_regs(struct net_device *netdev,$/;"	f	typeref:typename:void	file:
igb_get_regs_len	config/igb/igb_ethtool.c	/^static int igb_get_regs_len(struct net_device *netdev)$/;"	f	typeref:typename:int	file:
igb_get_ringparam	config/igb/igb_ethtool.c	/^static void igb_get_ringparam(struct net_device *netdev,$/;"	f	typeref:typename:void	file:
igb_get_rss_hash_opts	config/igb/igb_ethtool.c	/^static int igb_get_rss_hash_opts(struct igb_adapter *adapter,$/;"	f	typeref:typename:int	file:
igb_get_rx_buffer	config/igb/igb_main.c	/^static struct igb_rx_buffer *igb_get_rx_buffer(struct igb_ring *rx_ring,$/;"	f	typeref:struct:igb_rx_buffer *	file:
igb_get_rxfh	config/igb/igb_ethtool.c	/^static int igb_get_rxfh(struct net_device *netdev, u32 *indir, u8 *key,$/;"	f	typeref:typename:int	file:
igb_get_rxfh_indir_size	config/igb/igb_ethtool.c	/^static u32 igb_get_rxfh_indir_size(struct net_device *netdev)$/;"	f	typeref:typename:u32	file:
igb_get_rxnfc	config/igb/igb_ethtool.c	/^static int igb_get_rxnfc(struct net_device *dev, struct ethtool_rxnfc *cmd,$/;"	f	typeref:typename:int	file:
igb_get_speed_and_duplex_copper	config/igb/e1000_mac.c	/^s32 igb_get_speed_and_duplex_copper(struct e1000_hw *hw, u16 *speed,$/;"	f	typeref:typename:s32
igb_get_sset_count	config/igb/igb_ethtool.c	/^static int igb_get_sset_count(struct net_device *netdev, int sset)$/;"	f	typeref:typename:int	file:
igb_get_stats64	config/igb/igb_main.c	/^static void igb_get_stats64(struct net_device *netdev,$/;"	f	typeref:typename:void	file:
igb_get_strings	config/igb/igb_ethtool.c	/^static void igb_get_strings(struct net_device *netdev, u32 stringset, u8 *data)$/;"	f	typeref:typename:void	file:
igb_get_thermal_sensor_data_generic	config/igb/e1000_82575.c	/^static s32 igb_get_thermal_sensor_data_generic(struct e1000_hw *hw)$/;"	f	typeref:typename:s32	file:
igb_get_ts_info	config/igb/igb_ethtool.c	/^static int igb_get_ts_info(struct net_device *dev,$/;"	f	typeref:typename:int	file:
igb_get_wol	config/igb/igb_ethtool.c	/^static void igb_get_wol(struct net_device *netdev, struct ethtool_wolinfo *wol)$/;"	f	typeref:typename:void	file:
igb_gstrings_net_stats	config/igb/igb_ethtool.c	/^static const struct igb_stats igb_gstrings_net_stats[] = {$/;"	v	typeref:typename:const struct igb_stats[]	file:
igb_gstrings_stats	config/igb/igb_ethtool.c	/^static const struct igb_stats igb_gstrings_stats[] = {$/;"	v	typeref:typename:const struct igb_stats[]	file:
igb_gstrings_test	config/igb/igb_ethtool.c	/^static const char igb_gstrings_test[][ETH_GSTRING_LEN] = {$/;"	v	typeref:typename:const char[][]	file:
igb_has_link	config/igb/igb_main.c	/^bool igb_has_link(struct igb_adapter *adapter)$/;"	f	typeref:typename:bool
igb_hash_mc_addr	config/igb/e1000_mac.c	/^static u32 igb_hash_mc_addr(struct e1000_hw *hw, u8 *mc_addr)$/;"	f	typeref:typename:u32	file:
igb_hwmon_buff	config/igb/igb.h	/^	struct hwmon_buff *igb_hwmon_buff;$/;"	m	struct:igb_adapter	typeref:struct:hwmon_buff *
igb_hwmon_show_cautionthresh	config/igb/igb_hwmon.c	/^static ssize_t igb_hwmon_show_cautionthresh(struct device *dev,$/;"	f	typeref:typename:ssize_t	file:
igb_hwmon_show_location	config/igb/igb_hwmon.c	/^static ssize_t igb_hwmon_show_location(struct device *dev,$/;"	f	typeref:typename:ssize_t	file:
igb_hwmon_show_maxopthresh	config/igb/igb_hwmon.c	/^static ssize_t igb_hwmon_show_maxopthresh(struct device *dev,$/;"	f	typeref:typename:ssize_t	file:
igb_hwmon_show_temp	config/igb/igb_hwmon.c	/^static ssize_t igb_hwmon_show_temp(struct device *dev,$/;"	f	typeref:typename:ssize_t	file:
igb_i21x_hw_doublecheck	config/igb/e1000_mac.c	/^static void igb_i21x_hw_doublecheck(struct e1000_hw *hw)$/;"	f	typeref:typename:void	file:
igb_i2c_algo	config/igb/igb_main.c	/^static const struct i2c_algo_bit_data igb_i2c_algo = {$/;"	v	typeref:typename:const struct i2c_algo_bit_data	file:
igb_id_led_init	config/igb/e1000_mac.c	/^s32 igb_id_led_init(struct e1000_hw *hw)$/;"	f	typeref:typename:s32
igb_info_tbl	config/igb/igb_main.c	/^static const struct e1000_info *igb_info_tbl[] = {$/;"	v	typeref:typename:const struct e1000_info * []	file:
igb_init_dmac	config/igb/igb_main.c	/^static void igb_init_dmac(struct igb_adapter *adapter, u32 pba)$/;"	f	typeref:typename:void	file:
igb_init_hw_82575	config/igb/e1000_82575.c	/^static s32 igb_init_hw_82575(struct e1000_hw *hw)$/;"	f	typeref:typename:s32	file:
igb_init_i2c	config/igb/igb_main.c	/^static s32 igb_init_i2c(struct igb_adapter *adapter)$/;"	f	typeref:typename:s32	file:
igb_init_interrupt_scheme	config/igb/igb_main.c	/^static int igb_init_interrupt_scheme(struct igb_adapter *adapter, bool msix)$/;"	f	typeref:typename:int	file:
igb_init_mac_params_82575	config/igb/e1000_82575.c	/^static s32 igb_init_mac_params_82575(struct e1000_hw *hw)$/;"	f	typeref:typename:s32	file:
igb_init_mas	config/igb/igb_main.c	/^static void igb_init_mas(struct igb_adapter *adapter)$/;"	f	typeref:typename:void	file:
igb_init_mbx_params_pf	config/igb/e1000_mbx.c	/^s32 igb_init_mbx_params_pf(struct e1000_hw *hw)$/;"	f	typeref:typename:s32
igb_init_module	config/igb/igb_main.c	/^static int __init igb_init_module(void)$/;"	f	typeref:typename:int __init	file:
igb_init_nvm_params_82575	config/igb/e1000_82575.c	/^static s32 igb_init_nvm_params_82575(struct e1000_hw *hw)$/;"	f	typeref:typename:s32	file:
igb_init_nvm_params_i210	config/igb/e1000_i210.c	/^s32 igb_init_nvm_params_i210(struct e1000_hw *hw)$/;"	f	typeref:typename:s32
igb_init_phy_params_82575	config/igb/e1000_82575.c	/^static s32 igb_init_phy_params_82575(struct e1000_hw *hw)$/;"	f	typeref:typename:s32	file:
igb_init_queue_configuration	config/igb/igb_main.c	/^static void igb_init_queue_configuration(struct igb_adapter *adapter)$/;"	f	typeref:typename:void	file:
igb_init_rx_addrs	config/igb/e1000_mac.c	/^void igb_init_rx_addrs(struct e1000_hw *hw, u16 rar_count)$/;"	f	typeref:typename:void
igb_init_thermal_sensor_thresh_generic	config/igb/e1000_82575.c	/^static s32 igb_init_thermal_sensor_thresh_generic(struct e1000_hw *hw)$/;"	f	typeref:typename:s32	file:
igb_initialize_M88E1512_phy	config/igb/e1000_phy.c	/^s32 igb_initialize_M88E1512_phy(struct e1000_hw *hw)$/;"	f	typeref:typename:s32
igb_initialize_M88E1543_phy	config/igb/e1000_phy.c	/^s32 igb_initialize_M88E1543_phy(struct e1000_hw *hw)$/;"	f	typeref:typename:s32
igb_integrated_phy_loopback	config/igb/igb_ethtool.c	/^static int igb_integrated_phy_loopback(struct igb_adapter *adapter)$/;"	f	typeref:typename:int	file:
igb_intr	config/igb/igb_main.c	/^static irqreturn_t igb_intr(int irq, void *data)$/;"	f	typeref:typename:irqreturn_t	file:
igb_intr_msi	config/igb/igb_main.c	/^static irqreturn_t igb_intr_msi(int irq, void *data)$/;"	f	typeref:typename:irqreturn_t	file:
igb_intr_test	config/igb/igb_ethtool.c	/^static int igb_intr_test(struct igb_adapter *adapter, u64 *data)$/;"	f	typeref:typename:int	file:
igb_io_error_detected	config/igb/igb_main.c	/^static pci_ers_result_t igb_io_error_detected(struct pci_dev *pdev,$/;"	f	typeref:typename:pci_ers_result_t	file:
igb_io_resume	config/igb/igb_main.c	/^static void igb_io_resume(struct pci_dev *pdev)$/;"	f	typeref:typename:void	file:
igb_io_slot_reset	config/igb/igb_main.c	/^static pci_ers_result_t igb_io_slot_reset(struct pci_dev *pdev)$/;"	f	typeref:typename:pci_ers_result_t	file:
igb_ioctl	config/igb/igb_main.c	/^static int igb_ioctl(struct net_device *netdev, struct ifreq *ifr, int cmd)$/;"	f	typeref:typename:int	file:
igb_irq_disable	config/igb/igb_main.c	/^static void igb_irq_disable(struct igb_adapter *adapter)$/;"	f	typeref:typename:void	file:
igb_irq_enable	config/igb/igb_main.c	/^static void igb_irq_enable(struct igb_adapter *adapter)$/;"	f	typeref:typename:void	file:
igb_is_non_eop	config/igb/igb_main.c	/^static bool igb_is_non_eop(struct igb_ring *rx_ring,$/;"	f	typeref:typename:bool	file:
igb_led_off	config/igb/e1000_mac.c	/^s32 igb_led_off(struct e1000_hw *hw)$/;"	f	typeref:typename:s32
igb_link_mbps	config/igb/igb_main.c	/^static int igb_link_mbps(int internal_link_speed)$/;"	f	typeref:typename:int	file:
igb_link_test	config/igb/igb_ethtool.c	/^static int igb_link_test(struct igb_adapter *adapter, u64 *data)$/;"	f	typeref:typename:int	file:
igb_loopback_cleanup	config/igb/igb_ethtool.c	/^static void igb_loopback_cleanup(struct igb_adapter *adapter)$/;"	f	typeref:typename:void	file:
igb_loopback_test	config/igb/igb_ethtool.c	/^static int igb_loopback_test(struct igb_adapter *adapter, u64 *data)$/;"	f	typeref:typename:int	file:
igb_lower_eec_clk	config/igb/e1000_nvm.c	/^static void igb_lower_eec_clk(struct e1000_hw *hw, u32 *eecd)$/;"	f	typeref:typename:void	file:
igb_mac_addr	config/igb/igb.h	/^struct igb_mac_addr {$/;"	s
igb_mac_entry_can_be_used	config/igb/igb_main.c	/^static bool igb_mac_entry_can_be_used(const struct igb_mac_addr *entry,$/;"	f	typeref:typename:bool	file:
igb_max_channels	config/igb/igb_ethtool.c	/^static unsigned int igb_max_channels(struct igb_adapter *adapter)$/;"	f	typeref:typename:unsigned int	file:
igb_maybe_stop_tx	config/igb/igb_main.c	/^static inline int igb_maybe_stop_tx(struct igb_ring *tx_ring, const u16 size)$/;"	f	typeref:typename:int	file:
igb_mii_ioctl	config/igb/igb_main.c	/^static int igb_mii_ioctl(struct net_device *netdev, struct ifreq *ifr, int cmd)$/;"	f	typeref:typename:int	file:
igb_msg_task	config/igb/igb_main.c	/^static void igb_msg_task(struct igb_adapter *adapter)$/;"	f	typeref:typename:void	file:
igb_msix_other	config/igb/igb_main.c	/^static irqreturn_t igb_msix_other(int irq, void *data)$/;"	f	typeref:typename:irqreturn_t	file:
igb_msix_ring	config/igb/igb_main.c	/^static irqreturn_t igb_msix_ring(int irq, void *data)$/;"	f	typeref:typename:irqreturn_t	file:
igb_mta_set	config/igb/e1000_mac.c	/^void igb_mta_set(struct e1000_hw *hw, u32 hash_value)$/;"	f	typeref:typename:void
igb_ndo_fdb_add	config/igb/igb_main.c	/^static int igb_ndo_fdb_add(struct ndmsg *ndm, struct nlattr *tb[],$/;"	f	typeref:typename:int	file:
igb_ndo_get_vf_config	config/igb/igb_main.c	/^static int igb_ndo_get_vf_config(struct net_device *netdev,$/;"	f	typeref:typename:int	file:
igb_ndo_set_vf_bw	config/igb/igb_main.c	/^static int igb_ndo_set_vf_bw(struct net_device *netdev, int vf,$/;"	f	typeref:typename:int	file:
igb_ndo_set_vf_mac	config/igb/igb_main.c	/^static int igb_ndo_set_vf_mac(struct net_device *netdev, int vf, u8 *mac)$/;"	f	typeref:typename:int	file:
igb_ndo_set_vf_spoofchk	config/igb/igb_main.c	/^static int igb_ndo_set_vf_spoofchk(struct net_device *netdev, int vf,$/;"	f	typeref:typename:int	file:
igb_ndo_set_vf_trust	config/igb/igb_main.c	/^static int igb_ndo_set_vf_trust(struct net_device *netdev, int vf, bool setting)$/;"	f	typeref:typename:int	file:
igb_ndo_set_vf_vlan	config/igb/igb_main.c	/^static int igb_ndo_set_vf_vlan(struct net_device *netdev, int vf,$/;"	f	typeref:typename:int	file:
igb_netdev_ops	config/igb/igb_main.c	/^static const struct net_device_ops igb_netdev_ops = {$/;"	v	typeref:typename:const struct net_device_ops	file:
igb_nfc_filter	config/igb/igb.h	/^struct igb_nfc_filter {$/;"	s
igb_nfc_filter_exit	config/igb/igb_main.c	/^static void igb_nfc_filter_exit(struct igb_adapter *adapter)$/;"	f	typeref:typename:void	file:
igb_nfc_filter_restore	config/igb/igb_main.c	/^static void igb_nfc_filter_restore(struct igb_adapter *adapter)$/;"	f	typeref:typename:void	file:
igb_nfc_input	config/igb/igb.h	/^struct igb_nfc_input {$/;"	s
igb_notify_dca	config/igb/igb_main.c	/^static int igb_notify_dca(struct notifier_block *nb, unsigned long event,$/;"	f	typeref:typename:int	file:
igb_nway_reset	config/igb/igb_ethtool.c	/^static int igb_nway_reset(struct net_device *netdev)$/;"	f	typeref:typename:int	file:
igb_obtain_mbx_lock_pf	config/igb/e1000_mbx.c	/^static s32 igb_obtain_mbx_lock_pf(struct e1000_hw *hw, u16 vf_number)$/;"	f	typeref:typename:s32	file:
igb_offload_apply	config/igb/igb_main.c	/^static void igb_offload_apply(struct igb_adapter *adapter, s32 queue)$/;"	f	typeref:typename:void	file:
igb_offload_cbs	config/igb/igb_main.c	/^static int igb_offload_cbs(struct igb_adapter *adapter,$/;"	f	typeref:typename:int	file:
igb_offload_txtime	config/igb/igb_main.c	/^static int igb_offload_txtime(struct igb_adapter *adapter,$/;"	f	typeref:typename:int	file:
igb_open	config/igb/igb_main.c	/^int igb_open(struct net_device *netdev)$/;"	f	typeref:typename:int
igb_parse_cls_flower	config/igb/igb_main.c	/^static int igb_parse_cls_flower(struct igb_adapter *adapter,$/;"	f	typeref:typename:int	file:
igb_pci_disable_sriov	config/igb/igb_main.c	/^static int igb_pci_disable_sriov(struct pci_dev *dev)$/;"	f	typeref:typename:int	file:
igb_pci_enable_sriov	config/igb/igb_main.c	/^static int igb_pci_enable_sriov(struct pci_dev *dev, int num_vfs)$/;"	f	typeref:typename:int	file:
igb_pci_sriov_configure	config/igb/igb_main.c	/^static int igb_pci_sriov_configure(struct pci_dev *dev, int num_vfs)$/;"	f	typeref:typename:int	file:
igb_pci_tbl	config/igb/igb_main.c	/^static const struct pci_device_id igb_pci_tbl[] = {$/;"	v	typeref:typename:const struct pci_device_id[]	file:
igb_phy_disable_receiver	config/igb/igb_ethtool.c	/^static void igb_phy_disable_receiver(struct igb_adapter *adapter)$/;"	f	typeref:typename:void	file:
igb_phy_force_speed_duplex_82580	config/igb/e1000_phy.c	/^s32 igb_phy_force_speed_duplex_82580(struct e1000_hw *hw)$/;"	f	typeref:typename:s32
igb_phy_force_speed_duplex_igp	config/igb/e1000_phy.c	/^s32 igb_phy_force_speed_duplex_igp(struct e1000_hw *hw)$/;"	f	typeref:typename:s32
igb_phy_force_speed_duplex_m88	config/igb/e1000_phy.c	/^s32 igb_phy_force_speed_duplex_m88(struct e1000_hw *hw)$/;"	f	typeref:typename:s32
igb_phy_force_speed_duplex_setup	config/igb/e1000_phy.c	/^static void igb_phy_force_speed_duplex_setup(struct e1000_hw *hw,$/;"	f	typeref:typename:void	file:
igb_phy_has_link	config/igb/e1000_phy.c	/^s32 igb_phy_has_link(struct e1000_hw *hw, u32 iterations,$/;"	f	typeref:typename:s32
igb_phy_hw_reset	config/igb/e1000_phy.c	/^s32 igb_phy_hw_reset(struct e1000_hw *hw)$/;"	f	typeref:typename:s32
igb_phy_hw_reset_sgmii_82575	config/igb/e1000_82575.c	/^static s32 igb_phy_hw_reset_sgmii_82575(struct e1000_hw *hw)$/;"	f	typeref:typename:s32	file:
igb_phy_init_script_igp3	config/igb/e1000_phy.c	/^s32 igb_phy_init_script_igp3(struct e1000_hw *hw)$/;"	f	typeref:typename:s32
igb_phy_reset_dsp	config/igb/e1000_phy.c	/^static s32 igb_phy_reset_dsp(struct e1000_hw *hw)$/;"	f	typeref:typename:s32	file:
igb_phy_setup_autoneg	config/igb/e1000_phy.c	/^static s32 igb_phy_setup_autoneg(struct e1000_hw *hw)$/;"	f	typeref:typename:s32	file:
igb_phy_sw_reset	config/igb/e1000_phy.c	/^s32 igb_phy_sw_reset(struct e1000_hw *hw)$/;"	f	typeref:typename:s32
igb_pin_direction	config/igb/igb_ptp.c	/^static void igb_pin_direction(int pin, int input, u32 *ctrl, u32 *ctrl_ext)$/;"	f	typeref:typename:void	file:
igb_pin_extts	config/igb/igb_ptp.c	/^static void igb_pin_extts(struct igb_adapter *igb, int chan, int pin)$/;"	f	typeref:typename:void	file:
igb_pin_perout	config/igb/igb_ptp.c	/^static void igb_pin_perout(struct igb_adapter *igb, int chan, int pin, int freq)$/;"	f	typeref:typename:void	file:
igb_ping_all_vfs	config/igb/igb_main.c	/^static void igb_ping_all_vfs(struct igb_adapter *adapter)$/;"	f	typeref:typename:void	file:
igb_pll_workaround_i210	config/igb/e1000_i210.c	/^s32 igb_pll_workaround_i210(struct e1000_hw *hw)$/;"	f	typeref:typename:s32
igb_pm_ops	config/igb/igb_main.c	/^static const struct dev_pm_ops igb_pm_ops = {$/;"	v	typeref:typename:const struct dev_pm_ops	file:
igb_poll	config/igb/igb_main.c	/^static int igb_poll(struct napi_struct *napi, int budget)$/;"	f	typeref:typename:int	file:
igb_poll_eerd_eewr_done	config/igb/e1000_nvm.c	/^static s32 igb_poll_eerd_eewr_done(struct e1000_hw *hw, int ee_reg)$/;"	f	typeref:typename:s32	file:
igb_poll_for_ack	config/igb/e1000_mbx.c	/^static s32 igb_poll_for_ack(struct e1000_hw *hw, u16 mbx_id)$/;"	f	typeref:typename:s32	file:
igb_poll_for_msg	config/igb/e1000_mbx.c	/^static s32 igb_poll_for_msg(struct e1000_hw *hw, u16 mbx_id)$/;"	f	typeref:typename:s32	file:
igb_pool_flash_update_done_i210	config/igb/e1000_i210.c	/^static s32 igb_pool_flash_update_done_i210(struct e1000_hw *hw)$/;"	f	typeref:typename:s32	file:
igb_power_down_link	config/igb/igb_main.c	/^static void igb_power_down_link(struct igb_adapter *adapter)$/;"	f	typeref:typename:void	file:
igb_power_down_phy_copper	config/igb/e1000_phy.c	/^void igb_power_down_phy_copper(struct e1000_hw *hw)$/;"	f	typeref:typename:void
igb_power_down_phy_copper_82575	config/igb/e1000_82575.c	/^void igb_power_down_phy_copper_82575(struct e1000_hw *hw)$/;"	f	typeref:typename:void
igb_power_up_link	config/igb/igb_main.c	/^void igb_power_up_link(struct igb_adapter *adapter)$/;"	f	typeref:typename:void
igb_power_up_phy_copper	config/igb/e1000_phy.c	/^void igb_power_up_phy_copper(struct e1000_hw *hw)$/;"	f	typeref:typename:void
igb_power_up_serdes_link_82575	config/igb/e1000_82575.c	/^void igb_power_up_serdes_link_82575(struct e1000_hw *hw)$/;"	f	typeref:typename:void
igb_priv_flags_strings	config/igb/igb_ethtool.c	/^static const char igb_priv_flags_strings[][ETH_GSTRING_LEN] = {$/;"	v	typeref:typename:const char[][]	file:
igb_probe	config/igb/igb_main.c	/^static int igb_probe(struct pci_dev *pdev, const struct pci_device_id *ent)$/;"	f	typeref:typename:int	file:
igb_probe_vfs	config/igb/igb_main.c	/^static void igb_probe_vfs(struct igb_adapter *adapter)$/;"	f	typeref:typename:void	file:
igb_process_skb_fields	config/igb/igb_main.c	/^static void igb_process_skb_fields(struct igb_ring *rx_ring,$/;"	f	typeref:typename:void	file:
igb_ptp_adjfine_82580	config/igb/igb_ptp.c	/^static int igb_ptp_adjfine_82580(struct ptp_clock_info *ptp, long scaled_ppm)$/;"	f	typeref:typename:int	file:
igb_ptp_adjfreq_82576	config/igb/igb_ptp.c	/^static int igb_ptp_adjfreq_82576(struct ptp_clock_info *ptp, s32 ppb)$/;"	f	typeref:typename:int	file:
igb_ptp_adjtime_82576	config/igb/igb_ptp.c	/^static int igb_ptp_adjtime_82576(struct ptp_clock_info *ptp, s64 delta)$/;"	f	typeref:typename:int	file:
igb_ptp_adjtime_i210	config/igb/igb_ptp.c	/^static int igb_ptp_adjtime_i210(struct ptp_clock_info *ptp, s64 delta)$/;"	f	typeref:typename:int	file:
igb_ptp_feature_enable	config/igb/igb_ptp.c	/^static int igb_ptp_feature_enable(struct ptp_clock_info *ptp,$/;"	f	typeref:typename:int	file:
igb_ptp_feature_enable_i210	config/igb/igb_ptp.c	/^static int igb_ptp_feature_enable_i210(struct ptp_clock_info *ptp,$/;"	f	typeref:typename:int	file:
igb_ptp_get_ts_config	config/igb/igb_ptp.c	/^int igb_ptp_get_ts_config(struct net_device *netdev, struct ifreq *ifr)$/;"	f	typeref:typename:int
igb_ptp_gettimex_82576	config/igb/igb_ptp.c	/^static int igb_ptp_gettimex_82576(struct ptp_clock_info *ptp,$/;"	f	typeref:typename:int	file:
igb_ptp_gettimex_82580	config/igb/igb_ptp.c	/^static int igb_ptp_gettimex_82580(struct ptp_clock_info *ptp,$/;"	f	typeref:typename:int	file:
igb_ptp_gettimex_i210	config/igb/igb_ptp.c	/^static int igb_ptp_gettimex_i210(struct ptp_clock_info *ptp,$/;"	f	typeref:typename:int	file:
igb_ptp_init	config/igb/igb_ptp.c	/^void igb_ptp_init(struct igb_adapter *adapter)$/;"	f	typeref:typename:void
igb_ptp_overflow_check	config/igb/igb_ptp.c	/^static void igb_ptp_overflow_check(struct work_struct *work)$/;"	f	typeref:typename:void	file:
igb_ptp_read_82576	config/igb/igb_ptp.c	/^static u64 igb_ptp_read_82576(const struct cyclecounter *cc)$/;"	f	typeref:typename:u64	file:
igb_ptp_read_82580	config/igb/igb_ptp.c	/^static u64 igb_ptp_read_82580(const struct cyclecounter *cc)$/;"	f	typeref:typename:u64	file:
igb_ptp_read_i210	config/igb/igb_ptp.c	/^static void igb_ptp_read_i210(struct igb_adapter *adapter,$/;"	f	typeref:typename:void	file:
igb_ptp_reset	config/igb/igb_ptp.c	/^void igb_ptp_reset(struct igb_adapter *adapter)$/;"	f	typeref:typename:void
igb_ptp_rx_hang	config/igb/igb_ptp.c	/^void igb_ptp_rx_hang(struct igb_adapter *adapter)$/;"	f	typeref:typename:void
igb_ptp_rx_pktstamp	config/igb/igb_ptp.c	/^int igb_ptp_rx_pktstamp(struct igb_q_vector *q_vector, void *va,$/;"	f	typeref:typename:int
igb_ptp_rx_rgtstamp	config/igb/igb_ptp.c	/^void igb_ptp_rx_rgtstamp(struct igb_q_vector *q_vector, struct sk_buff *skb)$/;"	f	typeref:typename:void
igb_ptp_set_timestamp_mode	config/igb/igb_ptp.c	/^static int igb_ptp_set_timestamp_mode(struct igb_adapter *adapter,$/;"	f	typeref:typename:int	file:
igb_ptp_set_ts_config	config/igb/igb_ptp.c	/^int igb_ptp_set_ts_config(struct net_device *netdev, struct ifreq *ifr)$/;"	f	typeref:typename:int
igb_ptp_settime_82576	config/igb/igb_ptp.c	/^static int igb_ptp_settime_82576(struct ptp_clock_info *ptp,$/;"	f	typeref:typename:int	file:
igb_ptp_settime_i210	config/igb/igb_ptp.c	/^static int igb_ptp_settime_i210(struct ptp_clock_info *ptp,$/;"	f	typeref:typename:int	file:
igb_ptp_stop	config/igb/igb_ptp.c	/^void igb_ptp_stop(struct igb_adapter *adapter)$/;"	f	typeref:typename:void
igb_ptp_suspend	config/igb/igb_ptp.c	/^void igb_ptp_suspend(struct igb_adapter *adapter)$/;"	f	typeref:typename:void
igb_ptp_systim_to_hwtstamp	config/igb/igb_ptp.c	/^static void igb_ptp_systim_to_hwtstamp(struct igb_adapter *adapter,$/;"	f	typeref:typename:void	file:
igb_ptp_tx_hang	config/igb/igb_ptp.c	/^void igb_ptp_tx_hang(struct igb_adapter *adapter)$/;"	f	typeref:typename:void
igb_ptp_tx_hwtstamp	config/igb/igb_ptp.c	/^static void igb_ptp_tx_hwtstamp(struct igb_adapter *adapter)$/;"	f	typeref:typename:void	file:
igb_ptp_tx_work	config/igb/igb_ptp.c	/^static void igb_ptp_tx_work(struct work_struct *work)$/;"	f	typeref:typename:void	file:
igb_ptp_verify_pin	config/igb/igb_ptp.c	/^static int igb_ptp_verify_pin(struct ptp_clock_info *ptp, unsigned int pin,$/;"	f	typeref:typename:int	file:
igb_ptp_write_i210	config/igb/igb_ptp.c	/^static void igb_ptp_write_i210(struct igb_adapter *adapter,$/;"	f	typeref:typename:void	file:
igb_put_hw_semaphore	config/igb/e1000_mac.c	/^void igb_put_hw_semaphore(struct e1000_hw *hw)$/;"	f	typeref:typename:void
igb_put_rx_buffer	config/igb/igb_main.c	/^static void igb_put_rx_buffer(struct igb_ring *rx_ring,$/;"	f	typeref:typename:void	file:
igb_q_vector	config/igb/igb.h	/^struct igb_q_vector {$/;"	s
igb_raise_eec_clk	config/igb/e1000_nvm.c	/^static void igb_raise_eec_clk(struct e1000_hw *hw, u32 *eecd)$/;"	f	typeref:typename:void	file:
igb_rar_set	config/igb/e1000_mac.c	/^void igb_rar_set(struct e1000_hw *hw, u8 *addr, u32 index)$/;"	f	typeref:typename:void
igb_rar_set_index	config/igb/igb_main.c	/^static void igb_rar_set_index(struct igb_adapter *adapter, u32 index)$/;"	f	typeref:typename:void	file:
igb_rcv_ack_from_vf	config/igb/igb_main.c	/^static void igb_rcv_ack_from_vf(struct igb_adapter *adapter, u32 vf)$/;"	f	typeref:typename:void	file:
igb_rcv_msg_from_vf	config/igb/igb_main.c	/^static void igb_rcv_msg_from_vf(struct igb_adapter *adapter, u32 vf)$/;"	f	typeref:typename:void	file:
igb_rd32	config/igb/igb_main.c	/^u32 igb_rd32(struct e1000_hw *hw, u32 reg)$/;"	f	typeref:typename:u32
igb_read_emi_reg	config/igb/e1000_82575.c	/^s32 igb_read_emi_reg(struct e1000_hw *hw, u16 addr, u16 *data)$/;"	f	typeref:typename:s32
igb_read_i2c_byte	config/igb/igb_main.c	/^s32 igb_read_i2c_byte(struct e1000_hw *hw, u8 byte_offset,$/;"	f	typeref:typename:s32
igb_read_invm_i210	config/igb/e1000_i210.c	/^static s32 igb_read_invm_i210(struct e1000_hw *hw, u16 offset,$/;"	f	typeref:typename:s32	file:
igb_read_invm_version	config/igb/e1000_i210.c	/^s32 igb_read_invm_version(struct e1000_hw *hw,$/;"	f	typeref:typename:s32
igb_read_invm_word_i210	config/igb/e1000_i210.c	/^static s32 igb_read_invm_word_i210(struct e1000_hw *hw, u8 address, u16 *data)$/;"	f	typeref:typename:s32	file:
igb_read_mac_addr	config/igb/e1000_nvm.c	/^s32 igb_read_mac_addr(struct e1000_hw *hw)$/;"	f	typeref:typename:s32
igb_read_mac_addr_82575	config/igb/e1000_82575.c	/^static s32 igb_read_mac_addr_82575(struct e1000_hw *hw)$/;"	f	typeref:typename:s32	file:
igb_read_mbx	config/igb/e1000_mbx.c	/^s32 igb_read_mbx(struct e1000_hw *hw, u32 *msg, u16 size, u16 mbx_id,$/;"	f	typeref:typename:s32
igb_read_mbx_pf	config/igb/e1000_mbx.c	/^static s32 igb_read_mbx_pf(struct e1000_hw *hw, u32 *msg, u16 size,$/;"	f	typeref:typename:s32	file:
igb_read_nvm_eerd	config/igb/e1000_nvm.c	/^s32 igb_read_nvm_eerd(struct e1000_hw *hw, u16 offset, u16 words, u16 *data)$/;"	f	typeref:typename:s32
igb_read_nvm_spi	config/igb/e1000_nvm.c	/^s32 igb_read_nvm_spi(struct e1000_hw *hw, u16 offset, u16 words, u16 *data)$/;"	f	typeref:typename:s32
igb_read_nvm_srrd_i210	config/igb/e1000_i210.c	/^static s32 igb_read_nvm_srrd_i210(struct e1000_hw *hw, u16 offset, u16 words,$/;"	f	typeref:typename:s32	file:
igb_read_part_string	config/igb/e1000_nvm.c	/^s32 igb_read_part_string(struct e1000_hw *hw, u8 *part_num, u32 part_num_size)$/;"	f	typeref:typename:s32
igb_read_pci_cfg	config/igb/igb_main.c	/^void igb_read_pci_cfg(struct e1000_hw *hw, u32 reg, u16 *value)$/;"	f	typeref:typename:void
igb_read_pcie_cap_reg	config/igb/igb_main.c	/^s32 igb_read_pcie_cap_reg(struct e1000_hw *hw, u32 reg, u16 *value)$/;"	f	typeref:typename:s32
igb_read_phy_reg	config/igb/igb.h	/^static inline s32 igb_read_phy_reg(struct e1000_hw *hw, u32 offset, u16 *data)$/;"	f	typeref:typename:s32
igb_read_phy_reg_82580	config/igb/e1000_82575.c	/^s32 igb_read_phy_reg_82580(struct e1000_hw *hw, u32 offset, u16 *data)$/;"	f	typeref:typename:s32
igb_read_phy_reg_i2c	config/igb/e1000_phy.c	/^s32 igb_read_phy_reg_i2c(struct e1000_hw *hw, u32 offset, u16 *data)$/;"	f	typeref:typename:s32
igb_read_phy_reg_igp	config/igb/e1000_phy.c	/^s32 igb_read_phy_reg_igp(struct e1000_hw *hw, u32 offset, u16 *data)$/;"	f	typeref:typename:s32
igb_read_phy_reg_mdic	config/igb/e1000_phy.c	/^s32 igb_read_phy_reg_mdic(struct e1000_hw *hw, u32 offset, u16 *data)$/;"	f	typeref:typename:s32
igb_read_phy_reg_sgmii_82575	config/igb/e1000_82575.c	/^static s32 igb_read_phy_reg_sgmii_82575(struct e1000_hw *hw, u32 offset,$/;"	f	typeref:typename:s32	file:
igb_read_posted_mbx	config/igb/e1000_mbx.c	/^static s32 igb_read_posted_mbx(struct e1000_hw *hw, u32 *msg, u16 size,$/;"	f	typeref:typename:s32	file:
igb_read_sfp_data_byte	config/igb/e1000_phy.c	/^s32 igb_read_sfp_data_byte(struct e1000_hw *hw, u16 offset, u8 *data)$/;"	f	typeref:typename:s32
igb_read_xmdio_reg	config/igb/e1000_i210.c	/^s32 igb_read_xmdio_reg(struct e1000_hw *hw, u16 addr, u8 dev_addr, u16 *data)$/;"	f	typeref:typename:s32
igb_ready_nvm_eeprom	config/igb/e1000_nvm.c	/^static s32 igb_ready_nvm_eeprom(struct e1000_hw *hw)$/;"	f	typeref:typename:s32	file:
igb_reg_info	config/igb/igb_main.c	/^struct igb_reg_info {$/;"	s	file:
igb_reg_info_tbl	config/igb/igb_main.c	/^static const struct igb_reg_info igb_reg_info_tbl[] = {$/;"	v	typeref:typename:const struct igb_reg_info[]	file:
igb_reg_test	config/igb/igb_ethtool.c	/^static int igb_reg_test(struct igb_adapter *adapter, u64 *data)$/;"	f	typeref:typename:int	file:
igb_reg_test	config/igb/igb_ethtool.c	/^struct igb_reg_test {$/;"	s	file:
igb_regdump	config/igb/igb_main.c	/^static void igb_regdump(struct e1000_hw *hw, struct igb_reg_info *reginfo)$/;"	f	typeref:typename:void	file:
igb_reinit_locked	config/igb/igb_main.c	/^void igb_reinit_locked(struct igb_adapter *adapter)$/;"	f	typeref:typename:void
igb_reinit_queues	config/igb/igb_main.c	/^int igb_reinit_queues(struct igb_adapter *adapter)$/;"	f	typeref:typename:int
igb_release_hw_control	config/igb/igb_main.c	/^static void igb_release_hw_control(struct igb_adapter *adapter)$/;"	f	typeref:typename:void	file:
igb_release_mbx_lock_pf	config/igb/e1000_mbx.c	/^static s32 igb_release_mbx_lock_pf(struct e1000_hw *hw, u16 vf_number)$/;"	f	typeref:typename:s32	file:
igb_release_nvm	config/igb/e1000_nvm.c	/^void igb_release_nvm(struct e1000_hw *hw)$/;"	f	typeref:typename:void
igb_release_nvm_82575	config/igb/e1000_82575.c	/^static void igb_release_nvm_82575(struct e1000_hw *hw)$/;"	f	typeref:typename:void	file:
igb_release_nvm_i210	config/igb/e1000_i210.c	/^static void igb_release_nvm_i210(struct e1000_hw *hw)$/;"	f	typeref:typename:void	file:
igb_release_phy_82575	config/igb/e1000_82575.c	/^static void igb_release_phy_82575(struct e1000_hw *hw)$/;"	f	typeref:typename:void	file:
igb_release_swfw_sync_82575	config/igb/e1000_82575.c	/^static void igb_release_swfw_sync_82575(struct e1000_hw *hw, u16 mask)$/;"	f	typeref:typename:void	file:
igb_release_swfw_sync_i210	config/igb/e1000_i210.c	/^void igb_release_swfw_sync_i210(struct e1000_hw *hw, u16 mask)$/;"	f	typeref:typename:void
igb_remove	config/igb/igb_main.c	/^static void igb_remove(struct pci_dev *pdev)$/;"	f	typeref:typename:void	file:
igb_remove_i2c	config/igb/igb_main.c	/^static void igb_remove_i2c(struct igb_adapter *adapter)$/;"	f	typeref:typename:void	file:
igb_request_irq	config/igb/igb_main.c	/^static int igb_request_irq(struct igb_adapter *adapter)$/;"	f	typeref:typename:int	file:
igb_request_msix	config/igb/igb_main.c	/^static int igb_request_msix(struct igb_adapter *adapter)$/;"	f	typeref:typename:int	file:
igb_reset	config/igb/igb_main.c	/^void igb_reset(struct igb_adapter *adapter)$/;"	f	typeref:typename:void
igb_reset_hw_82575	config/igb/e1000_82575.c	/^static s32 igb_reset_hw_82575(struct e1000_hw *hw)$/;"	f	typeref:typename:s32	file:
igb_reset_hw_82580	config/igb/e1000_82575.c	/^static s32 igb_reset_hw_82580(struct e1000_hw *hw)$/;"	f	typeref:typename:s32	file:
igb_reset_init_script_82575	config/igb/e1000_82575.c	/^static s32 igb_reset_init_script_82575(struct e1000_hw *hw)$/;"	f	typeref:typename:s32	file:
igb_reset_interrupt_capability	config/igb/igb_main.c	/^static void igb_reset_interrupt_capability(struct igb_adapter *adapter)$/;"	f	typeref:typename:void	file:
igb_reset_mdicnfg_82580	config/igb/e1000_82575.c	/^static s32 igb_reset_mdicnfg_82580(struct e1000_hw *hw)$/;"	f	typeref:typename:s32	file:
igb_reset_phy	config/igb/igb.h	/^static inline s32 igb_reset_phy(struct e1000_hw *hw)$/;"	f	typeref:typename:s32
igb_reset_q_vector	config/igb/igb_main.c	/^static void igb_reset_q_vector(struct igb_adapter *adapter, int v_idx)$/;"	f	typeref:typename:void	file:
igb_reset_task	config/igb/igb_main.c	/^static void igb_reset_task(struct work_struct *work)$/;"	f	typeref:typename:void	file:
igb_restore_vf_multicasts	config/igb/igb_main.c	/^static void igb_restore_vf_multicasts(struct igb_adapter *adapter)$/;"	f	typeref:typename:void	file:
igb_restore_vlan	config/igb/igb_main.c	/^static void igb_restore_vlan(struct igb_adapter *adapter)$/;"	f	typeref:typename:void	file:
igb_resume	config/igb/igb_main.c	/^static int __maybe_unused igb_resume(struct device *dev)$/;"	f	typeref:typename:int __maybe_unused	file:
igb_reuse_rx_page	config/igb/igb_main.c	/^static void igb_reuse_rx_page(struct igb_ring *rx_ring,$/;"	f	typeref:typename:void	file:
igb_ring	config/igb/igb.h	/^struct igb_ring {$/;"	s
igb_ring_container	config/igb/igb.h	/^struct igb_ring_container {$/;"	s
igb_ring_irq_enable	config/igb/igb_main.c	/^static void igb_ring_irq_enable(struct igb_q_vector *q_vector)$/;"	f	typeref:typename:void	file:
igb_run_loopback_test	config/igb/igb_ethtool.c	/^static int igb_run_loopback_test(struct igb_adapter *adapter)$/;"	f	typeref:typename:int	file:
igb_run_xdp	config/igb/igb_main.c	/^static struct sk_buff *igb_run_xdp(struct igb_adapter *adapter,$/;"	f	typeref:struct:sk_buff *	file:
igb_runtime_idle	config/igb/igb_main.c	/^static int __maybe_unused igb_runtime_idle(struct device *dev)$/;"	f	typeref:typename:int __maybe_unused	file:
igb_runtime_resume	config/igb/igb_main.c	/^static int __maybe_unused igb_runtime_resume(struct device *dev)$/;"	f	typeref:typename:int __maybe_unused	file:
igb_runtime_suspend	config/igb/igb_main.c	/^static int __maybe_unused igb_runtime_suspend(struct device *dev)$/;"	f	typeref:typename:int __maybe_unused	file:
igb_rx_buffer	config/igb/igb.h	/^struct igb_rx_buffer {$/;"	s
igb_rx_buffer_flip	config/igb/igb_main.c	/^static void igb_rx_buffer_flip(struct igb_ring *rx_ring,$/;"	f	typeref:typename:void	file:
igb_rx_bufsz	config/igb/igb.h	/^static inline unsigned int igb_rx_bufsz(struct igb_ring *ring)$/;"	f	typeref:typename:unsigned int
igb_rx_checksum	config/igb/igb_main.c	/^static inline void igb_rx_checksum(struct igb_ring *ring,$/;"	f	typeref:typename:void	file:
igb_rx_fifo_flush_82575	config/igb/e1000_82575.c	/^void igb_rx_fifo_flush_82575(struct e1000_hw *hw)$/;"	f	typeref:typename:void
igb_rx_frame_truesize	config/igb/igb_main.c	/^static unsigned int igb_rx_frame_truesize(struct igb_ring *rx_ring,$/;"	f	typeref:typename:unsigned int	file:
igb_rx_hash	config/igb/igb_main.c	/^static inline void igb_rx_hash(struct igb_ring *ring,$/;"	f	typeref:typename:void	file:
igb_rx_offset	config/igb/igb_main.c	/^static unsigned int igb_rx_offset(struct igb_ring *rx_ring)$/;"	f	typeref:typename:unsigned int	file:
igb_rx_pg_order	config/igb/igb.h	/^static inline unsigned int igb_rx_pg_order(struct igb_ring *ring)$/;"	f	typeref:typename:unsigned int
igb_rx_pg_size	config/igb/igb.h	/^#define igb_rx_pg_size(/;"	d
igb_rx_queue_stats	config/igb/igb.h	/^struct igb_rx_queue_stats {$/;"	s
igb_rxnfc_write_etype_filter	config/igb/igb_ethtool.c	/^static int igb_rxnfc_write_etype_filter(struct igb_adapter *adapter,$/;"	f	typeref:typename:int	file:
igb_rxnfc_write_vlan_prio_filter	config/igb/igb_ethtool.c	/^static int igb_rxnfc_write_vlan_prio_filter(struct igb_adapter *adapter,$/;"	f	typeref:typename:int	file:
igb_rxpbs_adjust_82580	config/igb/e1000_82575.c	/^u16 igb_rxpbs_adjust_82580(u32 data)$/;"	f	typeref:typename:u16
igb_save_cbs_params	config/igb/igb_main.c	/^static int igb_save_cbs_params(struct igb_adapter *adapter, int queue,$/;"	f	typeref:typename:int	file:
igb_save_txtime_params	config/igb/igb_main.c	/^static int igb_save_txtime_params(struct igb_adapter *adapter, int queue,$/;"	f	typeref:typename:int	file:
igb_scrub_vfta	config/igb/igb_main.c	/^static void igb_scrub_vfta(struct igb_adapter *adapter, u32 vfta_offset)$/;"	f	typeref:typename:void	file:
igb_set_channels	config/igb/igb_ethtool.c	/^static int igb_set_channels(struct net_device *netdev,$/;"	f	typeref:typename:int	file:
igb_set_coalesce	config/igb/igb_ethtool.c	/^static int igb_set_coalesce(struct net_device *netdev,$/;"	f	typeref:typename:int	file:
igb_set_d0_lplu_state_82575	config/igb/e1000_82575.c	/^static s32 igb_set_d0_lplu_state_82575(struct e1000_hw *hw, bool active)$/;"	f	typeref:typename:s32	file:
igb_set_d0_lplu_state_82580	config/igb/e1000_82575.c	/^static s32 igb_set_d0_lplu_state_82580(struct e1000_hw *hw, bool active)$/;"	f	typeref:typename:s32	file:
igb_set_d3_lplu_state	config/igb/e1000_phy.c	/^s32 igb_set_d3_lplu_state(struct e1000_hw *hw, bool active)$/;"	f	typeref:typename:s32
igb_set_d3_lplu_state_82580	config/igb/e1000_82575.c	/^static s32 igb_set_d3_lplu_state_82580(struct e1000_hw *hw, bool active)$/;"	f	typeref:typename:s32	file:
igb_set_default_fc	config/igb/e1000_mac.c	/^static s32 igb_set_default_fc(struct e1000_hw *hw)$/;"	f	typeref:typename:s32	file:
igb_set_default_mac_filter	config/igb/igb_main.c	/^static void igb_set_default_mac_filter(struct igb_adapter *adapter)$/;"	f	typeref:typename:void	file:
igb_set_eee	config/igb/igb_ethtool.c	/^static int igb_set_eee(struct net_device *netdev,$/;"	f	typeref:typename:int	file:
igb_set_eee_i350	config/igb/e1000_82575.c	/^s32 igb_set_eee_i350(struct e1000_hw *hw, bool adv1G, bool adv100M)$/;"	f	typeref:typename:s32
igb_set_eee_i354	config/igb/e1000_82575.c	/^s32 igb_set_eee_i354(struct e1000_hw *hw, bool adv1G, bool adv100M)$/;"	f	typeref:typename:s32
igb_set_eeprom	config/igb/igb_ethtool.c	/^static int igb_set_eeprom(struct net_device *netdev,$/;"	f	typeref:typename:int	file:
igb_set_ethtool_ops	config/igb/igb_ethtool.c	/^void igb_set_ethtool_ops(struct net_device *netdev)$/;"	f	typeref:typename:void
igb_set_fc_watermarks	config/igb/e1000_mac.c	/^static void igb_set_fc_watermarks(struct e1000_hw *hw)$/;"	f	typeref:typename:void	file:
igb_set_features	config/igb/igb_main.c	/^static int igb_set_features(struct net_device *netdev,$/;"	f	typeref:typename:int	file:
igb_set_flag_queue_pairs	config/igb/igb_main.c	/^void igb_set_flag_queue_pairs(struct igb_adapter *adapter,$/;"	f	typeref:typename:void
igb_set_fw_version	config/igb/igb_main.c	/^void igb_set_fw_version(struct igb_adapter *adapter)$/;"	f	typeref:typename:void
igb_set_i2c_clk	config/igb/igb_main.c	/^static void igb_set_i2c_clk(void *data, int state)$/;"	f	typeref:typename:void	file:
igb_set_i2c_data	config/igb/igb_main.c	/^static void igb_set_i2c_data(void *data, int state)$/;"	f	typeref:typename:void	file:
igb_set_interrupt_capability	config/igb/igb_main.c	/^static void igb_set_interrupt_capability(struct igb_adapter *adapter, bool msix)$/;"	f	typeref:typename:void	file:
igb_set_itr	config/igb/igb_main.c	/^static void igb_set_itr(struct igb_q_vector *q_vector)$/;"	f	typeref:typename:void	file:
igb_set_link_ksettings	config/igb/igb_ethtool.c	/^static int igb_set_link_ksettings(struct net_device *netdev,$/;"	f	typeref:typename:int	file:
igb_set_mac	config/igb/igb_main.c	/^static int igb_set_mac(struct net_device *netdev, void *p)$/;"	f	typeref:typename:int	file:
igb_set_master_slave_mode	config/igb/e1000_phy.c	/^static s32 igb_set_master_slave_mode(struct e1000_hw *hw)$/;"	f	typeref:typename:s32	file:
igb_set_msglevel	config/igb/igb_ethtool.c	/^static void igb_set_msglevel(struct net_device *netdev, u32 data)$/;"	f	typeref:typename:void	file:
igb_set_pauseparam	config/igb/igb_ethtool.c	/^static int igb_set_pauseparam(struct net_device *netdev,$/;"	f	typeref:typename:int	file:
igb_set_pcie_completion_timeout	config/igb/e1000_82575.c	/^static s32 igb_set_pcie_completion_timeout(struct e1000_hw *hw)$/;"	f	typeref:typename:s32	file:
igb_set_phy_loopback	config/igb/igb_ethtool.c	/^static int igb_set_phy_loopback(struct igb_adapter *adapter)$/;"	f	typeref:typename:int	file:
igb_set_phys_id	config/igb/igb_ethtool.c	/^static int igb_set_phys_id(struct net_device *netdev,$/;"	f	typeref:typename:int	file:
igb_set_priv_flags	config/igb/igb_ethtool.c	/^static int igb_set_priv_flags(struct net_device *netdev, u32 priv_flags)$/;"	f	typeref:typename:int	file:
igb_set_ringparam	config/igb/igb_ethtool.c	/^static int igb_set_ringparam(struct net_device *netdev,$/;"	f	typeref:typename:int	file:
igb_set_rss_hash_opt	config/igb/igb_ethtool.c	/^static int igb_set_rss_hash_opt(struct igb_adapter *adapter,$/;"	f	typeref:typename:int	file:
igb_set_rx_buffer_len	config/igb/igb_main.c	/^static void igb_set_rx_buffer_len(struct igb_adapter *adapter,$/;"	f	typeref:typename:void	file:
igb_set_rx_mode	config/igb/igb_main.c	/^static void igb_set_rx_mode(struct net_device *netdev)$/;"	f	typeref:typename:void	file:
igb_set_rxfh	config/igb/igb_ethtool.c	/^static int igb_set_rxfh(struct net_device *netdev, const u32 *indir,$/;"	f	typeref:typename:int	file:
igb_set_rxnfc	config/igb/igb_ethtool.c	/^static int igb_set_rxnfc(struct net_device *dev, struct ethtool_rxnfc *cmd)$/;"	f	typeref:typename:int	file:
igb_set_sfp_media_type_82575	config/igb/e1000_82575.c	/^static s32 igb_set_sfp_media_type_82575(struct e1000_hw *hw)$/;"	f	typeref:typename:s32	file:
igb_set_spd_dplx	config/igb/igb_main.c	/^int igb_set_spd_dplx(struct igb_adapter *adapter, u32 spd, u8 dplx)$/;"	f	typeref:typename:int
igb_set_uta	config/igb/igb_main.c	/^static void igb_set_uta(struct igb_adapter *adapter, bool set)$/;"	f	typeref:typename:void	file:
igb_set_vf_mac	config/igb/igb_main.c	/^static int igb_set_vf_mac(struct igb_adapter *adapter,$/;"	f	typeref:typename:int	file:
igb_set_vf_mac_addr	config/igb/igb_main.c	/^static int igb_set_vf_mac_addr(struct igb_adapter *adapter, u32 *msg, int vf)$/;"	f	typeref:typename:int	file:
igb_set_vf_mac_filter	config/igb/igb_main.c	/^static int igb_set_vf_mac_filter(struct igb_adapter *adapter, const int vf,$/;"	f	typeref:typename:int	file:
igb_set_vf_multicasts	config/igb/igb_main.c	/^static int igb_set_vf_multicasts(struct igb_adapter *adapter,$/;"	f	typeref:typename:int	file:
igb_set_vf_promisc	config/igb/igb_main.c	/^static int igb_set_vf_promisc(struct igb_adapter *adapter, u32 *msgbuf, u32 vf)$/;"	f	typeref:typename:int	file:
igb_set_vf_rate_limit	config/igb/igb_main.c	/^static void igb_set_vf_rate_limit(struct e1000_hw *hw, int vf, int tx_rate,$/;"	f	typeref:typename:void	file:
igb_set_vf_rlpml	config/igb/igb_main.c	/^static inline int igb_set_vf_rlpml(struct igb_adapter *adapter, int size,$/;"	f	typeref:typename:int	file:
igb_set_vf_vlan	config/igb/igb_main.c	/^static s32 igb_set_vf_vlan(struct igb_adapter *adapter, u32 vid,$/;"	f	typeref:typename:s32	file:
igb_set_vf_vlan_msg	config/igb/igb_main.c	/^static int igb_set_vf_vlan_msg(struct igb_adapter *adapter, u32 *msgbuf, u32 vf)$/;"	f	typeref:typename:int	file:
igb_set_vf_vlan_strip	config/igb/igb_main.c	/^static inline void igb_set_vf_vlan_strip(struct igb_adapter *adapter,$/;"	f	typeref:typename:void	file:
igb_set_vmolr	config/igb/igb_main.c	/^static inline void igb_set_vmolr(struct igb_adapter *adapter,$/;"	f	typeref:typename:void	file:
igb_set_vmvir	config/igb/igb_main.c	/^static void igb_set_vmvir(struct igb_adapter *adapter, u32 vid, u32 vf)$/;"	f	typeref:typename:void	file:
igb_set_wol	config/igb/igb_ethtool.c	/^static int igb_set_wol(struct net_device *netdev, struct ethtool_wolinfo *wol)$/;"	f	typeref:typename:int	file:
igb_setup_all_rx_resources	config/igb/igb_main.c	/^static int igb_setup_all_rx_resources(struct igb_adapter *adapter)$/;"	f	typeref:typename:int	file:
igb_setup_all_tx_resources	config/igb/igb_main.c	/^static int igb_setup_all_tx_resources(struct igb_adapter *adapter)$/;"	f	typeref:typename:int	file:
igb_setup_copper_link	config/igb/e1000_phy.c	/^s32 igb_setup_copper_link(struct e1000_hw *hw)$/;"	f	typeref:typename:s32
igb_setup_copper_link_82575	config/igb/e1000_82575.c	/^static s32 igb_setup_copper_link_82575(struct e1000_hw *hw)$/;"	f	typeref:typename:s32	file:
igb_setup_dca	config/igb/igb_main.c	/^static void igb_setup_dca(struct igb_adapter *adapter)$/;"	f	typeref:typename:void	file:
igb_setup_desc_rings	config/igb/igb_ethtool.c	/^static int igb_setup_desc_rings(struct igb_adapter *adapter)$/;"	f	typeref:typename:int	file:
igb_setup_link	config/igb/e1000_mac.c	/^s32 igb_setup_link(struct e1000_hw *hw)$/;"	f	typeref:typename:s32
igb_setup_loopback_test	config/igb/igb_ethtool.c	/^static int igb_setup_loopback_test(struct igb_adapter *adapter)$/;"	f	typeref:typename:int	file:
igb_setup_mrqc	config/igb/igb_main.c	/^static void igb_setup_mrqc(struct igb_adapter *adapter)$/;"	f	typeref:typename:void	file:
igb_setup_rctl	config/igb/igb_main.c	/^void igb_setup_rctl(struct igb_adapter *adapter)$/;"	f	typeref:typename:void
igb_setup_rx_resources	config/igb/igb_main.c	/^int igb_setup_rx_resources(struct igb_ring *rx_ring)$/;"	f	typeref:typename:int
igb_setup_serdes_link_82575	config/igb/e1000_82575.c	/^static s32 igb_setup_serdes_link_82575(struct e1000_hw *hw)$/;"	f	typeref:typename:s32	file:
igb_setup_srrctl	config/igb/igb_main.c	/^void igb_setup_srrctl(struct igb_adapter *adapter, struct igb_ring *ring)$/;"	f	typeref:typename:void
igb_setup_tc	config/igb/igb_main.c	/^static int igb_setup_tc(struct net_device *dev, enum tc_setup_type type,$/;"	f	typeref:typename:int	file:
igb_setup_tc_block_cb	config/igb/igb_main.c	/^static int igb_setup_tc_block_cb(enum tc_setup_type type, void *type_data,$/;"	f	typeref:typename:int	file:
igb_setup_tc_cls_flower	config/igb/igb_main.c	/^static int igb_setup_tc_cls_flower(struct igb_adapter *adapter,$/;"	f	typeref:typename:int	file:
igb_setup_tctl	config/igb/igb_main.c	/^void igb_setup_tctl(struct igb_adapter *adapter)$/;"	f	typeref:typename:void
igb_setup_tx_mode	config/igb/igb_main.c	/^static void igb_setup_tx_mode(struct igb_adapter *adapter)$/;"	f	typeref:typename:void	file:
igb_setup_tx_resources	config/igb/igb_main.c	/^int igb_setup_tx_resources(struct igb_ring *tx_ring)$/;"	f	typeref:typename:int
igb_sgmii_active_82575	config/igb/e1000_82575.c	/^static bool igb_sgmii_active_82575(struct e1000_hw *hw)$/;"	f	typeref:typename:bool	file:
igb_sgmii_uses_mdio_82575	config/igb/e1000_82575.c	/^static bool igb_sgmii_uses_mdio_82575(struct e1000_hw *hw)$/;"	f	typeref:typename:bool	file:
igb_shift_in_eec_bits	config/igb/e1000_nvm.c	/^static u16 igb_shift_in_eec_bits(struct e1000_hw *hw, u16 count)$/;"	f	typeref:typename:u16	file:
igb_shift_out_eec_bits	config/igb/e1000_nvm.c	/^static void igb_shift_out_eec_bits(struct e1000_hw *hw, u16 data, u16 count)$/;"	f	typeref:typename:void	file:
igb_shutdown	config/igb/igb_main.c	/^static void igb_shutdown(struct pci_dev *pdev)$/;"	f	typeref:typename:void	file:
igb_shutdown_serdes_link_82575	config/igb/e1000_82575.c	/^void igb_shutdown_serdes_link_82575(struct e1000_hw *hw)$/;"	f	typeref:typename:void
igb_skb_pad	config/igb/igb.h	/^static inline int igb_skb_pad(void)$/;"	f	typeref:typename:int
igb_spoof_check	config/igb/igb_main.c	/^static void igb_spoof_check(struct igb_adapter *adapter)$/;"	f	typeref:typename:void	file:
igb_sriov_reinit	config/igb/igb_main.c	/^static int igb_sriov_reinit(struct pci_dev *dev)$/;"	f	typeref:typename:int	file:
igb_standby_nvm	config/igb/e1000_nvm.c	/^static void igb_standby_nvm(struct e1000_hw *hw)$/;"	f	typeref:typename:void	file:
igb_stats	config/igb/igb_ethtool.c	/^struct igb_stats {$/;"	s	file:
igb_suspend	config/igb/igb_main.c	/^static int __maybe_unused igb_suspend(struct device *dev)$/;"	f	typeref:typename:int __maybe_unused	file:
igb_sw_init	config/igb/igb_main.c	/^static int igb_sw_init(struct igb_adapter *adapter)$/;"	f	typeref:typename:int	file:
igb_sysfs_del_adapter	config/igb/igb_hwmon.c	/^static void igb_sysfs_del_adapter(struct igb_adapter *adapter)$/;"	f	typeref:typename:void	file:
igb_sysfs_exit	config/igb/igb_hwmon.c	/^void igb_sysfs_exit(struct igb_adapter *adapter)$/;"	f	typeref:typename:void
igb_sysfs_init	config/igb/igb_hwmon.c	/^int igb_sysfs_init(struct igb_adapter *adapter)$/;"	f	typeref:typename:int
igb_test_intr	config/igb/igb_ethtool.c	/^static irqreturn_t igb_test_intr(int irq, void *data)$/;"	f	typeref:typename:irqreturn_t	file:
igb_test_staterr	config/igb/igb.h	/^static inline __le32 igb_test_staterr(union e1000_adv_rx_desc *rx_desc,$/;"	f	typeref:typename:__le32
igb_thermal_sensor_event	config/igb/igb_main.c	/^static bool igb_thermal_sensor_event(struct e1000_hw *hw, u32 event)$/;"	f	typeref:typename:bool	file:
igb_tso	config/igb/igb_main.c	/^static int igb_tso(struct igb_ring *tx_ring,$/;"	f	typeref:typename:int	file:
igb_tsync_interrupt	config/igb/igb_main.c	/^static void igb_tsync_interrupt(struct igb_adapter *adapter)$/;"	f	typeref:typename:void	file:
igb_tx_buf_type	config/igb/igb.h	/^enum igb_tx_buf_type {$/;"	g
igb_tx_buffer	config/igb/igb.h	/^struct igb_tx_buffer {$/;"	s
igb_tx_cmd_type	config/igb/igb_main.c	/^static u32 igb_tx_cmd_type(struct sk_buff *skb, u32 tx_flags)$/;"	f	typeref:typename:u32	file:
igb_tx_csum	config/igb/igb_main.c	/^static void igb_tx_csum(struct igb_ring *tx_ring, struct igb_tx_buffer *first)$/;"	f	typeref:typename:void	file:
igb_tx_ctxtdesc	config/igb/igb_main.c	/^static void igb_tx_ctxtdesc(struct igb_ring *tx_ring,$/;"	f	typeref:typename:void	file:
igb_tx_flags	config/igb/igb.h	/^enum igb_tx_flags {$/;"	g
igb_tx_map	config/igb/igb_main.c	/^static int igb_tx_map(struct igb_ring *tx_ring,$/;"	f	typeref:typename:int	file:
igb_tx_olinfo_status	config/igb/igb_main.c	/^static void igb_tx_olinfo_status(struct igb_ring *tx_ring,$/;"	f	typeref:typename:void	file:
igb_tx_queue_mapping	config/igb/igb_main.c	/^static inline struct igb_ring *igb_tx_queue_mapping(struct igb_adapter *adapter,$/;"	f	typeref:struct:igb_ring *	file:
igb_tx_queue_stats	config/igb/igb.h	/^struct igb_tx_queue_stats {$/;"	s
igb_tx_timeout	config/igb/igb_main.c	/^static void igb_tx_timeout(struct net_device *netdev, unsigned int __always_unused txqueue)$/;"	f	typeref:typename:void	file:
igb_uc_sync	config/igb/igb_main.c	/^static int igb_uc_sync(struct net_device *netdev, const unsigned char *addr)$/;"	f	typeref:typename:int	file:
igb_uc_unsync	config/igb/igb_main.c	/^static int igb_uc_unsync(struct net_device *netdev, const unsigned char *addr)$/;"	f	typeref:typename:int	file:
igb_unlock_mbx	config/igb/e1000_mbx.c	/^s32 igb_unlock_mbx(struct e1000_hw *hw, u16 mbx_id)$/;"	f	typeref:typename:s32
igb_up	config/igb/igb_main.c	/^int igb_up(struct igb_adapter *adapter)$/;"	f	typeref:typename:int
igb_update_dca	config/igb/igb_main.c	/^static void igb_update_dca(struct igb_q_vector *q_vector)$/;"	f	typeref:typename:void	file:
igb_update_ethtool_nfc_entry	config/igb/igb_ethtool.c	/^static int igb_update_ethtool_nfc_entry(struct igb_adapter *adapter,$/;"	f	typeref:typename:int	file:
igb_update_flash_i210	config/igb/e1000_i210.c	/^static s32 igb_update_flash_i210(struct e1000_hw *hw)$/;"	f	typeref:typename:s32	file:
igb_update_itr	config/igb/igb_main.c	/^static void igb_update_itr(struct igb_q_vector *q_vector,$/;"	f	typeref:typename:void	file:
igb_update_mc_addr_list	config/igb/e1000_mac.c	/^void igb_update_mc_addr_list(struct e1000_hw *hw,$/;"	f	typeref:typename:void
igb_update_mng_vlan	config/igb/igb_main.c	/^static void igb_update_mng_vlan(struct igb_adapter *adapter)$/;"	f	typeref:typename:void	file:
igb_update_nvm_checksum	config/igb/e1000_nvm.c	/^s32 igb_update_nvm_checksum(struct e1000_hw *hw)$/;"	f	typeref:typename:s32
igb_update_nvm_checksum_82580	config/igb/e1000_82575.c	/^static s32 igb_update_nvm_checksum_82580(struct e1000_hw *hw)$/;"	f	typeref:typename:s32	file:
igb_update_nvm_checksum_i210	config/igb/e1000_i210.c	/^static s32 igb_update_nvm_checksum_i210(struct e1000_hw *hw)$/;"	f	typeref:typename:s32	file:
igb_update_nvm_checksum_i350	config/igb/e1000_82575.c	/^static s32 igb_update_nvm_checksum_i350(struct e1000_hw *hw)$/;"	f	typeref:typename:s32	file:
igb_update_nvm_checksum_with_offset	config/igb/e1000_82575.c	/^static s32 igb_update_nvm_checksum_with_offset(struct e1000_hw *hw, u16 offset)$/;"	f	typeref:typename:s32	file:
igb_update_pf_vlvf	config/igb/igb_main.c	/^static void igb_update_pf_vlvf(struct igb_adapter *adapter, u32 vid)$/;"	f	typeref:typename:void	file:
igb_update_phy_info	config/igb/igb_main.c	/^static void igb_update_phy_info(struct timer_list *t)$/;"	f	typeref:typename:void	file:
igb_update_ring_itr	config/igb/igb_main.c	/^static void igb_update_ring_itr(struct igb_q_vector *q_vector)$/;"	f	typeref:typename:void	file:
igb_update_rx_dca	config/igb/igb_main.c	/^static void igb_update_rx_dca(struct igb_adapter *adapter,$/;"	f	typeref:typename:void	file:
igb_update_stats	config/igb/igb_main.c	/^void igb_update_stats(struct igb_adapter *adapter)$/;"	f	typeref:typename:void
igb_update_tx_dca	config/igb/igb_main.c	/^static void igb_update_tx_dca(struct igb_adapter *adapter,$/;"	f	typeref:typename:void	file:
igb_valid_led_default	config/igb/e1000_mac.c	/^static s32 igb_valid_led_default(struct e1000_hw *hw, u16 *data)$/;"	f	typeref:typename:s32	file:
igb_valid_led_default_i210	config/igb/e1000_i210.c	/^s32 igb_valid_led_default_i210(struct e1000_hw *hw, u16 *data)$/;"	f	typeref:typename:s32
igb_validate_mdi_setting	config/igb/e1000_mac.c	/^s32 igb_validate_mdi_setting(struct e1000_hw *hw)$/;"	f	typeref:typename:s32
igb_validate_nvm_checksum	config/igb/e1000_nvm.c	/^s32 igb_validate_nvm_checksum(struct e1000_hw *hw)$/;"	f	typeref:typename:s32
igb_validate_nvm_checksum_82580	config/igb/e1000_82575.c	/^static s32 igb_validate_nvm_checksum_82580(struct e1000_hw *hw)$/;"	f	typeref:typename:s32	file:
igb_validate_nvm_checksum_i210	config/igb/e1000_i210.c	/^static s32 igb_validate_nvm_checksum_i210(struct e1000_hw *hw)$/;"	f	typeref:typename:s32	file:
igb_validate_nvm_checksum_i350	config/igb/e1000_82575.c	/^static s32 igb_validate_nvm_checksum_i350(struct e1000_hw *hw)$/;"	f	typeref:typename:s32	file:
igb_validate_nvm_checksum_with_offset	config/igb/e1000_82575.c	/^static s32 igb_validate_nvm_checksum_with_offset(struct e1000_hw *hw,$/;"	f	typeref:typename:s32	file:
igb_vf_configure	config/igb/igb_main.c	/^static int igb_vf_configure(struct igb_adapter *adapter, int vf)$/;"	f	typeref:typename:int	file:
igb_vf_reset	config/igb/igb_main.c	/^static inline void igb_vf_reset(struct igb_adapter *adapter, u32 vf)$/;"	f	typeref:typename:void	file:
igb_vf_reset_event	config/igb/igb_main.c	/^static void igb_vf_reset_event(struct igb_adapter *adapter, u32 vf)$/;"	f	typeref:typename:void	file:
igb_vf_reset_msg	config/igb/igb_main.c	/^static void igb_vf_reset_msg(struct igb_adapter *adapter, u32 vf)$/;"	f	typeref:typename:void	file:
igb_vfta_set	config/igb/e1000_mac.c	/^s32 igb_vfta_set(struct e1000_hw *hw, u32 vlan, u32 vind,$/;"	f	typeref:typename:s32
igb_vlan_mode	config/igb/igb_main.c	/^static void igb_vlan_mode(struct net_device *netdev, netdev_features_t features)$/;"	f	typeref:typename:void	file:
igb_vlan_promisc_disable	config/igb/igb_main.c	/^static void igb_vlan_promisc_disable(struct igb_adapter *adapter)$/;"	f	typeref:typename:void	file:
igb_vlan_promisc_enable	config/igb/igb_main.c	/^static int igb_vlan_promisc_enable(struct igb_adapter *adapter)$/;"	f	typeref:typename:int	file:
igb_vlan_rx_add_vid	config/igb/igb_main.c	/^static int igb_vlan_rx_add_vid(struct net_device *netdev,$/;"	f	typeref:typename:int	file:
igb_vlan_rx_kill_vid	config/igb/igb_main.c	/^static int igb_vlan_rx_kill_vid(struct net_device *netdev,$/;"	f	typeref:typename:int	file:
igb_vmdq_set_anti_spoofing_pf	config/igb/e1000_82575.c	/^void igb_vmdq_set_anti_spoofing_pf(struct e1000_hw *hw, bool enable, int pf)$/;"	f	typeref:typename:void
igb_vmdq_set_loopback_pf	config/igb/e1000_82575.c	/^void igb_vmdq_set_loopback_pf(struct e1000_hw *hw, bool enable)$/;"	f	typeref:typename:void
igb_vmdq_set_replication_pf	config/igb/e1000_82575.c	/^void igb_vmdq_set_replication_pf(struct e1000_hw *hw, bool enable)$/;"	f	typeref:typename:void
igb_vmm_control	config/igb/igb_main.c	/^static void igb_vmm_control(struct igb_adapter *adapter)$/;"	f	typeref:typename:void	file:
igb_wait_autoneg	config/igb/e1000_phy.c	/^static s32 igb_wait_autoneg(struct e1000_hw *hw)$/;"	f	typeref:typename:s32	file:
igb_watchdog	config/igb/igb_main.c	/^static void igb_watchdog(struct timer_list *t)$/;"	f	typeref:typename:void	file:
igb_watchdog_task	config/igb/igb_main.c	/^static void igb_watchdog_task(struct work_struct *work)$/;"	f	typeref:typename:void	file:
igb_write_8bit_ctrl_reg	config/igb/e1000_mac.c	/^s32 igb_write_8bit_ctrl_reg(struct e1000_hw *hw, u32 reg,$/;"	f	typeref:typename:s32
igb_write_i2c_byte	config/igb/igb_main.c	/^s32 igb_write_i2c_byte(struct e1000_hw *hw, u8 byte_offset,$/;"	f	typeref:typename:s32
igb_write_itr	config/igb/igb_main.c	/^static void igb_write_itr(struct igb_q_vector *q_vector)$/;"	f	typeref:typename:void	file:
igb_write_ivar	config/igb/igb_main.c	/^static void igb_write_ivar(struct e1000_hw *hw, int msix_vector,$/;"	f	typeref:typename:void	file:
igb_write_mbx	config/igb/e1000_mbx.c	/^s32 igb_write_mbx(struct e1000_hw *hw, u32 *msg, u16 size, u16 mbx_id)$/;"	f	typeref:typename:s32
igb_write_mbx_pf	config/igb/e1000_mbx.c	/^static s32 igb_write_mbx_pf(struct e1000_hw *hw, u32 *msg, u16 size,$/;"	f	typeref:typename:s32	file:
igb_write_mc_addr_list	config/igb/igb_main.c	/^static int igb_write_mc_addr_list(struct net_device *netdev)$/;"	f	typeref:typename:int	file:
igb_write_nvm_spi	config/igb/e1000_nvm.c	/^s32 igb_write_nvm_spi(struct e1000_hw *hw, u16 offset, u16 words, u16 *data)$/;"	f	typeref:typename:s32
igb_write_nvm_srwr	config/igb/e1000_i210.c	/^static s32 igb_write_nvm_srwr(struct e1000_hw *hw, u16 offset, u16 words,$/;"	f	typeref:typename:s32	file:
igb_write_nvm_srwr_i210	config/igb/e1000_i210.c	/^static s32 igb_write_nvm_srwr_i210(struct e1000_hw *hw, u16 offset, u16 words,$/;"	f	typeref:typename:s32	file:
igb_write_pci_cfg	config/igb/igb_main.c	/^void igb_write_pci_cfg(struct e1000_hw *hw, u32 reg, u16 *value)$/;"	f	typeref:typename:void
igb_write_pcie_cap_reg	config/igb/igb_main.c	/^s32 igb_write_pcie_cap_reg(struct e1000_hw *hw, u32 reg, u16 *value)$/;"	f	typeref:typename:s32
igb_write_phy_reg	config/igb/igb.h	/^static inline s32 igb_write_phy_reg(struct e1000_hw *hw, u32 offset, u16 data)$/;"	f	typeref:typename:s32
igb_write_phy_reg_82580	config/igb/e1000_82575.c	/^s32 igb_write_phy_reg_82580(struct e1000_hw *hw, u32 offset, u16 data)$/;"	f	typeref:typename:s32
igb_write_phy_reg_i2c	config/igb/e1000_phy.c	/^s32 igb_write_phy_reg_i2c(struct e1000_hw *hw, u32 offset, u16 data)$/;"	f	typeref:typename:s32
igb_write_phy_reg_igp	config/igb/e1000_phy.c	/^s32 igb_write_phy_reg_igp(struct e1000_hw *hw, u32 offset, u16 data)$/;"	f	typeref:typename:s32
igb_write_phy_reg_mdic	config/igb/e1000_phy.c	/^s32 igb_write_phy_reg_mdic(struct e1000_hw *hw, u32 offset, u16 data)$/;"	f	typeref:typename:s32
igb_write_phy_reg_sgmii_82575	config/igb/e1000_82575.c	/^static s32 igb_write_phy_reg_sgmii_82575(struct e1000_hw *hw, u32 offset,$/;"	f	typeref:typename:s32	file:
igb_write_posted_mbx	config/igb/e1000_mbx.c	/^static s32 igb_write_posted_mbx(struct e1000_hw *hw, u32 *msg, u16 size,$/;"	f	typeref:typename:s32	file:
igb_write_rss_indir_tbl	config/igb/igb_ethtool.c	/^void igb_write_rss_indir_tbl(struct igb_adapter *adapter)$/;"	f	typeref:typename:void
igb_write_vfta	config/igb/e1000_mac.c	/^void igb_write_vfta(struct e1000_hw *hw, u32 offset, u32 value)$/;"	f	typeref:typename:void
igb_write_vfta_i350	config/igb/e1000_82575.c	/^static void igb_write_vfta_i350(struct e1000_hw *hw, u32 offset, u32 value)$/;"	f	typeref:typename:void	file:
igb_write_xmdio_reg	config/igb/e1000_i210.c	/^s32 igb_write_xmdio_reg(struct e1000_hw *hw, u16 addr, u8 dev_addr, u16 data)$/;"	f	typeref:typename:s32
igb_xdp	config/igb/igb_main.c	/^static int igb_xdp(struct net_device *dev, struct netdev_bpf *xdp)$/;"	f	typeref:typename:int	file:
igb_xdp_ring_update_tail	config/igb/igb_main.c	/^static void igb_xdp_ring_update_tail(struct igb_ring *ring)$/;"	f	typeref:typename:void	file:
igb_xdp_setup	config/igb/igb_main.c	/^static int igb_xdp_setup(struct net_device *dev, struct netdev_bpf *bpf)$/;"	f	typeref:typename:int	file:
igb_xdp_tx_queue_mapping	config/igb/igb_main.c	/^static struct igb_ring *igb_xdp_tx_queue_mapping(struct igb_adapter *adapter)$/;"	f	typeref:struct:igb_ring *	file:
igb_xdp_xmit	config/igb/igb_main.c	/^static int igb_xdp_xmit(struct net_device *dev, int n,$/;"	f	typeref:typename:int	file:
igb_xdp_xmit_back	config/igb/igb_main.c	/^static int igb_xdp_xmit_back(struct igb_adapter *adapter, struct xdp_buff *xdp)$/;"	f	typeref:typename:int	file:
igb_xmit_frame	config/igb/igb_main.c	/^static netdev_tx_t igb_xmit_frame(struct sk_buff *skb,$/;"	f	typeref:typename:netdev_tx_t	file:
igb_xmit_frame_ring	config/igb/igb_main.c	/^netdev_tx_t igb_xmit_frame_ring(struct sk_buff *skb,$/;"	f	typeref:typename:netdev_tx_t
igb_xmit_xdp_ring	config/igb/igb_main.c	/^int igb_xmit_xdp_ring(struct igb_adapter *adapter,$/;"	f	typeref:typename:int
in_ifs_mode	config/igb/e1000_hw.h	/^	bool in_ifs_mode;$/;"	m	struct:e1000_mac_info	typeref:typename:bool
inc_flow_timer	src/flow.c	/^void inc_flow_timer(struct flow *flow)$/;"	f	typeref:typename:void
init_flow_timer	src/flow.c	/^void init_flow_timer(struct flow *flow, struct timespec *now)$/;"	f	typeref:typename:void
init_hw	config/igb/e1000_hw.h	/^	s32 (*init_hw)(struct e1000_hw *);$/;"	m	struct:e1000_mac_operations	typeref:typename:s32 (*)(struct e1000_hw *)
init_params	config/igb/e1000_hw.h	/^	s32 (*init_params)(struct e1000_hw *hw);$/;"	m	struct:e1000_mbx_operations	typeref:typename:s32 (*)(struct e1000_hw * hw)
init_schedule_state	src/sche.c	/^void init_schedule_state(struct schedule_state *schedule_state, const struct flow_state *state){$/;"	f	typeref:typename:void
init_thermal_sensor_thresh	config/igb/e1000_hw.h	/^	s32 (*init_thermal_sensor_thresh)(struct e1000_hw *);$/;"	m	struct:e1000_mac_operations	typeref:typename:s32 (*)(struct e1000_hw *)
interface	src/listener.c	/^static char *interface = "eth0";$/;"	v	typeref:typename:char *	file:
interface	src/talker.c	/^static char *interface = "eth0";$/;"	v	typeref:typename:char *	file:
interface_config	src/flow.h	/^struct interface_config$/;"	s
interface_name	src/flow.h	/^    char *interface_name;$/;"	m	struct:interface_config	typeref:typename:char *
invm_img_type	config/igb/e1000_nvm.h	/^	u8 invm_img_type;$/;"	m	struct:e1000_fw_version	typeref:typename:u8
invm_major	config/igb/e1000_nvm.h	/^	u8 invm_major;$/;"	m	struct:e1000_fw_version	typeref:typename:u8
invm_minor	config/igb/e1000_nvm.h	/^	u8 invm_minor;$/;"	m	struct:e1000_fw_version	typeref:typename:u8
io_addr	config/igb/igb.h	/^	u8 __iomem *io_addr; \/* Mainly for iounmap use *\/$/;"	m	struct:igb_adapter	typeref:typename:u8 __iomem *
io_base	config/igb/e1000_hw.h	/^	unsigned long io_base;$/;"	m	struct:e1000_hw	typeref:typename:unsigned long
ip_id	config/igb/e1000_82575.h	/^					__le16 ip_id;    \/* IP id *\/$/;"	m	struct:e1000_adv_rx_desc::__anon265ab8310208::__anon265ab8310308::__anon265ab831050a::__anon265ab8310608	typeref:typename:__le16
ipv4_hdr	src/dpdk.h	/^struct ipv4_hdr$/;"	s
is_any_cbs_enabled	config/igb/igb_main.c	/^static bool is_any_cbs_enabled(struct igb_adapter *adapter)$/;"	f	typeref:typename:bool	file:
is_any_txtime_enabled	config/igb/igb_main.c	/^static bool is_any_txtime_enabled(struct igb_adapter *adapter)$/;"	f	typeref:typename:bool	file:
is_fqtss_enabled	config/igb/igb_main.c	/^static bool is_fqtss_enabled(struct igb_adapter *adapter)$/;"	f	typeref:typename:bool	file:
is_mdix	config/igb/e1000_hw.h	/^	bool is_mdix;$/;"	m	struct:e1000_phy_info	typeref:typename:bool
itr	config/igb/igb.h	/^	u8 itr;				\/* current ITR setting for ring *\/$/;"	m	struct:igb_ring_container	typeref:typename:u8
itr_register	config/igb/igb.h	/^	void __iomem *itr_register;$/;"	m	struct:igb_q_vector	typeref:typename:void __iomem *
itr_val	config/igb/igb.h	/^	u16 itr_val;$/;"	m	struct:igb_q_vector	typeref:typename:u16
l	config/igb/igb.h	/^	struct list_head l;$/;"	m	struct:vf_mac_filter	typeref:struct:list_head
last_nack	config/igb/igb.h	/^	unsigned long last_nack;$/;"	m	struct:vf_data_storage	typeref:typename:unsigned long
last_rx_ptp_check	config/igb/igb.h	/^	unsigned long last_rx_ptp_check;$/;"	m	struct:igb_adapter	typeref:typename:unsigned long
last_rx_timestamp	config/igb/igb.h	/^	unsigned long last_rx_timestamp;$/;"	m	struct:igb_adapter	typeref:typename:unsigned long
latecol	config/igb/e1000_hw.h	/^	u64 latecol;$/;"	m	struct:e1000_hw_stats	typeref:typename:u64
latency_invalid	config/igb/igb_main.c	/^	latency_invalid = 255$/;"	e	enum:latency_range	file:
latency_range	config/igb/igb_main.c	/^enum latency_range {$/;"	g	file:
launch_time	dpdk/cy_timer.c	/^    uint64_t launch_time;$/;"	m	struct:pkt_info	typeref:typename:uint64_t	file:
launchtime_enable	config/igb/igb.h	/^	bool launchtime_enable;		\/* true if LaunchTime is enabled *\/$/;"	m	struct:igb_ring	typeref:typename:bool
lcm	src/sche.c	/^long lcm(long a, long b) {$/;"	f	typeref:typename:long
lcm_of_array	src/sche.c	/^long lcm_of_array(long *arr, long n){$/;"	f	typeref:typename:long
led_status	config/igb/igb.h	/^	unsigned long led_status;$/;"	m	struct:igb_adapter	typeref:typename:unsigned long
ledctl_default	config/igb/e1000_hw.h	/^	u32 ledctl_default;$/;"	m	struct:e1000_mac_info	typeref:typename:u32
ledctl_mode1	config/igb/e1000_hw.h	/^	u32 ledctl_mode1;$/;"	m	struct:e1000_mac_info	typeref:typename:u32
ledctl_mode2	config/igb/e1000_hw.h	/^	u32 ledctl_mode2;$/;"	m	struct:e1000_mac_info	typeref:typename:u32
lenerrs	config/igb/e1000_hw.h	/^	u64 lenerrs;$/;"	m	struct:e1000_hw_stats	typeref:typename:u64
length	config/igb/e1000_82575.h	/^			__le16 length;           \/* Packet length *\/$/;"	m	struct:e1000_adv_rx_desc::__anon265ab8310208::__anon265ab8310708	typeref:typename:__le16
link_check_timeout	config/igb/igb.h	/^	unsigned long link_check_timeout;$/;"	m	struct:igb_adapter	typeref:typename:unsigned long
link_duplex	config/igb/igb.h	/^	u16 link_duplex;$/;"	m	struct:igb_adapter	typeref:typename:u16
link_speed	config/igb/igb.h	/^	u16 link_speed;$/;"	m	struct:igb_adapter	typeref:typename:u16
listener	src/makefile	/^listener: listener.o flow.o system.o udp.o$/;"	t
lo_dword	config/igb/e1000_82575.h	/^			} lo_dword;$/;"	m	struct:e1000_adv_rx_desc::__anon265ab8310208::__anon265ab8310308	typeref:struct:e1000_adv_rx_desc::__anon265ab8310208::__anon265ab8310308::__anon265ab8310408
local_rx	config/igb/e1000_hw.h	/^	enum e1000_1000t_rx_status local_rx;$/;"	m	struct:e1000_phy_info	typeref:enum:e1000_1000t_rx_status
location	config/igb/e1000_hw.h	/^	u8 location;$/;"	m	struct:e1000_thermal_diode_data	typeref:typename:u8
locredit	config/igb/igb.h	/^	s32 locredit;			\/* loCredit in bytes *\/$/;"	m	struct:igb_ring	typeref:typename:s32
logs	dpdk/timer_test.c	/^uint64_t logs[100000] = {0};$/;"	v	typeref:typename:uint64_t[100000]
low_latency	config/igb/igb_main.c	/^	low_latency = 1,$/;"	e	enum:latency_range	file:
low_water	config/igb/e1000_hw.h	/^	u32 low_water;      \/* Flow control low-water mark *\/$/;"	m	struct:e1000_fc_info	typeref:typename:u32
lower	config/igb/e1000_82575.h	/^		} lower;$/;"	m	struct:e1000_adv_rx_desc::__anon265ab8310208	typeref:struct:e1000_adv_rx_desc::__anon265ab8310208::__anon265ab8310308
lowest_latency	config/igb/igb_main.c	/^	lowest_latency = 0,$/;"	e	enum:latency_range	file:
mac	config/igb/e1000_hw.h	/^	struct e1000_mac_info  mac;$/;"	m	struct:e1000_hw	typeref:struct:e1000_mac_info
mac_ops	config/igb/e1000_hw.h	/^	struct e1000_mac_operations *mac_ops;$/;"	m	struct:e1000_info	typeref:struct:e1000_mac_operations *
mac_table	config/igb/igb.h	/^	struct igb_mac_addr *mac_table;$/;"	m	struct:igb_adapter	typeref:struct:igb_mac_addr *
main	dpdk/cy_2p1q.c	/^int main(int argc, char **argv)$/;"	f	typeref:typename:int
main	dpdk/cy_base.c	/^int main(int argc, char **argv)$/;"	f	typeref:typename:int
main	dpdk/cy_bk.c	/^int main(int argc, char **argv)$/;"	f	typeref:typename:int
main	dpdk/cy_func.c	/^int main(int argc, char **argv)$/;"	f	typeref:typename:int
main	dpdk/cy_func_multicore.c	/^int main(int argc, char **argv)$/;"	f	typeref:typename:int
main	dpdk/cy_timer.c	/^int main(int argc, char **argv)$/;"	f	typeref:typename:int
main	dpdk/timer_test.c	/^int main(int argc, char **argv)$/;"	f	typeref:typename:int
main	src/listener.c	/^int main(int argc, char *argv[])$/;"	f	typeref:typename:int
main	src/talker.c	/^int main(int argc, char *argv[])$/;"	f	typeref:typename:int
mas_capable	config/igb/e1000_hw.h	/^	bool mas_capable;$/;"	m	struct:e1000_dev_spec_82575	typeref:typename:bool
mask	config/igb/igb_ethtool.c	/^	u32 mask;$/;"	m	struct:igb_reg_test	typeref:typename:u32	file:
match_flags	config/igb/igb.h	/^	u8 match_flags;$/;"	m	struct:igb_nfc_input	typeref:typename:u8
max_cable_length	config/igb/e1000_hw.h	/^	u16 max_cable_length;$/;"	m	struct:e1000_phy_info	typeref:typename:u16
max_frame_size	config/igb/igb.h	/^	u32 max_frame_size;$/;"	m	struct:igb_adapter	typeref:typename:u32
max_op_thresh	config/igb/e1000_hw.h	/^	u8 max_op_thresh;$/;"	m	struct:e1000_thermal_diode_data	typeref:typename:u8
max_vfs	config/igb/igb_main.c	/^static unsigned int max_vfs;$/;"	v	typeref:typename:unsigned int	file:
mbuf_pool	dpdk/cy_func.c	/^struct rte_mempool *mbuf_pool;$/;"	v	typeref:struct:rte_mempool *
mbuf_pool	dpdk/cy_func_multicore.c	/^struct rte_mempool *mbuf_pool;$/;"	v	typeref:struct:rte_mempool *
mbx	config/igb/e1000_hw.h	/^	struct e1000_mbx_info mbx;$/;"	m	struct:e1000_hw	typeref:struct:e1000_mbx_info
mc_filter_type	config/igb/e1000_hw.h	/^	u32 mc_filter_type;$/;"	m	struct:e1000_mac_info	typeref:typename:u32
mcc	config/igb/e1000_hw.h	/^	u64 mcc;$/;"	m	struct:e1000_hw_stats	typeref:typename:u64
mdix	config/igb/e1000_hw.h	/^	u8 mdix;$/;"	m	struct:e1000_phy_info	typeref:typename:u8
media_changed	config/igb/e1000_hw.h	/^	bool media_changed;$/;"	m	struct:e1000_dev_spec_82575	typeref:typename:bool
media_port	config/igb/e1000_hw.h	/^	u8 media_port;$/;"	m	struct:e1000_dev_spec_82575	typeref:typename:u8
media_type	config/igb/e1000_hw.h	/^	enum e1000_media_type media_type;$/;"	m	struct:e1000_phy_info	typeref:enum:e1000_media_type
mgpdc	config/igb/e1000_hw.h	/^	u64 mgpdc;$/;"	m	struct:e1000_hw_stats	typeref:typename:u64
mgprc	config/igb/e1000_hw.h	/^	u64 mgprc;$/;"	m	struct:e1000_hw_stats	typeref:typename:u64
mgptc	config/igb/e1000_hw.h	/^	u64 mgptc;$/;"	m	struct:e1000_hw_stats	typeref:typename:u64
min_cable_length	config/igb/e1000_hw.h	/^	u16 min_cable_length;$/;"	m	struct:e1000_phy_info	typeref:typename:u16
min_frame_size	config/igb/igb.h	/^	u32 min_frame_size;$/;"	m	struct:igb_adapter	typeref:typename:u32
mng_cookie	config/igb/e1000_hw.h	/^	struct e1000_host_mng_dhcp_cookie mng_cookie;$/;"	m	struct:e1000_hw	typeref:struct:e1000_host_mng_dhcp_cookie
mng_vlan_id	config/igb/igb.h	/^	u16 mng_vlan_id;$/;"	m	struct:igb_adapter	typeref:typename:u16
module_plugged	config/igb/e1000_hw.h	/^	bool module_plugged;$/;"	m	struct:e1000_dev_spec_82575	typeref:typename:bool
mpc	config/igb/e1000_hw.h	/^	u64 mpc;$/;"	m	struct:e1000_hw_stats	typeref:typename:u64
mprc	config/igb/e1000_hw.h	/^	u64 mprc;$/;"	m	struct:e1000_hw_stats	typeref:typename:u64
mptc	config/igb/e1000_hw.h	/^	u64 mptc;$/;"	m	struct:e1000_hw_stats	typeref:typename:u64
ms_type	config/igb/e1000_hw.h	/^	enum e1000_ms_type ms_type;$/;"	m	struct:e1000_phy_info	typeref:enum:e1000_ms_type
msg_enable	config/igb/igb.h	/^	int msg_enable;$/;"	m	struct:igb_adapter	typeref:typename:int
msgs_rx	config/igb/e1000_hw.h	/^	u32 msgs_rx;$/;"	m	struct:e1000_mbx_stats	typeref:typename:u32
msgs_tx	config/igb/e1000_hw.h	/^	u32 msgs_tx;$/;"	m	struct:e1000_mbx_stats	typeref:typename:u32
msix_entries	config/igb/igb.h	/^	struct msix_entry msix_entries[MAX_MSIX_ENTRIES];$/;"	m	struct:igb_adapter	typeref:struct:msix_entry[]
mss_l4len_idx	config/igb/e1000_82575.h	/^	__le32 mss_l4len_idx;$/;"	m	struct:e1000_adv_tx_context_desc	typeref:typename:__le32
mta_reg_count	config/igb/e1000_hw.h	/^	u16 mta_reg_count;$/;"	m	struct:e1000_mac_info	typeref:typename:u16
mta_shadow	config/igb/e1000_hw.h	/^	u32 mta_shadow[MAX_MTA_REG];$/;"	m	struct:e1000_mac_info	typeref:typename:u32[]
my_u0	config/igb/igb_main.c	/^	struct my_u0 { __le64 a; __le64 b; } *u0;$/;"	s	function:igb_dump	file:
n_hwmon	config/igb/igb.h	/^	unsigned int n_hwmon;$/;"	m	struct:hwmon_buff	typeref:typename:unsigned int
name	config/igb/igb.h	/^	char name[12];$/;"	m	struct:hwmon_attr	typeref:typename:char[12]
name	config/igb/igb.h	/^	char name[IFNAMSIZ + 9];$/;"	m	struct:igb_q_vector	typeref:typename:char[]
name	config/igb/igb_main.c	/^	char *name;$/;"	m	struct:igb_reg_info	typeref:typename:char *	file:
napi	config/igb/igb.h	/^	struct napi_struct napi;$/;"	m	struct:igb_q_vector	typeref:struct:napi_struct
net	src/flow.h	/^    struct interface_config *net;$/;"	m	struct:flow	typeref:struct:interface_config *
netdev	config/igb/igb.h	/^	struct net_device *netdev;	\/* back pointer to net_device *\/$/;"	m	struct:igb_ring	typeref:struct:net_device *
netdev	config/igb/igb.h	/^	struct net_device *netdev;$/;"	m	struct:igb_adapter	typeref:struct:net_device *
next_proto_id	src/dpdk.h	/^    uint8_t next_proto_id;    \/**< protocol ID *\/$/;"	m	struct:ipv4_hdr	typeref:typename:uint8_t
next_to_alloc	config/igb/igb.h	/^	u16 next_to_alloc;$/;"	m	struct:igb_ring	typeref:typename:u16
next_to_clean	config/igb/igb.h	/^	u16 next_to_clean;$/;"	m	struct:igb_ring	typeref:typename:u16
next_to_use	config/igb/igb.h	/^	u16 next_to_use;$/;"	m	struct:igb_ring	typeref:typename:u16
next_to_watch	config/igb/igb.h	/^	union e1000_adv_tx_desc *next_to_watch;$/;"	m	struct:igb_tx_buffer	typeref:union:e1000_adv_tx_desc *
nfc_filter_count	config/igb/igb.h	/^	unsigned int nfc_filter_count;$/;"	m	struct:igb_adapter	typeref:typename:unsigned int
nfc_filter_list	config/igb/igb.h	/^	struct hlist_head nfc_filter_list;$/;"	m	struct:igb_adapter	typeref:struct:hlist_head
nfc_lock	config/igb/igb.h	/^	spinlock_t nfc_lock;$/;"	m	struct:igb_adapter	typeref:typename:spinlock_t
nfc_node	config/igb/igb.h	/^	struct hlist_node nfc_node;$/;"	m	struct:igb_nfc_filter	typeref:struct:hlist_node
num_failed	dpdk/cy_func_multicore.c	/^    int num_failed;$/;"	m	struct:tx_loop_args	typeref:typename:int	file:
num_failed_transmission	dpdk/cy_timer.c	/^    uint64_t num_failed_transmission;$/;"	m	struct:pkt_info	typeref:typename:uint64_t	file:
num_flows	src/flow.h	/^    int num_flows;$/;"	m	struct:flow_state	typeref:typename:int
num_frames_per_cycle	src/sche.h	/^    int num_frames_per_cycle;$/;"	m	struct:schedule_state	typeref:typename:int
num_missed_deadline	dpdk/cy_timer.c	/^    uint64_t num_missed_deadline;$/;"	m	struct:pkt_info	typeref:typename:uint64_t	file:
num_missed_deadlines	dpdk/cy_func_multicore.c	/^    int num_missed_deadlines;$/;"	m	struct:tx_loop_args	typeref:typename:int	file:
num_q_vectors	config/igb/igb.h	/^	unsigned int num_q_vectors;$/;"	m	struct:igb_adapter	typeref:typename:unsigned int
num_rx_queues	config/igb/igb.h	/^	int num_rx_queues;$/;"	m	struct:igb_adapter	typeref:typename:int
num_tx_queues	config/igb/igb.h	/^	int num_tx_queues;$/;"	m	struct:igb_adapter	typeref:typename:int
num_vf_mc_hashes	config/igb/igb.h	/^	u16 num_vf_mc_hashes;$/;"	m	struct:vf_data_storage	typeref:typename:u16
nvm	config/igb/e1000_hw.h	/^	struct e1000_nvm_info  nvm;$/;"	m	struct:e1000_hw	typeref:struct:e1000_nvm_info
nvm_ops	config/igb/e1000_hw.h	/^	struct e1000_nvm_operations *nvm_ops;$/;"	m	struct:e1000_info	typeref:struct:e1000_nvm_operations *
nxtseq_seed	config/igb/e1000_82575.h	/^		__le32 nxtseq_seed;$/;"	m	struct:e1000_adv_tx_desc::__anon265ab8310908	typeref:typename:__le32
o2bgptc	config/igb/e1000_hw.h	/^	u64 o2bgptc;$/;"	m	struct:e1000_hw_stats	typeref:typename:u64
o2bspc	config/igb/e1000_hw.h	/^	u64 o2bspc;$/;"	m	struct:e1000_hw_stats	typeref:typename:u64
offset	dpdk/cy_func_multicore.c	/^    uint64_t offset;$/;"	m	struct:tx_loop_args	typeref:typename:uint64_t	file:
offset_nsec	src/flow.h	/^    long offset_nsec;$/;"	m	struct:flow	typeref:typename:long
offset_sec	src/flow.h	/^    long offset_sec;$/;"	m	struct:flow	typeref:typename:long
ofs	config/igb/igb_main.c	/^	u32 ofs;$/;"	m	struct:igb_reg_info	typeref:typename:u32	file:
olinfo_status	config/igb/e1000_82575.h	/^		__le32 olinfo_status;$/;"	m	struct:e1000_adv_tx_desc::__anon265ab8310808	typeref:typename:__le32
opcode_bits	config/igb/e1000_hw.h	/^	u16 opcode_bits;$/;"	m	struct:e1000_nvm_info	typeref:typename:u16
ops	config/igb/e1000_hw.h	/^	struct e1000_mac_operations ops;$/;"	m	struct:e1000_mac_info	typeref:struct:e1000_mac_operations
ops	config/igb/e1000_hw.h	/^	struct e1000_mbx_operations ops;$/;"	m	struct:e1000_mbx_info	typeref:struct:e1000_mbx_operations
ops	config/igb/e1000_hw.h	/^	struct e1000_nvm_operations ops;$/;"	m	struct:e1000_nvm_info	typeref:struct:e1000_nvm_operations
ops	config/igb/e1000_hw.h	/^	struct e1000_phy_operations ops;$/;"	m	struct:e1000_phy_info	typeref:struct:e1000_phy_operations
or_build	config/igb/e1000_nvm.h	/^	u16 or_build;$/;"	m	struct:e1000_fw_version	typeref:typename:u16
or_major	config/igb/e1000_nvm.h	/^	u16 or_major;$/;"	m	struct:e1000_fw_version	typeref:typename:u16
or_patch	config/igb/e1000_nvm.h	/^	u16 or_patch;$/;"	m	struct:e1000_fw_version	typeref:typename:u16
or_valid	config/igb/e1000_nvm.h	/^	bool or_valid;$/;"	m	struct:e1000_fw_version	typeref:typename:bool
order	src/sche.h	/^    int *order;$/;"	m	struct:schedule_state	typeref:typename:int *
original_ms_type	config/igb/e1000_hw.h	/^	enum e1000_ms_type original_ms_type;$/;"	m	struct:e1000_phy_info	typeref:enum:e1000_ms_type
override	config/igb/e1000_hw.h	/^	enum e1000_nvm_override override;$/;"	m	struct:e1000_nvm_info	typeref:enum:e1000_nvm_override
packet_id	src/dpdk.h	/^    uint16_t packet_id;       \/**< packet ID *\/$/;"	m	struct:ipv4_hdr	typeref:typename:uint16_t
packets	config/igb/igb.h	/^	u64 packets;$/;"	m	struct:igb_rx_queue_stats	typeref:typename:u64
packets	config/igb/igb.h	/^	u64 packets;$/;"	m	struct:igb_tx_queue_stats	typeref:typename:u64
page	config/igb/igb.h	/^	struct page *page;$/;"	m	struct:igb_rx_buffer	typeref:struct:page *
page_offset	config/igb/igb.h	/^	__u16 page_offset;$/;"	m	struct:igb_rx_buffer	typeref:typename:__u16
page_offset	config/igb/igb.h	/^	__u32 page_offset;$/;"	m	struct:igb_rx_buffer	typeref:typename:__u32
page_size	config/igb/e1000_hw.h	/^	u16 page_size;$/;"	m	struct:e1000_nvm_info	typeref:typename:u16
pagecnt_bias	config/igb/igb.h	/^	__u16 pagecnt_bias;$/;"	m	struct:igb_rx_buffer	typeref:typename:__u16
pair_length	config/igb/e1000_hw.h	/^	u16 pair_length[4];$/;"	m	struct:e1000_phy_info	typeref:typename:u16[4]
parser	src/listener.c	/^int parser(int argc, char *argv[])$/;"	f	typeref:typename:int
parser	src/talker.c	/^int parser(int argc, char *argv[])$/;"	f	typeref:typename:int
pause_time	config/igb/e1000_hw.h	/^	u16 pause_time;     \/* Flow control pause timer *\/$/;"	m	struct:e1000_fc_info	typeref:typename:u16
pci_cmd_word	config/igb/e1000_hw.h	/^	u16 pci_cmd_word;$/;"	m	struct:e1000_bus_info	typeref:typename:u16
pdev	config/igb/igb.h	/^	struct pci_dev *pdev;$/;"	m	struct:igb_adapter	typeref:struct:pci_dev *
period	config/igb/igb.h	/^		struct timespec64 period;$/;"	m	struct:igb_adapter::__anon94720dd30608	typeref:struct:timespec64
period	dpdk/cy_timer.c	/^    uint64_t period;$/;"	m	struct:pkt_info	typeref:typename:uint64_t	file:
period	src/flow.h	/^    long period;$/;"	m	struct:flow	typeref:typename:long
perm_addr	config/igb/e1000_hw.h	/^	u8 perm_addr[6];$/;"	m	struct:e1000_mac_info	typeref:typename:u8[6]
perout	config/igb/igb.h	/^	} perout[IGB_N_PEROUT];$/;"	m	struct:igb_adapter	typeref:struct:igb_adapter::__anon94720dd30608[]
pf_qos	config/igb/igb.h	/^	u16 pf_qos;$/;"	m	struct:vf_data_storage	typeref:typename:u16
pf_vlan	config/igb/igb.h	/^	u16 pf_vlan; \/* When set, guest VLAN config not allowed. *\/$/;"	m	struct:vf_data_storage	typeref:typename:u16
phy	config/igb/e1000_hw.h	/^	struct e1000_phy_info  phy;$/;"	m	struct:e1000_hw	typeref:struct:e1000_phy_info
phy_info	config/igb/igb.h	/^	struct e1000_phy_info phy_info;$/;"	m	struct:igb_adapter	typeref:struct:e1000_phy_info
phy_info_timer	config/igb/igb.h	/^	struct timer_list phy_info_timer;$/;"	m	struct:igb_adapter	typeref:struct:timer_list
phy_ops	config/igb/e1000_hw.h	/^	const struct e1000_phy_operations *phy_ops;$/;"	m	struct:e1000_info	typeref:typename:const struct e1000_phy_operations *
pit_config_path	src/flow.c	/^char *pit_config_path = DEFAULT_CONFIG_PATH;$/;"	v	typeref:typename:char *
pit_debug	src/flow.c	/^int pit_debug = DEFAULT_DEBUG_FLAG;$/;"	v	typeref:typename:int
pit_delta	src/flow.c	/^int pit_delta = DEFAULT_TIME_DELTA;$/;"	v	typeref:typename:int
pit_etf	src/flow.c	/^int pit_etf = DEFAULT_ETF_FLAG;$/;"	v	typeref:typename:int
pit_hw	src/flow.c	/^int pit_hw = DEFAULT_HW_FLAG;$/;"	v	typeref:typename:int
pit_loopback	src/flow.c	/^int pit_loopback = DEFAULT_LOOPBACK_FLAG;$/;"	v	typeref:typename:int
pit_multi_flow	src/flow.c	/^int pit_multi_flow = DEFAULT_MULTI_FLOW;$/;"	v	typeref:typename:int
pit_ns_offset	src/flow.c	/^int pit_ns_offset = DEFAULT_NS_OFFSET;$/;"	v	typeref:typename:int
pit_offset	src/flow.c	/^int pit_offset = DEFAULT_OFFSET;$/;"	v	typeref:typename:int
pit_payload_size	src/flow.c	/^int pit_payload_size = DEFAULT_PAYLOAD;$/;"	v	typeref:typename:int
pit_period	src/flow.c	/^int pit_period = DEFAULT_PERIOD;$/;"	v	typeref:typename:int
pit_priority	src/flow.c	/^int pit_priority = DEFAULT_PRIORITY;$/;"	v	typeref:typename:int
pit_relay	src/flow.c	/^int pit_relay = DEFAULT_RELAY_FLAG;$/;"	v	typeref:typename:int
pit_runtime	src/flow.c	/^long pit_runtime = DEFAULT_RUNTIME;$/;"	v	typeref:typename:long
pkt	dpdk/cy_timer.c	/^    struct rte_mbuf *pkt;$/;"	m	struct:pkt_info	typeref:struct:rte_mbuf *	file:
pkt_addr	config/igb/e1000_82575.h	/^		__le64 pkt_addr;             \/* Packet buffer address *\/$/;"	m	struct:e1000_adv_rx_desc::__anon265ab8310108	typeref:typename:__le64
pkt_index	dpdk/cy_timer.c	/^    uint64_t pkt_index;$/;"	m	struct:pkt_info	typeref:typename:uint64_t	file:
pkt_info	config/igb/e1000_82575.h	/^				__le16 pkt_info;   \/* RSS type, Packet type *\/$/;"	m	struct:e1000_adv_rx_desc::__anon265ab8310208::__anon265ab8310308::__anon265ab8310408	typeref:typename:__le16
pkt_info	dpdk/cy_timer.c	/^struct pkt_info$/;"	s	file:
polarity_correction	config/igb/e1000_hw.h	/^	bool polarity_correction;$/;"	m	struct:e1000_phy_info	typeref:typename:bool
port	src/listener.c	/^static int port = 1998;$/;"	v	typeref:typename:int	file:
port	src/talker.c	/^static int port = 1998;$/;"	v	typeref:typename:int	file:
port_dst	src/flow.h	/^    int port_dst;$/;"	m	struct:interface_config	typeref:typename:int
port_src	src/flow.h	/^    int port_src;$/;"	m	struct:interface_config	typeref:typename:int
pps_sys_wrap_on	config/igb/igb.h	/^	bool pps_sys_wrap_on;$/;"	m	struct:igb_adapter	typeref:typename:bool
pr_fmt	config/igb/e1000_82575.c	/^#define pr_fmt(/;"	d	file:
pr_fmt	config/igb/igb_main.c	/^#define pr_fmt(/;"	d	file:
prc1023	config/igb/e1000_hw.h	/^	u64 prc1023;$/;"	m	struct:e1000_hw_stats	typeref:typename:u64
prc127	config/igb/e1000_hw.h	/^	u64 prc127;$/;"	m	struct:e1000_hw_stats	typeref:typename:u64
prc1522	config/igb/e1000_hw.h	/^	u64 prc1522;$/;"	m	struct:e1000_hw_stats	typeref:typename:u64
prc255	config/igb/e1000_hw.h	/^	u64 prc255;$/;"	m	struct:e1000_hw_stats	typeref:typename:u64
prc511	config/igb/e1000_hw.h	/^	u64 prc511;$/;"	m	struct:e1000_hw_stats	typeref:typename:u64
prc64	config/igb/e1000_hw.h	/^	u64 prc64;$/;"	m	struct:e1000_hw_stats	typeref:typename:u64
prepare_packet	dpdk/cy_func.c	/^void prepare_packet(struct rte_mbuf *pkt, const char *data, size_t data_size)$/;"	f	typeref:typename:void
prepare_packet	dpdk/cy_func_multicore.c	/^void prepare_packet(struct rte_mbuf *pkt, const char *data, size_t data_size)$/;"	f	typeref:typename:void
print_schedule_state	src/sche.c	/^void print_schedule_state(const struct schedule_state *schedule_state){$/;"	f	typeref:typename:void
priority	src/flow.h	/^    int priority;$/;"	m	struct:flow	typeref:typename:int
protocol	config/igb/igb.h	/^	__be16 protocol;$/;"	m	struct:igb_tx_buffer	typeref:typename:__be16
ptc1023	config/igb/e1000_hw.h	/^	u64 ptc1023;$/;"	m	struct:e1000_hw_stats	typeref:typename:u64
ptc127	config/igb/e1000_hw.h	/^	u64 ptc127;$/;"	m	struct:e1000_hw_stats	typeref:typename:u64
ptc1522	config/igb/e1000_hw.h	/^	u64 ptc1522;$/;"	m	struct:e1000_hw_stats	typeref:typename:u64
ptc255	config/igb/e1000_hw.h	/^	u64 ptc255;$/;"	m	struct:e1000_hw_stats	typeref:typename:u64
ptc511	config/igb/e1000_hw.h	/^	u64 ptc511;$/;"	m	struct:e1000_hw_stats	typeref:typename:u64
ptc64	config/igb/e1000_hw.h	/^	u64 ptc64;$/;"	m	struct:e1000_hw_stats	typeref:typename:u64
ptp_caps	config/igb/igb.h	/^	struct ptp_clock_info ptp_caps;$/;"	m	struct:igb_adapter	typeref:struct:ptp_clock_info
ptp_clock	config/igb/igb.h	/^	struct ptp_clock *ptp_clock;$/;"	m	struct:igb_adapter	typeref:struct:ptp_clock *
ptp_flags	config/igb/igb.h	/^	unsigned int ptp_flags;$/;"	m	struct:igb_adapter	typeref:typename:unsigned int
ptp_overflow_work	config/igb/igb.h	/^	struct delayed_work ptp_overflow_work;$/;"	m	struct:igb_adapter	typeref:struct:delayed_work
ptp_tx_skb	config/igb/igb.h	/^	struct sk_buff *ptp_tx_skb;$/;"	m	struct:igb_adapter	typeref:struct:sk_buff *
ptp_tx_start	config/igb/igb.h	/^	unsigned long ptp_tx_start;$/;"	m	struct:igb_adapter	typeref:typename:unsigned long
ptp_tx_work	config/igb/igb.h	/^	struct work_struct ptp_tx_work;$/;"	m	struct:igb_adapter	typeref:struct:work_struct
q_vector	config/igb/igb.h	/^	struct igb_q_vector *q_vector;	\/* backlink to q_vector *\/$/;"	m	struct:igb_ring	typeref:struct:igb_q_vector *
q_vector	config/igb/igb.h	/^	struct igb_q_vector *q_vector[MAX_Q_VECTORS];$/;"	m	struct:igb_adapter	typeref:struct:igb_q_vector * []
queue	config/igb/igb.h	/^	u8 queue;$/;"	m	struct:igb_mac_addr	typeref:typename:u8
queue	dpdk/cy_func_multicore.c	/^    int queue;$/;"	m	struct:tx_loop_args	typeref:typename:int	file:
queue_index	config/igb/igb.h	/^	u8 queue_index;			\/* logical index of the ring*\/$/;"	m	struct:igb_ring	typeref:typename:u8
queue_mode	config/igb/igb_main.c	/^enum queue_mode {$/;"	g	file:
rar_entry_count	config/igb/e1000_hw.h	/^	u16 rar_entry_count;$/;"	m	struct:e1000_mac_info	typeref:typename:u16
rar_set	config/igb/e1000_hw.h	/^	void (*rar_set)(struct e1000_hw *, u8 *, u32);$/;"	m	struct:e1000_mac_operations	typeref:typename:void (*)(struct e1000_hw *,u8 *,u32)
rcu	config/igb/igb.h	/^	struct rcu_head rcu;	\/* to avoid race with update stats on free *\/$/;"	m	struct:igb_q_vector	typeref:struct:rcu_head
rd32	config/igb/e1000_regs.h	/^#define rd32(/;"	d
read	config/igb/e1000_82575.h	/^	} read;$/;"	m	union:e1000_adv_rx_desc	typeref:struct:e1000_adv_rx_desc::__anon265ab8310108
read	config/igb/e1000_82575.h	/^	} read;$/;"	m	union:e1000_adv_tx_desc	typeref:struct:e1000_adv_tx_desc::__anon265ab8310808
read	config/igb/e1000_hw.h	/^	s32 (*read)(struct e1000_hw *, u16, u16, u16 *);$/;"	m	struct:e1000_nvm_operations	typeref:typename:s32 (*)(struct e1000_hw *,u16,u16,u16 *)
read	config/igb/e1000_hw.h	/^	s32 (*read)(struct e1000_hw *hw, u32 *msg, u16 size, u16 mbx_id,$/;"	m	struct:e1000_mbx_operations	typeref:typename:s32 (*)(struct e1000_hw * hw,u32 * msg,u16 size,u16 mbx_id,bool unlock)
read_i2c_byte	config/igb/e1000_hw.h	/^	s32 (*read_i2c_byte)(struct e1000_hw *, u8, u8, u8 *);$/;"	m	struct:e1000_phy_operations	typeref:typename:s32 (*)(struct e1000_hw *,u8,u8,u8 *)
read_mac_addr	config/igb/e1000_hw.h	/^	s32 (*read_mac_addr)(struct e1000_hw *);$/;"	m	struct:e1000_mac_operations	typeref:typename:s32 (*)(struct e1000_hw *)
read_posted	config/igb/e1000_hw.h	/^	s32 (*read_posted)(struct e1000_hw *hw, u32 *msg, u16 size, u16 mbx_id);$/;"	m	struct:e1000_mbx_operations	typeref:typename:s32 (*)(struct e1000_hw * hw,u32 * msg,u16 size,u16 mbx_id)
read_reg	config/igb/e1000_hw.h	/^	s32 (*read_reg)(struct e1000_hw *, u32, u16 *);$/;"	m	struct:e1000_phy_operations	typeref:typename:s32 (*)(struct e1000_hw *,u32,u16 *)
recv_single	src/udp.c	/^int recv_single(int fd, char *address, char buffer[])$/;"	f	typeref:typename:int
reg	config/igb/igb_ethtool.c	/^	u16 reg;$/;"	m	struct:igb_reg_test	typeref:typename:u16	file:
reg_idx	config/igb/igb.h	/^	u8 reg_idx;			\/* physical index of the ring *\/$/;"	m	struct:igb_ring	typeref:typename:u8
reg_offset	config/igb/igb_ethtool.c	/^	u16 reg_offset;$/;"	m	struct:igb_reg_test	typeref:typename:u16	file:
reg_pattern_test	config/igb/igb_ethtool.c	/^static bool reg_pattern_test(struct igb_adapter *adapter, u64 *data,$/;"	f	typeref:typename:bool	file:
reg_set_and_check	config/igb/igb_ethtool.c	/^static bool reg_set_and_check(struct igb_adapter *adapter, u64 *data,$/;"	f	typeref:typename:bool	file:
reg_test_82575	config/igb/igb_ethtool.c	/^static struct igb_reg_test reg_test_82575[] = {$/;"	v	typeref:struct:igb_reg_test[]	file:
reg_test_82576	config/igb/igb_ethtool.c	/^static struct igb_reg_test reg_test_82576[] = {$/;"	v	typeref:struct:igb_reg_test[]	file:
reg_test_82580	config/igb/igb_ethtool.c	/^static struct igb_reg_test reg_test_82580[] = {$/;"	v	typeref:struct:igb_reg_test[]	file:
reg_test_i210	config/igb/igb_ethtool.c	/^static struct igb_reg_test reg_test_i210[] = {$/;"	v	typeref:struct:igb_reg_test[]	file:
reg_test_i350	config/igb/igb_ethtool.c	/^static struct igb_reg_test reg_test_i350[] = {$/;"	v	typeref:struct:igb_reg_test[]	file:
register_timestamping	dpdk/cy_func.c	/^int register_timestamping(struct rte_eth_dev_info *dev_info)$/;"	f	typeref:typename:int
register_timestamping	dpdk/cy_func_multicore.c	/^int register_timestamping(struct rte_eth_dev_info *dev_info)$/;"	f	typeref:typename:int
release	config/igb/e1000_hw.h	/^	void (*release)(struct e1000_hw *);$/;"	m	struct:e1000_nvm_operations	typeref:typename:void (*)(struct e1000_hw *)
release	config/igb/e1000_hw.h	/^	void (*release)(struct e1000_hw *);$/;"	m	struct:e1000_phy_operations	typeref:typename:void (*)(struct e1000_hw *)
release_swfw_sync	config/igb/e1000_hw.h	/^	void (*release_swfw_sync)(struct e1000_hw *, u16);$/;"	m	struct:e1000_mac_operations	typeref:typename:void (*)(struct e1000_hw *,u16)
remote_rx	config/igb/e1000_hw.h	/^	enum e1000_1000t_rx_status remote_rx;$/;"	m	struct:e1000_phy_info	typeref:enum:e1000_1000t_rx_status
report_tx_early	config/igb/e1000_hw.h	/^	bool report_tx_early;$/;"	m	struct:e1000_mac_info	typeref:typename:bool
reqs	config/igb/e1000_hw.h	/^	u32 reqs;$/;"	m	struct:e1000_mbx_stats	typeref:typename:u32
requested_mode	config/igb/e1000_hw.h	/^	enum e1000_fc_mode requested_mode;$/;"	m	struct:e1000_fc_info	typeref:enum:e1000_fc_mode
reserved0	config/igb/e1000_hw.h	/^	u8  reserved0;$/;"	m	struct:e1000_host_mng_dhcp_cookie	typeref:typename:u8
reserved1	config/igb/e1000_hw.h	/^	u16 reserved1;$/;"	m	struct:e1000_host_mng_command_header	typeref:typename:u16
reserved1	config/igb/e1000_hw.h	/^	u32 reserved1;$/;"	m	struct:e1000_host_mng_dhcp_cookie	typeref:typename:u32
reserved2	config/igb/e1000_hw.h	/^	u16 reserved2;$/;"	m	struct:e1000_host_mng_command_header	typeref:typename:u16
reserved2	config/igb/e1000_hw.h	/^	u16 reserved2;$/;"	m	struct:e1000_host_mng_dhcp_cookie	typeref:typename:u16
reserved3	config/igb/e1000_hw.h	/^	u8  reserved3;$/;"	m	struct:e1000_host_mng_dhcp_cookie	typeref:typename:u8
reset	config/igb/e1000_hw.h	/^	s32 (*reset)(struct e1000_hw *);$/;"	m	struct:e1000_phy_operations	typeref:typename:s32 (*)(struct e1000_hw *)
reset_delay_us	config/igb/e1000_hw.h	/^	u32 reset_delay_us; \/* in usec *\/$/;"	m	struct:e1000_phy_info	typeref:typename:u32
reset_disable	config/igb/e1000_hw.h	/^	bool reset_disable;$/;"	m	struct:e1000_phy_info	typeref:typename:bool
reset_hw	config/igb/e1000_hw.h	/^	s32 (*reset_hw)(struct e1000_hw *);$/;"	m	struct:e1000_mac_operations	typeref:typename:s32 (*)(struct e1000_hw *)
reset_task	config/igb/igb.h	/^	struct work_struct reset_task;$/;"	m	struct:igb_adapter	typeref:struct:work_struct
restart_queue	config/igb/igb.h	/^	u64 restart_queue;$/;"	m	struct:igb_tx_queue_stats	typeref:typename:u64
restart_queue2	config/igb/igb.h	/^	u64 restart_queue2;$/;"	m	struct:igb_tx_queue_stats	typeref:typename:u64
revision	config/igb/e1000_hw.h	/^	u32 revision;$/;"	m	struct:e1000_phy_info	typeref:typename:u32
revision_id	config/igb/e1000_hw.h	/^	u8  revision_id;$/;"	m	struct:e1000_hw	typeref:typename:u8
rfc	config/igb/e1000_hw.h	/^	u64 rfc;$/;"	m	struct:e1000_hw_stats	typeref:typename:u64
ring	config/igb/igb.h	/^	struct igb_ring *ring;		\/* pointer to linked list of rings *\/$/;"	m	struct:igb_ring_container	typeref:struct:igb_ring *
ring	config/igb/igb.h	/^	struct igb_ring ring[] ____cacheline_internodealigned_in_smp;$/;"	m	struct:igb_q_vector	typeref:struct:igb_ring[]____cacheline_internodealigned_in_smp
ring_uses_build_skb	config/igb/igb.h	/^#define ring_uses_build_skb(/;"	d
ring_uses_large_buffer	config/igb/igb.h	/^#define ring_uses_large_buffer(/;"	d
rjc	config/igb/e1000_hw.h	/^	u64 rjc;$/;"	m	struct:e1000_hw_stats	typeref:typename:u64
rlec	config/igb/e1000_hw.h	/^	u64 rlec;$/;"	m	struct:e1000_hw_stats	typeref:typename:u64
rnbc	config/igb/e1000_hw.h	/^	u64 rnbc;$/;"	m	struct:e1000_hw_stats	typeref:typename:u64
roc	config/igb/e1000_hw.h	/^	u64 roc;$/;"	m	struct:e1000_hw_stats	typeref:typename:u64
rpthc	config/igb/e1000_hw.h	/^	u64 rpthc;$/;"	m	struct:e1000_hw_stats	typeref:typename:u64
rss	config/igb/e1000_82575.h	/^				__le32 rss;          \/* RSS Hash *\/$/;"	m	union:e1000_adv_rx_desc::__anon265ab8310208::__anon265ab8310308::__anon265ab831050a	typeref:typename:__le32
rss_indir_tbl	config/igb/igb.h	/^	u8 rss_indir_tbl[IGB_RETA_SIZE];$/;"	m	struct:igb_adapter	typeref:typename:u8[]
rss_indir_tbl_init	config/igb/igb.h	/^	u32 rss_indir_tbl_init;$/;"	m	struct:igb_adapter	typeref:typename:u32
rss_queues	config/igb/igb.h	/^	u32 rss_queues;$/;"	m	struct:igb_adapter	typeref:typename:u32
rsts	config/igb/e1000_hw.h	/^	u32 rsts;$/;"	m	struct:e1000_mbx_stats	typeref:typename:u32
rsvd	config/igb/e1000_82575.h	/^		__le64 rsvd;       \/* Reserved *\/$/;"	m	struct:e1000_adv_tx_desc::__anon265ab8310908	typeref:typename:__le64
rte_sleep	dpdk/cy_2p1q.c	/^void rte_sleep(uint64_t ns)$/;"	f	typeref:typename:void
rte_sleep	dpdk/cy_base.c	/^void rte_sleep(uint64_t ns)$/;"	f	typeref:typename:void
rte_sleep	dpdk/cy_func.c	/^void rte_sleep(uint64_t ns)$/;"	f	typeref:typename:void
rte_sleep	dpdk/cy_func_multicore.c	/^void rte_sleep(uint64_t ns)$/;"	f	typeref:typename:void
rte_sleep	dpdk/timer_test.c	/^void rte_sleep(uint64_t ns)$/;"	f	typeref:typename:void
ruc	config/igb/e1000_hw.h	/^	u64 ruc;$/;"	m	struct:e1000_hw_stats	typeref:typename:u64
rx	config/igb/igb.h	/^	struct igb_ring_container rx, tx;$/;"	m	struct:igb_q_vector	typeref:struct:igb_ring_container
rx_buffer_info	config/igb/igb.h	/^		struct igb_rx_buffer *rx_buffer_info;$/;"	m	union:igb_ring::__anon94720dd3020a	typeref:struct:igb_rx_buffer *
rx_hwtstamp_cleared	config/igb/igb.h	/^	u32 rx_hwtstamp_cleared;$/;"	m	struct:igb_adapter	typeref:typename:u32
rx_itr	config/igb/igb.h	/^	u16 rx_itr;$/;"	m	struct:igb_adapter	typeref:typename:u16
rx_itr_setting	config/igb/igb.h	/^	u32 rx_itr_setting;$/;"	m	struct:igb_adapter	typeref:typename:u32
rx_ring	config/igb/igb.h	/^	struct igb_ring *rx_ring[16];$/;"	m	struct:igb_adapter	typeref:struct:igb_ring * [16]
rx_ring_count	config/igb/igb.h	/^	u16 rx_ring_count;$/;"	m	struct:igb_adapter	typeref:typename:u16
rx_stats	config/igb/igb.h	/^			struct igb_rx_queue_stats rx_stats;$/;"	m	struct:igb_ring::__anon94720dd3030a::__anon94720dd30508	typeref:struct:igb_rx_queue_stats
rx_syncp	config/igb/igb.h	/^			struct u64_stats_sync rx_syncp;$/;"	m	struct:igb_ring::__anon94720dd3030a::__anon94720dd30508	typeref:struct:u64_stats_sync
rxerrc	config/igb/e1000_hw.h	/^	u64 rxerrc;$/;"	m	struct:e1000_hw_stats	typeref:typename:u64
s_addr	src/dpdk.h	/^    struct rte_ether_addr s_addr; \/**< Source address. *\/$/;"	m	struct:ether_hdr	typeref:struct:rte_ether_addr
save_logs	dpdk/timer_test.c	/^void save_logs()$/;"	f	typeref:typename:void
scc	config/igb/e1000_hw.h	/^	u64 scc;$/;"	m	struct:e1000_hw_stats	typeref:typename:u64
sche.o	src/makefile	/^sche.o: sche.c sche.h system.h flow.h$/;"	t
sche_single	src/udp.c	/^int sche_single(int fd, const char *address, const int port, uint64_t txtime,$/;"	f	typeref:typename:int
sche_time	src/flow.h	/^    struct timespec *sche_time;$/;"	m	struct:flow	typeref:struct:timespec *
schedule_state	src/sche.h	/^struct schedule_state$/;"	s
scvpc	config/igb/e1000_hw.h	/^	u64 scvpc;$/;"	m	struct:e1000_hw_stats	typeref:typename:u64
sdp_config	config/igb/igb.h	/^	struct ptp_pin_desc sdp_config[IGB_N_SDP];$/;"	m	struct:igb_adapter	typeref:struct:ptp_pin_desc[]
sec	config/igb/e1000_hw.h	/^	u64 sec;$/;"	m	struct:e1000_hw_stats	typeref:typename:u64
send_packet_cb	dpdk/cy_timer.c	/^static void send_packet_cb(__rte_unused struct rte_timer *tim, void *arg)$/;"	f	typeref:typename:void	file:
send_single	src/dpdk.c	/^int send_single(int port_id, int vlan, int pcp, struct rte_ether_addr address, char* msg, int le/;"	f	typeref:typename:int
send_single	src/udp.c	/^int send_single(int fd, const char *address, const int port, char buffer[], const int buffer_siz/;"	f	typeref:typename:int
send_xon	config/igb/e1000_hw.h	/^	bool send_xon;      \/* Flow control send XON *\/$/;"	m	struct:e1000_fc_info	typeref:typename:bool
sending_time	src/sche.h	/^    long *sending_time;$/;"	m	struct:schedule_state	typeref:typename:long *
sendslope	config/igb/igb.h	/^	s32 sendslope;			\/* sendSlope in kbps *\/$/;"	m	struct:igb_ring	typeref:typename:s32
sensor	config/igb/e1000_hw.h	/^	struct e1000_thermal_diode_data sensor[E1000_MAX_SENSORS];$/;"	m	struct:e1000_thermal_sensor_data	typeref:struct:e1000_thermal_diode_data[]
sensor	config/igb/igb.h	/^	struct e1000_thermal_diode_data *sensor;$/;"	m	struct:hwmon_attr	typeref:struct:e1000_thermal_diode_data *
seqnum_seed	config/igb/e1000_82575.h	/^	__le32 seqnum_seed;$/;"	m	struct:e1000_adv_tx_context_desc	typeref:typename:__le32
serdes_has_link	config/igb/e1000_hw.h	/^	bool serdes_has_link;$/;"	m	struct:e1000_mac_info	typeref:typename:bool
set_d0_lplu_state	config/igb/e1000_hw.h	/^	s32 (*set_d0_lplu_state)(struct e1000_hw *, bool);$/;"	m	struct:e1000_phy_operations	typeref:typename:s32 (*)(struct e1000_hw *,bool)
set_d3_lplu_state	config/igb/e1000_hw.h	/^	s32 (*set_d3_lplu_state)(struct e1000_hw *, bool);$/;"	m	struct:e1000_phy_operations	typeref:typename:s32 (*)(struct e1000_hw *,bool)
set_itr	config/igb/igb.h	/^	u8 set_itr;$/;"	m	struct:igb_q_vector	typeref:typename:u8
set_pkt	dpdk/cy_timer.c	/^static int set_pkt(struct rte_mbuf *pkt, struct rte_ether_addr d_addr, uint16_t ether_type, char/;"	f	typeref:typename:int	file:
set_pkt_launchtime	dpdk/cy_timer.c	/^static int set_pkt_launchtime(struct rte_mbuf *pkt, uint64_t *lt)$/;"	f	typeref:typename:int	file:
set_queue_mode	config/igb/igb_main.c	/^static void set_queue_mode(struct e1000_hw *hw, int queue, enum queue_mode mode)$/;"	f	typeref:typename:void	file:
set_ring_build_skb_enabled	config/igb/igb.h	/^#define set_ring_build_skb_enabled(/;"	d
set_ring_uses_large_buffer	config/igb/igb.h	/^#define set_ring_uses_large_buffer(/;"	d
set_tx_desc_fetch_prio	config/igb/igb_main.c	/^static void set_tx_desc_fetch_prio(struct e1000_hw *hw, int queue,$/;"	f	typeref:typename:void	file:
setup_data_payload	dpdk/cy_func.c	/^void setup_data_payload(struct rte_mbuf *pkt, const char *data, size_t data_size)$/;"	f	typeref:typename:void
setup_data_payload	dpdk/cy_func_multicore.c	/^void setup_data_payload(struct rte_mbuf *pkt, const char *data, size_t data_size)$/;"	f	typeref:typename:void
setup_device	src/dpdk.c	/^int setup_device(int port_id, int rxq, int txq, struct rte_mempool *mbuf_pool){$/;"	f	typeref:typename:int
setup_ethernet_header	dpdk/cy_func.c	/^void setup_ethernet_header(struct rte_mbuf *pkt, struct rte_ether_addr *src_addr, struct rte_eth/;"	f	typeref:typename:void
setup_ethernet_header	dpdk/cy_func_multicore.c	/^void setup_ethernet_header(struct rte_mbuf *pkt, struct rte_ether_addr *src_addr, struct rte_eth/;"	f	typeref:typename:void
setup_ip_header	dpdk/cy_func.c	/^struct rte_ipv4_hdr *setup_ip_header(struct rte_mbuf *pkt, uint32_t src_ip, uint32_t dst_ip, siz/;"	f	typeref:struct:rte_ipv4_hdr *
setup_ip_header	dpdk/cy_func_multicore.c	/^struct rte_ipv4_hdr *setup_ip_header(struct rte_mbuf *pkt, uint32_t src_ip, uint32_t dst_ip, siz/;"	f	typeref:struct:rte_ipv4_hdr *
setup_memory	src/dpdk.c	/^int setup_memory(int port_id, struct rte_mempool *mbuf_pool){$/;"	f	typeref:typename:int
setup_non_blocking	src/udp.c	/^int setup_non_blocking(int fd)$/;"	f	typeref:typename:int
setup_offload_field	dpdk/cy_func.c	/^void setup_offload_field(struct rte_mbuf *pkt)$/;"	f	typeref:typename:void
setup_offload_field	dpdk/cy_func_multicore.c	/^void setup_offload_field(struct rte_mbuf *pkt)$/;"	f	typeref:typename:void
setup_physical_interface	config/igb/e1000_hw.h	/^	s32 (*setup_physical_interface)(struct e1000_hw *);$/;"	m	struct:e1000_mac_operations	typeref:typename:s32 (*)(struct e1000_hw *)
setup_receiver	src/udp.c	/^int setup_receiver(const int port, const char *dev_name)$/;"	f	typeref:typename:int
setup_rx_timestamping	src/udp.c	/^int setup_rx_timestamping(int fd)$/;"	f	typeref:typename:int
setup_sender	src/udp.c	/^int setup_sender(const char *dev_name)$/;"	f	typeref:typename:int
setup_sotime	src/udp.c	/^int setup_sotime(int fd, const char *dev_name, const int priority)$/;"	f	typeref:typename:int
setup_tx_timestamping	src/udp.c	/^int setup_tx_timestamping(int fd)$/;"	f	typeref:typename:int
setup_udp_header	dpdk/cy_func.c	/^struct rte_udp_hdr *setup_udp_header(struct rte_mbuf *pkt, uint16_t src_port, uint16_t dst_port,/;"	f	typeref:struct:rte_udp_hdr *
setup_udp_header	dpdk/cy_func_multicore.c	/^struct rte_udp_hdr *setup_udp_header(struct rte_mbuf *pkt, uint16_t src_port, uint16_t dst_port,/;"	f	typeref:struct:rte_udp_hdr *
sgmii_active	config/igb/e1000_hw.h	/^	bool sgmii_active;$/;"	m	struct:e1000_dev_spec_82575	typeref:typename:bool
shadow_vfta	config/igb/igb.h	/^	u32 *shadow_vfta;$/;"	m	struct:igb_adapter	typeref:typename:u32 *
signature	config/igb/e1000_hw.h	/^	u32 signature;$/;"	m	struct:e1000_host_mng_dhcp_cookie	typeref:typename:u32
size	config/igb/e1000_hw.h	/^	u16 size;$/;"	m	struct:e1000_mbx_info	typeref:typename:u16
size	config/igb/igb.h	/^	unsigned int  size;		\/* length of desc. ring in bytes *\/$/;"	m	struct:igb_ring	typeref:typename:unsigned int
size	src/flow.h	/^    int size;$/;"	m	struct:flow	typeref:typename:int
sizeof_stat	config/igb/igb_ethtool.c	/^	int sizeof_stat;$/;"	m	struct:igb_stats	typeref:typename:int	file:
skb	config/igb/igb.h	/^			struct sk_buff *skb;$/;"	m	struct:igb_ring::__anon94720dd3030a::__anon94720dd30508	typeref:struct:sk_buff *
skb	config/igb/igb.h	/^		struct sk_buff *skb;$/;"	m	union:igb_tx_buffer::__anon94720dd3010a	typeref:struct:sk_buff *
sleep_until_wakeup	src/flow.c	/^void sleep_until_wakeup(struct flow *flow)$/;"	f	typeref:typename:void
smart_speed	config/igb/e1000_hw.h	/^	enum e1000_smart_speed smart_speed;$/;"	m	struct:e1000_phy_info	typeref:enum:e1000_smart_speed
snoop	config/igb/e1000_hw.h	/^	u32 snoop;$/;"	m	struct:e1000_bus_info	typeref:typename:u32
sort	src/sche.c	/^void sort(long time[], int flow_id[], int n) {$/;"	f	typeref:typename:void
speed	config/igb/e1000_hw.h	/^	enum e1000_bus_speed speed;$/;"	m	struct:e1000_bus_info	typeref:enum:e1000_bus_speed
speed_downgraded	config/igb/e1000_hw.h	/^	bool speed_downgraded;$/;"	m	struct:e1000_phy_info	typeref:typename:bool
spoofchk_enabled	config/igb/igb.h	/^	bool spoofchk_enabled;$/;"	m	struct:vf_data_storage	typeref:typename:bool
src_addr	config/igb/igb.h	/^	u8 src_addr[ETH_ALEN];$/;"	m	struct:igb_nfc_input	typeref:typename:u8[]
src_addr	src/dpdk.h	/^    uint32_t src_addr;        \/**< source address *\/$/;"	m	struct:ipv4_hdr	typeref:typename:uint32_t
src_port	src/dpdk.h	/^    uint16_t src_port;    \/**< UDP source port. *\/$/;"	m	struct:udp_hdr	typeref:typename:uint16_t
start	config/igb/igb.h	/^		struct timespec64 start;$/;"	m	struct:igb_adapter::__anon94720dd30608	typeref:struct:timespec64
stat_offset	config/igb/igb_ethtool.c	/^	int stat_offset;$/;"	m	struct:igb_stats	typeref:typename:int	file:
stat_string	config/igb/igb_ethtool.c	/^	char stat_string[ETH_GSTRING_LEN];$/;"	m	struct:igb_stats	typeref:typename:char[]	file:
state	config/igb/igb.h	/^	u8 state; \/* bitmask *\/$/;"	m	struct:igb_mac_addr	typeref:typename:u8
state	config/igb/igb.h	/^	unsigned long state;$/;"	m	struct:igb_adapter	typeref:typename:unsigned long
stats	config/igb/e1000_hw.h	/^	struct e1000_mbx_stats stats;$/;"	m	struct:e1000_mbx_info	typeref:struct:e1000_mbx_stats
stats	config/igb/igb.h	/^	struct e1000_hw_stats stats;$/;"	m	struct:igb_adapter	typeref:struct:e1000_hw_stats
stats64	config/igb/igb.h	/^	struct rtnl_link_stats64 stats64;$/;"	m	struct:igb_adapter	typeref:struct:rtnl_link_stats64
stats64_lock	config/igb/igb.h	/^	spinlock_t stats64_lock;$/;"	m	struct:igb_adapter	typeref:typename:spinlock_t
status	config/igb/e1000_82575.h	/^		__le32 status;$/;"	m	struct:e1000_adv_tx_desc::__anon265ab8310908	typeref:typename:__le32
status	config/igb/e1000_hw.h	/^	u8  status;$/;"	m	struct:e1000_host_mng_dhcp_cookie	typeref:typename:u8
status_error	config/igb/e1000_82575.h	/^			__le32 status_error;     \/* ext status\/error *\/$/;"	m	struct:e1000_adv_rx_desc::__anon265ab8310208::__anon265ab8310708	typeref:typename:__le32
strict_ieee	config/igb/e1000_hw.h	/^	bool strict_ieee;   \/* Strict IEEE mode *\/$/;"	m	struct:e1000_fc_info	typeref:typename:bool
subsystem_device_id	config/igb/e1000_hw.h	/^	u16 subsystem_device_id;$/;"	m	struct:e1000_hw	typeref:typename:u16
subsystem_vendor_id	config/igb/e1000_hw.h	/^	u16 subsystem_vendor_id;$/;"	m	struct:e1000_hw	typeref:typename:u16
sw_idx	config/igb/igb.h	/^	u16 sw_idx;$/;"	m	struct:igb_nfc_filter	typeref:typename:u16
symerrs	config/igb/e1000_hw.h	/^	u64 symerrs;$/;"	m	struct:e1000_hw_stats	typeref:typename:u64
system.o	src/makefile	/^system.o: system.c system.h$/;"	t
tail	config/igb/igb.h	/^	void __iomem *tail;		\/* pointer to ring tail register *\/$/;"	m	struct:igb_ring	typeref:typename:void __iomem *
talker	src/makefile	/^talker: talker.o flow.o system.o udp.o sche.o$/;"	t
talker.o	src/makefile	/^talker.o: talker.c talker.h system.h flow.h$/;"	t
tc	config/igb/igb.h	/^	struct timecounter tc;$/;"	m	struct:igb_adapter	typeref:struct:timecounter
tcp	config/igb/igb_main.c	/^		struct tcphdr *tcp;$/;"	m	union:igb_tso::__anon3998ccb2020a	typeref:struct:tcphdr *	file:
temp	config/igb/e1000_hw.h	/^	u8 temp;$/;"	m	struct:e1000_thermal_diode_data	typeref:typename:u8
test_icr	config/igb/igb.h	/^	u32 test_icr;$/;"	m	struct:igb_adapter	typeref:typename:u32
test_rx_ring	config/igb/igb.h	/^	struct igb_ring test_rx_ring;$/;"	m	struct:igb_adapter	typeref:struct:igb_ring
test_tx_ring	config/igb/igb.h	/^	struct igb_ring test_tx_ring;$/;"	m	struct:igb_adapter	typeref:struct:igb_ring
test_type	config/igb/igb_ethtool.c	/^	u16 test_type;$/;"	m	struct:igb_reg_test	typeref:typename:u16	file:
thermal_sensor_data	config/igb/e1000_hw.h	/^	struct e1000_thermal_sensor_data thermal_sensor_data;$/;"	m	struct:e1000_mac_info	typeref:struct:e1000_thermal_sensor_data
through_put	dpdk/cy_func_multicore.c	/^    float through_put;$/;"	m	struct:tx_loop_args	typeref:typename:float	file:
time_stamp	config/igb/igb.h	/^	unsigned long time_stamp;$/;"	m	struct:igb_tx_buffer	typeref:typename:unsigned long
time_to_live	src/dpdk.h	/^    uint8_t time_to_live;     \/**< time to live *\/$/;"	m	struct:ipv4_hdr	typeref:typename:uint8_t
timeout	config/igb/e1000_hw.h	/^	u32 timeout;$/;"	m	struct:e1000_mbx_info	typeref:typename:u32
timer	dpdk/cy_timer.c	/^static struct rte_timer timer;$/;"	v	typeref:struct:rte_timer	file:
timer_hz	dpdk/cy_2p1q.c	/^static uint64_t timer_hz;$/;"	v	typeref:typename:uint64_t	file:
timer_hz	dpdk/cy_base.c	/^static uint64_t timer_hz;$/;"	v	typeref:typename:uint64_t	file:
timer_hz	dpdk/cy_func.c	/^static uint64_t timer_hz;$/;"	v	typeref:typename:uint64_t	file:
timer_hz	dpdk/cy_func_multicore.c	/^static uint64_t timer_hz;$/;"	v	typeref:typename:uint64_t	file:
timer_hz	dpdk/timer_test.c	/^static uint64_t timer_hz;$/;"	v	typeref:typename:uint64_t	file:
timespec_less	src/sche.c	/^int timespec_less(const struct timespec* t1, const struct timespec* t2)$/;"	f	typeref:typename:int
tmreg_lock	config/igb/igb.h	/^	spinlock_t tmreg_lock;$/;"	m	struct:igb_adapter	typeref:typename:spinlock_t
tncrs	config/igb/e1000_hw.h	/^	u64 tncrs;$/;"	m	struct:e1000_hw_stats	typeref:typename:u64
tor	config/igb/e1000_hw.h	/^	u64 tor;$/;"	m	struct:e1000_hw_stats	typeref:typename:u64
tot	config/igb/e1000_hw.h	/^	u64 tot;$/;"	m	struct:e1000_hw_stats	typeref:typename:u64
total_bytes	config/igb/igb.h	/^	unsigned int total_bytes;	\/* total bytes processed this int *\/$/;"	m	struct:igb_ring_container	typeref:typename:unsigned int
total_length	src/dpdk.h	/^    uint16_t total_length;    \/**< length of packet *\/$/;"	m	struct:ipv4_hdr	typeref:typename:uint16_t
total_packets	config/igb/igb.h	/^	unsigned int total_packets;	\/* total packets processed this int *\/$/;"	m	struct:igb_ring_container	typeref:typename:unsigned int
tpr	config/igb/e1000_hw.h	/^	u64 tpr;$/;"	m	struct:e1000_hw_stats	typeref:typename:u64
tpt	config/igb/e1000_hw.h	/^	u64 tpt;$/;"	m	struct:e1000_hw_stats	typeref:typename:u64
transmission_time	src/flow.h	/^    long transmission_time;$/;"	m	struct:flow	typeref:typename:long
trusted	config/igb/igb.h	/^	bool trusted;$/;"	m	struct:vf_data_storage	typeref:typename:bool
tsctc	config/igb/e1000_hw.h	/^	u64 tsctc;$/;"	m	struct:e1000_hw_stats	typeref:typename:u64
tsctfc	config/igb/e1000_hw.h	/^	u64 tsctfc;$/;"	m	struct:e1000_hw_stats	typeref:typename:u64
tstamp_config	config/igb/igb.h	/^	struct hwtstamp_config tstamp_config;$/;"	m	struct:igb_adapter	typeref:struct:hwtstamp_config
tx	config/igb/igb.h	/^	struct igb_ring_container rx, tx;$/;"	m	struct:igb_q_vector	typeref:struct:igb_ring_container
tx_buffer_info	config/igb/igb.h	/^		struct igb_tx_buffer *tx_buffer_info;$/;"	m	union:igb_ring::__anon94720dd3020a	typeref:struct:igb_tx_buffer *
tx_flags	config/igb/igb.h	/^	u32 tx_flags;$/;"	m	struct:igb_tx_buffer	typeref:typename:u32
tx_hwtstamp_skipped	config/igb/igb.h	/^	u32 tx_hwtstamp_skipped;$/;"	m	struct:igb_adapter	typeref:typename:u32
tx_hwtstamp_timeouts	config/igb/igb.h	/^	u32 tx_hwtstamp_timeouts;$/;"	m	struct:igb_adapter	typeref:typename:u32
tx_itr	config/igb/igb.h	/^	u16 tx_itr;$/;"	m	struct:igb_adapter	typeref:typename:u16
tx_itr_setting	config/igb/igb.h	/^	u32 tx_itr_setting;$/;"	m	struct:igb_adapter	typeref:typename:u32
tx_loop	dpdk/cy_func.c	/^void tx_loop(int *num_missed_deadlines, int *num_failed, float *through_put, long *hw_timestamps/;"	f	typeref:typename:void
tx_loop	dpdk/cy_func_multicore.c	/^int tx_loop(void *rte_args)$/;"	f	typeref:typename:int
tx_loop_args	dpdk/cy_func_multicore.c	/^struct tx_loop_args$/;"	s	file:
tx_pkt_filtering	config/igb/e1000_hw.h	/^	bool tx_pkt_filtering;$/;"	m	struct:e1000_mac_info	typeref:typename:bool
tx_queue_prio	config/igb/igb_main.c	/^enum tx_queue_prio {$/;"	g	file:
tx_rate	config/igb/igb.h	/^	u16 tx_rate;$/;"	m	struct:vf_data_storage	typeref:typename:u16
tx_ring	config/igb/igb.h	/^	struct igb_ring *tx_ring[16];$/;"	m	struct:igb_adapter	typeref:struct:igb_ring * [16]
tx_ring_count	config/igb/igb.h	/^	u16 tx_ring_count;$/;"	m	struct:igb_adapter	typeref:typename:u16
tx_stats	config/igb/igb.h	/^			struct igb_tx_queue_stats tx_stats;$/;"	m	struct:igb_ring::__anon94720dd3030a::__anon94720dd30408	typeref:struct:igb_tx_queue_stats
tx_syncp	config/igb/igb.h	/^			struct u64_stats_sync tx_syncp;$/;"	m	struct:igb_ring::__anon94720dd3030a::__anon94720dd30408	typeref:struct:u64_stats_sync
tx_syncp2	config/igb/igb.h	/^			struct u64_stats_sync tx_syncp2;$/;"	m	struct:igb_ring::__anon94720dd3030a::__anon94720dd30408	typeref:struct:u64_stats_sync
tx_timeout_count	config/igb/igb.h	/^	u32 tx_timeout_count;$/;"	m	struct:igb_adapter	typeref:typename:u32
tx_timeout_factor	config/igb/igb.h	/^	u8  tx_timeout_factor;$/;"	m	struct:igb_adapter	typeref:typename:u8
tx_work_limit	config/igb/igb.h	/^	u16 tx_work_limit;$/;"	m	struct:igb_adapter	typeref:typename:u16
txcw	config/igb/e1000_hw.h	/^	u32 txcw;$/;"	m	struct:e1000_mac_info	typeref:typename:u32
txring_txq	config/igb/igb.h	/^static inline struct netdev_queue *txring_txq(const struct igb_ring *tx_ring)$/;"	f	typeref:struct:netdev_queue *
type	config/igb/e1000_hw.h	/^	enum e1000_bus_type type;$/;"	m	struct:e1000_bus_info	typeref:enum:e1000_bus_type
type	config/igb/e1000_hw.h	/^	enum e1000_mac_type type;$/;"	m	struct:e1000_mac_info	typeref:enum:e1000_mac_type
type	config/igb/e1000_hw.h	/^	enum e1000_nvm_type type;$/;"	m	struct:e1000_nvm_info	typeref:enum:e1000_nvm_type
type	config/igb/e1000_hw.h	/^	enum e1000_phy_type type;$/;"	m	struct:e1000_phy_info	typeref:enum:e1000_phy_type
type	config/igb/igb.h	/^	enum igb_tx_buf_type type;$/;"	m	struct:igb_tx_buffer	typeref:enum:igb_tx_buf_type
type_of_service	src/dpdk.h	/^    uint8_t type_of_service;  \/**< type of service *\/$/;"	m	struct:ipv4_hdr	typeref:typename:uint8_t
type_tucmd_mlhl	config/igb/e1000_82575.h	/^	__le32 type_tucmd_mlhl;$/;"	m	struct:e1000_adv_tx_context_desc	typeref:typename:__le32
udp	config/igb/igb_main.c	/^		struct udphdr *udp;$/;"	m	union:igb_tso::__anon3998ccb2020a	typeref:struct:udphdr *	file:
udp.o	src/makefile	/^udp.o: udp.c udp.h system.h flow.h$/;"	t
udp_hdr	src/dpdk.h	/^struct udp_hdr$/;"	s
unlock	config/igb/e1000_hw.h	/^	s32 (*unlock)(struct e1000_hw *hw, u16 mbx_id);$/;"	m	struct:e1000_mbx_operations	typeref:typename:s32 (*)(struct e1000_hw * hw,u16 mbx_id)
update	config/igb/e1000_hw.h	/^	s32 (*update)(struct e1000_hw *);$/;"	m	struct:e1000_nvm_operations	typeref:typename:s32 (*)(struct e1000_hw *)
upper	config/igb/e1000_82575.h	/^		} upper;$/;"	m	struct:e1000_adv_rx_desc::__anon265ab8310208	typeref:struct:e1000_adv_rx_desc::__anon265ab8310208::__anon265ab8310708
usage	src/listener.c	/^void usage(char *progname)$/;"	f	typeref:typename:void
usage	src/talker.c	/^void usage(char *progname)$/;"	f	typeref:typename:void
usec_delay	config/igb/e1000_hw.h	/^	u32 usec_delay;$/;"	m	struct:e1000_mbx_info	typeref:typename:u32
uta_reg_count	config/igb/e1000_hw.h	/^	u16 uta_reg_count;$/;"	m	struct:e1000_mac_info	typeref:typename:u16
v4	config/igb/igb_main.c	/^		struct iphdr *v4;$/;"	m	union:igb_tso::__anon3998ccb2010a	typeref:struct:iphdr *	file:
v6	config/igb/igb_main.c	/^		struct ipv6hdr *v6;$/;"	m	union:igb_tso::__anon3998ccb2010a	typeref:struct:ipv6hdr *	file:
valid_led_default	config/igb/e1000_hw.h	/^	s32 (*valid_led_default)(struct e1000_hw *, u16 *);$/;"	m	struct:e1000_nvm_operations	typeref:typename:s32 (*)(struct e1000_hw *,u16 *)
validate	config/igb/e1000_hw.h	/^	s32 (*validate)(struct e1000_hw *);$/;"	m	struct:e1000_nvm_operations	typeref:typename:s32 (*)(struct e1000_hw *)
vendor_id	config/igb/e1000_hw.h	/^	u16 vendor_id;$/;"	m	struct:e1000_hw	typeref:typename:u16
version_ihl	src/dpdk.h	/^    uint8_t version_ihl;      \/**< version and header length *\/$/;"	m	struct:ipv4_hdr	typeref:typename:uint8_t
vf	config/igb/igb.h	/^	int vf;$/;"	m	struct:vf_mac_filter	typeref:typename:int
vf_data	config/igb/igb.h	/^	struct vf_data_storage *vf_data;$/;"	m	struct:igb_adapter	typeref:struct:vf_data_storage *
vf_data_storage	config/igb/igb.h	/^struct vf_data_storage {$/;"	s
vf_mac	config/igb/igb.h	/^	u8 vf_mac[ETH_ALEN];$/;"	m	struct:vf_mac_filter	typeref:typename:u8[]
vf_mac_addresses	config/igb/igb.h	/^	unsigned char vf_mac_addresses[ETH_ALEN];$/;"	m	struct:vf_data_storage	typeref:typename:unsigned char[]
vf_mac_filter	config/igb/igb.h	/^struct vf_mac_filter {$/;"	s
vf_mac_list	config/igb/igb.h	/^	struct vf_mac_filter *vf_mac_list;$/;"	m	struct:igb_adapter	typeref:struct:vf_mac_filter *
vf_macs	config/igb/igb.h	/^	struct vf_mac_filter vf_macs;$/;"	m	struct:igb_adapter	typeref:struct:vf_mac_filter
vf_mc_hashes	config/igb/igb.h	/^	u16 vf_mc_hashes[IGB_MAX_VF_MC_ENTRIES];$/;"	m	struct:vf_data_storage	typeref:typename:u16[]
vf_rate_link_speed	config/igb/igb.h	/^	int vf_rate_link_speed;$/;"	m	struct:igb_adapter	typeref:typename:int
vfs_allocated_count	config/igb/igb.h	/^	unsigned int vfs_allocated_count;$/;"	m	struct:igb_adapter	typeref:typename:unsigned int
vfs_lock	config/igb/igb.h	/^	spinlock_t vfs_lock;$/;"	m	struct:igb_adapter	typeref:typename:spinlock_t
vlan	config/igb/e1000_82575.h	/^			__le16 vlan;             \/* VLAN tag *\/$/;"	m	struct:e1000_adv_rx_desc::__anon265ab8310208::__anon265ab8310708	typeref:typename:__le16
vlan	src/flow.h	/^    int vlan;$/;"	m	struct:interface_config	typeref:typename:int
vlan_id	config/igb/e1000_hw.h	/^	u16 vlan_id;$/;"	m	struct:e1000_host_mng_dhcp_cookie	typeref:typename:u16
vlan_macip_lens	config/igb/e1000_82575.h	/^	__le32 vlan_macip_lens;$/;"	m	struct:e1000_adv_tx_context_desc	typeref:typename:__le32
vlan_tci	config/igb/igb.h	/^	__be16 vlan_tci;$/;"	m	struct:igb_nfc_input	typeref:typename:__be16
vlan_tci	src/dpdk.h	/^    uint16_t vlan_tci;            \/** [3pcp] + [1 (drop 0)] + [12 vlan id] **\/$/;"	m	struct:ether_hdr	typeref:typename:uint16_t
vlan_tpid	src/dpdk.h	/^    uint16_t vlan_tpid;           \/**< 0x8100 for VLAN *\/$/;"	m	struct:ether_hdr	typeref:typename:uint16_t
wake_up_time	src/flow.h	/^    struct timespec *wake_up_time;  $/;"	m	struct:flow	typeref:struct:timespec *
watchdog_task	config/igb/igb.h	/^	struct work_struct watchdog_task;$/;"	m	struct:igb_adapter	typeref:struct:work_struct
watchdog_timer	config/igb/igb.h	/^	struct timer_list watchdog_timer;$/;"	m	struct:igb_adapter	typeref:struct:timer_list
wb	config/igb/e1000_82575.h	/^	} wb;  \/* writeback *\/$/;"	m	union:e1000_adv_rx_desc	typeref:struct:e1000_adv_rx_desc::__anon265ab8310208
wb	config/igb/e1000_82575.h	/^	} wb;$/;"	m	union:e1000_adv_tx_desc	typeref:struct:e1000_adv_tx_desc::__anon265ab8310908
width	config/igb/e1000_hw.h	/^	enum e1000_bus_width width;$/;"	m	struct:e1000_bus_info	typeref:enum:e1000_bus_width
wol	config/igb/igb.h	/^	u32 wol;$/;"	m	struct:igb_adapter	typeref:typename:u32
word_size	config/igb/e1000_hw.h	/^	u16 word_size;$/;"	m	struct:e1000_nvm_info	typeref:typename:u16
work_limit	config/igb/igb.h	/^	u16 work_limit;			\/* total work allowed per interrupt *\/$/;"	m	struct:igb_ring_container	typeref:typename:u16
wr32	config/igb/e1000_regs.h	/^#define wr32(/;"	d
wrfl	config/igb/e1000_regs.h	/^#define wrfl(/;"	d
write	config/igb/e1000_hw.h	/^	s32 (*write)(struct e1000_hw *, u16, u16, u16 *);$/;"	m	struct:e1000_nvm_operations	typeref:typename:s32 (*)(struct e1000_hw *,u16,u16,u16 *)
write	config/igb/e1000_hw.h	/^	s32 (*write)(struct e1000_hw *hw, u32 *msg, u16 size, u16 mbx_id);$/;"	m	struct:e1000_mbx_operations	typeref:typename:s32 (*)(struct e1000_hw * hw,u32 * msg,u16 size,u16 mbx_id)
write	config/igb/igb_ethtool.c	/^	u32 write;$/;"	m	struct:igb_reg_test	typeref:typename:u32	file:
write_i2c_byte	config/igb/e1000_hw.h	/^	s32 (*write_i2c_byte)(struct e1000_hw *, u8, u8, u8);$/;"	m	struct:e1000_phy_operations	typeref:typename:s32 (*)(struct e1000_hw *,u8,u8,u8)
write_posted	config/igb/e1000_hw.h	/^	s32 (*write_posted)(struct e1000_hw *hw, u32 *msg, u16 size,$/;"	m	struct:e1000_mbx_operations	typeref:typename:s32 (*)(struct e1000_hw * hw,u32 * msg,u16 size,u16 mbx_id)
write_reg	config/igb/e1000_hw.h	/^	s32 (*write_reg)(struct e1000_hw *, u32, u16);$/;"	m	struct:e1000_phy_operations	typeref:typename:s32 (*)(struct e1000_hw *,u32,u16)
write_vfta	config/igb/e1000_hw.h	/^	void (*write_vfta)(struct e1000_hw *, u32, u32);$/;"	m	struct:e1000_mac_operations	typeref:typename:void (*)(struct e1000_hw *,u32,u32)
wvbr	config/igb/igb.h	/^	u32 wvbr;$/;"	m	struct:igb_adapter	typeref:typename:u32
xdp_prog	config/igb/igb.h	/^	struct bpf_prog *xdp_prog;$/;"	m	struct:igb_adapter	typeref:struct:bpf_prog *
xdp_prog	config/igb/igb.h	/^	struct bpf_prog *xdp_prog;$/;"	m	struct:igb_ring	typeref:struct:bpf_prog *
xdp_rxq	config/igb/igb.h	/^	struct xdp_rxq_info xdp_rxq;$/;"	m	struct:igb_ring	typeref:struct:xdp_rxq_info
xdpf	config/igb/igb.h	/^		struct xdp_frame *xdpf;$/;"	m	union:igb_tx_buffer::__anon94720dd3010a	typeref:struct:xdp_frame *
xoffrxc	config/igb/e1000_hw.h	/^	u64 xoffrxc;$/;"	m	struct:e1000_hw_stats	typeref:typename:u64
xofftxc	config/igb/e1000_hw.h	/^	u64 xofftxc;$/;"	m	struct:e1000_hw_stats	typeref:typename:u64
xonrxc	config/igb/e1000_hw.h	/^	u64 xonrxc;$/;"	m	struct:e1000_hw_stats	typeref:typename:u64
xontxc	config/igb/e1000_hw.h	/^	u64 xontxc;$/;"	m	struct:e1000_hw_stats	typeref:typename:u64
